(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    241386,       4483]
NotebookOptionsPosition[    240109,       4442]
NotebookOutlinePosition[    240452,       4457]
CellTagsIndexPosition[    240409,       4454]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
This script is a part of ANGEL project.
V 2.3.0
2018.02.10
(C) Vulpes Corsac\
\>", "Text",
 CellChangeTimes->{{3.698631723375579*^9, 3.698631756693108*^9}, {
  3.7077252372106056`*^9, 3.707725237272649*^9}, {3.7158449128202653`*^9, 
  3.715844913914028*^9}, {3.7158499927653675`*^9, 3.715849993655997*^9}, {
  3.7205058788107967`*^9, 3.720505882927745*^9}, {3.7205927287670374`*^9, 
  3.720592736690977*^9}, {3.727173746073786*^9, 3.727173752404873*^9}, {
  3.7271759496067257`*^9, 3.727175950803587*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Variables", " ", "clearing"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{3.698387665880822*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"importDir", " ", "=", " ", "\"\<ImportData\>\""}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Directory", " ", "for", " ", "importing", " ", "data"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"exportDir", " ", "=", " ", "\"\<ExportData\>\""}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Directory", " ", "for", " ", "exporting", " ", "main", " ", "data"}], " ",
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"exportRoundDir", " ", "=", " ", "\"\<RoundData\>\""}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Subdirectory", " ", "for", " ", "exporting", " ", "round", " ", "data"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"exportRounds", "=", "True"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.7158458496775885`*^9, {3.715847621079638*^9, 3.7158476232794*^9}, {
   3.7205047663972645`*^9, 3.7205047990031605`*^9}, 3.7205058689113717`*^9, {
   3.7271762863925233`*^9, 3.727176290470763*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"phaseColumnName", "=", "\"\<Theta\>\""}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Name", " ", "of", " ", "column", " ", "in", " ", "data", " ", "file", " ",
     "with", " ", "phase"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"phaseSDColumnName", "=", "\"\<ThetaSD\>\""}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Name", " ", "of", " ", "column", " ", "in", " ", "data", " ", "file", " ",
     "with", " ", "phase", " ", "standart", " ", "deviaton"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"frequencyColumnName", "=", "\"\<Fext\>\""}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Name", " ", "of", " ", "column", " ", "in", " ", "data", " ", "file", " ",
     "with", " ", "frequency"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"timeColumnName", "=", "\"\<Time\>\""}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Name", " ", "of", " ", "column", " ", "in", " ", "data", " ", "file", " ",
     "with", " ", "time"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"intervalColumnName", "=", "\"\<Interval\>\""}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Name", " ", "of", " ", "column", " ", "in", " ", "data", " ", "file", " ",
     "with", " ", "interval"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"roundColumnName", "=", "\"\<Round\>\""}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Name", " ", "of", " ", "column", " ", "in", " ", "data", " ", "file", " ",
     "with", " ", "round"}], " ", "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.715846606619445*^9, 3.715846618961091*^9}, {
  3.7158466858182354`*^9, 3.7158467312481737`*^9}, {3.71584687136471*^9, 
  3.7158468766154504`*^9}, {3.727008136376932*^9, 3.727008142377709*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Kprt", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1."}], ",", 
     RowBox[{"-", "1."}], ",", 
     RowBox[{"-", "1."}]}], "}"}]}], ";", 
  RowBox[{"(*", " ", 
   RowBox[{
    SuperscriptBox["K", "prt"], " ", "for", " ", "all", " ", "resonances"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7158485963553047`*^9, 3.7158486094612885`*^9}, {
  3.715848641768472*^9, 3.7158486434942265`*^9}, {3.7158502837267647`*^9, 
  3.715850284917617*^9}, {3.7271723254048285`*^9, 3.727172329430994*^9}, {
  3.727177086702186*^9, 3.727177088493457*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"importDataMask", "=", "\"\<Continuous*.dat\>\""}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Mask", " ", "to", " ", "search", " ", "kinetics", " ", "data", " ", 
    "files"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.715845528824304*^9, 3.715845581067852*^9}, {
   3.7158456413051305`*^9, 3.7158456464833126`*^9}, 3.715845836392148*^9, {
   3.7158459290019464`*^9, 3.715845930288857*^9}, {3.7158483887989655`*^9, 
   3.715848408227812*^9}, 3.7158485064203143`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"fileNames", " ", "=", " ", 
    RowBox[{"FileNames", "[", 
     RowBox[{"importDataMask", ",", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], ",", "importDir"}], "}"}], 
       "]"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Getting", " ", "all", " ", "file", " ", "names", " ", "that", " ", 
    "matches", " ", "template", " ", "in", " ", "import", " ", "directory"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"filesAmmount", "=", 
    RowBox[{"Length", "[", "fileNames", "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Ammount", " ", "of", " ", "kinetic", " ", "files"}], " ", 
   "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7158454475529623`*^9, 3.715845465562009*^9}, 
   3.715845586799948*^9, {3.715845865280868*^9, 3.7158459456380215`*^9}, {
   3.7158460097504587`*^9, 3.7158461063620334`*^9}, {3.7158464881724215`*^9, 
   3.7158465260504866`*^9}, {3.720504221124117*^9, 3.7205042215634284`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"DataNames", "=", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Import", "[", 
        RowBox[{"fileNames", "[", 
         RowBox[{"[", "fileNumber", "]"}], "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"fileNumber", ",", "filesAmmount"}], "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Getting", " ", "data", " ", "headers"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"DataWithNoIntervalSelection", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Import", "[", 
       RowBox[{"fileNames", "[", 
        RowBox[{"[", "fileNumber", "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ";;"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"fileNumber", ",", "filesAmmount"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"(*", " ", 
   RowBox[{"Getting", " ", "experimental", " ", "data"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"DataOrigins", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"(*", " ", 
   RowBox[{
   "File", " ", "number", " ", "and", " ", "interval", " ", "number", " ", 
    "will", " ", "be", " ", "here"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"DataRounds", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Rounds", " ", "in", " ", "a", " ", "dataset", " ", "will", " ", "be", " ",
     "here"}], " ", "*)"}], "\[IndentingNewLine]"}]}], "Input",
 CellChangeTimes->{{3.715846111357393*^9, 3.715846214215562*^9}, {
  3.715846530573388*^9, 3.7158465333651075`*^9}, {3.715846971202183*^9, 
  3.715846995300891*^9}, {3.715847248426689*^9, 3.7158472802560472`*^9}, {
  3.7205038842583337`*^9, 3.7205039167970233`*^9}, {3.7205916665593343`*^9, 
  3.7205916997694488`*^9}, {3.7271736318690567`*^9, 3.7271736369113646`*^9}, {
  3.7271767538304057`*^9, 3.7271767727286353`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Data", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"(*", " ", 
   RowBox[{"Here", " ", "actual", " ", "data", " ", "will", " ", "be"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"fileNumber", "=", "1"}], ",", 
    RowBox[{"fileNumber", "\[LessEqual]", "filesAmmount"}], ",", 
    RowBox[{"fileNumber", "++"}], ",", 
    RowBox[{"(*", " ", 
     RowBox[{"For", " ", "all", " ", "files"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Intervals", "=", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"DataWithNoIntervalSelection", "[", 
        RowBox[{"[", 
         RowBox[{"fileNumber", ",", "All", ",", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{
             RowBox[{"DataNames", "[", 
              RowBox[{"[", "fileNumber", "]"}], "]"}], ",", 
             "intervalColumnName"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}], "]"}]}], 
     ";", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Get", " ", "all", " ", "the", " ", "intervals", " ", "in", " ", "the", 
       " ", "file"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"IntervalNumber", "=", "1"}], ",", 
       RowBox[{"IntervalNumber", "\[LessEqual]", 
        RowBox[{"Length", "[", "Intervals", "]"}]}], ",", 
       RowBox[{"IntervalNumber", "++"}], ",", 
       RowBox[{"(*", " ", 
        RowBox[{"For", " ", "all", " ", "intervals"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"IntervalData", "=", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"DataWithNoIntervalSelection", "[", 
            RowBox[{"[", "fileNumber", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"Position", "[", 
                 RowBox[{
                  RowBox[{"DataNames", "[", 
                   RowBox[{"[", "fileNumber", "]"}], "]"}], ",", 
                  "intervalColumnName"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], 
             "\[Equal]", 
             RowBox[{"Intervals", "[", 
              RowBox[{"[", "IntervalNumber", "]"}], "]"}]}], "&"}]}], "]"}]}],
         ";", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Get", " ", "data", " ", "for", " ", "a", " ", "single", " ", 
          "interval"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"DataOrigins", ",", 
          RowBox[{"\"\<File \>\"", "<>", 
           RowBox[{"ToString", "[", "fileNumber", "]"}], "<>", 
           "\"\< Interval \>\"", "<>", 
           RowBox[{"ToString", "[", "IntervalNumber", "]"}]}]}], "]"}], ";", 
        RowBox[{"(*", " ", 
         RowBox[{"Appending", " ", "data", " ", "origins"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"Data", ",", "IntervalData"}], "]"}], ";"}]}], 
      RowBox[{"(*", " ", 
       RowBox[{
       "Append", " ", "interval", " ", "data", " ", "to", " ", "actual", " ", 
        "data", " ", "table"}], " ", "*)"}], "\[IndentingNewLine]", "]"}]}]}],
    "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7158477024518957`*^9, 3.7158478607844453`*^9}, {
  3.715847923824157*^9, 3.7158479382824*^9}, {3.7158479924714403`*^9, 
  3.7158480436046333`*^9}, {3.7158482726559715`*^9, 3.7158483117133236`*^9}, {
  3.7158483474537396`*^9, 3.7158483856843195`*^9}, {3.7158484177298603`*^9, 
  3.715848495411806*^9}, {3.7205039266957874`*^9, 3.7205040150155916`*^9}, {
  3.7205043033178744`*^9, 3.7205043064684267`*^9}, {3.727176457543348*^9, 
  3.7271765085455723`*^9}, {3.727176605028593*^9, 3.727176636977894*^9}, {
  3.7271767792196736`*^9, 3.7271767804925737`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"phaseTimeData", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Cutting", " ", "dependency", " ", "of", " ", "phase", " ", "from", 
         " ", "time", " ", "just", " ", "to", " ", "show"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Data", "[", 
         RowBox[{"[", 
          RowBox[{"fileNumber", ",", "All", ",", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{
              RowBox[{"DataNames", "[", 
               RowBox[{"[", "fileNumber", "]"}], "]"}], ",", 
              "timeColumnName"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Data", "[", 
         RowBox[{"[", 
          RowBox[{"fileNumber", ",", "All", ",", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{
              RowBox[{"DataNames", "[", 
               RowBox[{"[", "fileNumber", "]"}], "]"}], ",", 
              "phaseColumnName"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"fileNumber", ",", "filesAmmount"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phaseSDTimeData", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Cutting", " ", "dependency", " ", "of", " ", "phase", " ", 
         "standart", " ", "deviation", " ", "from", " ", "time", " ", "just", 
         " ", "to", " ", "show"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Data", "[", 
         RowBox[{"[", 
          RowBox[{"fileNumber", ",", "All", ",", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{
              RowBox[{"DataNames", "[", 
               RowBox[{"[", "fileNumber", "]"}], "]"}], ",", 
              "timeColumnName"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Data", "[", 
         RowBox[{"[", 
          RowBox[{"fileNumber", ",", "All", ",", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{
              RowBox[{"DataNames", "[", 
               RowBox[{"[", "fileNumber", "]"}], "]"}], ",", 
              "phaseSDColumnName"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"fileNumber", ",", "filesAmmount"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.715846451342945*^9, 3.715846468542735*^9}, {
  3.715846538055955*^9, 3.715846582497077*^9}, {3.715846758361905*^9, 
  3.7158468228273244`*^9}, {3.715846858000423*^9, 3.7158468614798813`*^9}, {
  3.7158469220649962`*^9, 3.7158469223452053`*^9}, {3.715847002473178*^9, 
  3.715847082161121*^9}, {3.7271765140407248`*^9, 3.7271765249747705`*^9}, {
  3.7271766418346615`*^9, 3.7271766481779995`*^9}, {3.727176726529216*^9, 
  3.7271767311655*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{"phaseTimeData", ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Time\>\"", ",", "\"\<Phase\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Phase(Time) dependency\>\""}]}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"phaseSDTimeData", ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Time\>\"", ",", "\"\<Phase SD\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<Phase Standart Deviation(Time) dependency\>\""}]}], "]"}]}], 
   "}"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Plotting", " ", "data", " ", "from", " ", "above"}], " ", "*)"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7158468282199306`*^9, 3.715846849394323*^9}, {
  3.715846926415874*^9, 3.7158469358988914`*^9}, {3.715847089954613*^9, 
  3.7158471007167645`*^9}, {3.720591315565102*^9, 3.720591383339161*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.002777777777777778], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxEXWV0U9sSDu6uFy3u7tqDuyQpUEoNr6ApkgK10NDQ0JAmTZq0QIvL5eKu
hcvF3b1FirsVP+98M5v1frFmnTQkW+aTmb1TY8xUzfjcKpVqRk2VCv+qVBnV
Hq1+63n2qJwWdHVohkqVXsl/30fPtAoqqfUlxFmrTy/P8Zw5RJWx+Rpi08to
xw96XpafDzkwQ/Z830flsZj+fpz17dpckq27SgqjOKP6tqV5pHtZcvVGFDc3
9TDnk6wBqsBa9H59R5eeX0A6nSkf/krPD5xaOa2QdPuX7DmXnjdu2ca/iNRu
qRzV6zb9/0dytMWk/I1Vge+vI348dF+/EtKx7XLACYrjc21cUpL//3uIfWrH
OUtJlTbI8gP6+6SbQxJKS91KqwL1N+n9rtdeUEYaZpXlvlmIl23+GFFWwved
eh+x7Z+Ts8pJpVLlw4G3EJ8enTi5vBR9SK7uSc+Hn9cHV5AKz1Rl2R4i7n92
0JiKUpt9ctpMigNXV/H5SwrOkeWi2Yi9Vr7XVJIaN1V5lH+MOGReRv/K9Hna
P0PsP8fRo4r0fKdc/Sy9/sWTeZ5VJUNtVUbJF4j3FfLuUE068VPOPPkK8cWH
dVtUl1xGZQ4oHvPuV1kPqXSsyqP1O8S+U4MSPWg8tK8Rr6jjW6KGtOOHHFX+
A+Ilq46ba0gJdrm6ip7v+d2wQE0a7zqfEW+LcMyvKb3+LaclfEHc5cU8uSZ9
n41faXx7PphTS4rwV6kufUecveXkl1qS7JYDmv5CPL3qFl1taWCMfHiijLj6
+MTXtaVlW+U0Qy61Esd9iQypI304JgcUy4249NgJT+pIWF+fCiJ+nv/G2LrS
5Tey/FchxEc29HlQV9rSRpXxpRjigRWa+dWTSlVTRXcvgzhouv1mPenrO/mw
f0XEnuXyDq8v/eigkqS/EJ+JeXmpvlTsmixnVUf89M6QQQ2kb8NVgda6iB/4
7DvVQOrxWfY01UM8+cTyXg0lzT9y9Vv1EU/oXfRoQxqPf5ojvnDjW9dGUvNP
cuawNohPDR+3vxF9vrYdERcv5t2hsTR3rsqjW0/E/147v7ux9LKyKuNgN8QH
vDq0biLd763KWNIfsf3r+q1NpP2r5Op1tYhDllRq1lQaEKeSGg1HfKVJwY1N
pbtjVVkDxyD+6/GPBs2kk+Fy9RMTEcfMfL6mmXTFS5V+ZoYSR3f5vr5Uc6n2
Ern69jmI93XIHNJcyndcPpxpQNwuvKyluTT4qRzw12L8vY9X8XPNJa8yqoyQ
JYgjmhUs2oL+vkwaYq8r+n4tpBXf5eqPtyGevUlnaiH9PVWlancYsfFO7eMt
pAdr5Mz+5/D+HVal5m0pxbdSqTQ3EO96dLF7S84Hz/D6W4dOx7SU5n2VA6rn
IB7+Wz7cUuq+WE5rW0SjvD51x8dfLaV/26o8nldUYtXQiJDOraSmpVSq4/Xw
3NHKf04rqcIJubqtI57HGMvvbSV535KjXmgRtxmckNNKmnVWlpuMw+t7zPVs
01rKfisHDJyH55p173Wtpb77ZfmEA3H+6UFbW/N+W4vXl11W6W1rSdooH57w
n4bHq2kbmi/fW4h7rTke2ka6Fa1SLf2C2Oy7b30b2s+uMlol9qzT4lkbyk8T
myuxqtHs53XbSrEFVOkZffC8/Knl49tKJfbImRcnILYXvLGyrVQmlypQE4m4
ZN+iD9tKI3xV0kY34oS4bh7tJP1mObPqAbzflS5t/NtJGwqpAo3n8bzip/pL
2kl7eqpU+mw8r1fjzq12tJ//+434znN1xfZSrgjZ83dpL+X1i7edHN5eerRQ
PtyxiRKr5uaNcbSXptZSBS5rg+cZ+2ZcaU/5cV13PL/wtG6pDtK+eqqsE1ov
Hp8hHaSi3qqM3D6IE+8NSeggHbkoR+0egzitcO4zHaS2Hipp7Xj8/aZ2Owp2
5PwxDs8/vl7bu6M0ZJCyMwPw/ExixdiOUq9RqqzwUXgesrHPkY7S52KqrOIa
PA+/9e13R17PffH80OLXnTtJZ3qpAvt3xPNzB9LmdJI6PZHl3i28xHroJLX0
UUWfqITXH+9UOKeT9PaBHHWvFOKiH3617iwdfi2nrcX4RFeqvkXXmdZLsdeI
3x/12NJZqtBflfXxKsZP9e7y686Sa4oqPfawlvdH4y40ntXW4fVBMRkhXaRx
LVTSZIeW98e6LjReT2O0vD+edKH8/mqqlr9v7a5SiJ8qvVog4iifxWO6SkGJ
csDcAVr+/su7Sn4mVbpfB8RPX87L7Cr995dK5fbQ8vev4sl4UErL+8HHU0pV
q6KTcilx1srG27JHSGUnqlSrrij5N6Nat8DPI+j7lLmoxB5bmt7L6y1dMskB
fS8gPzfqYS7rLXUeqEpvDzwNPNC8YG1v+jypwOf0VOV/8JbMW2TPaZeHYv06
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
tR56zrefxPj20dN6ffVV8I8BetrfW76J8R2ip/w2XKVm/qHRk9+TL6/I98P1
0uhn8uEz0ON7qu046aOXpi1UqZrDjy85/+1af/78xwqI/D5GL7VfoMpqD7/9
5PIZ9gk8HveLC/wM0dP6nlWM9Hee4VP07KeXVfN61ulpfRUtr2Y+MkvP/QhV
BJ7O0UvnV8tRX6HXsb4j9eS/aWuoOd8b9LR/P6Mej3xv1JP/cKAh+RFL3y7U
k797B3iO9Z+gF/VfNc9HIn+e3B0F/jr05H/qUH8Hn3brqd+kYl/gbaTbvVRP
+eHJADXPz3I9+30jBB6v1hMf+RUg+M16PfGZdsB35P9/9FLQHFVG8emCz2zV
E5/7PFfwmR166hd4HSH4yh491StWmdSc7w/oOV8mCbzN0JMe/LFE8JdjeqpH
jPhHzfnppJ7wbuFuNa/3s3ril1f+VXN+uij20xUxH1f1pHeKPxHjf1NP+cXv
rZrX+1095+NcGuaHmXqul5fR8Pg+0lN/iEdd+I3X1h5/qpfGnpHTUttpGE9f
8v45PUjD4/dWT/0WWYFKfHLW63kf9VSvODUb+H9g5bQcPeF3LosSt9+Ro/2h
J72VtlzD4ynrpeftVVmTge/gN3nCaf35X9fwei8QTvh074OG13vhcPJ/i0A/
Yb0XD5dWzpYDutdBvjenHisdzv41/Fas9/Lh5NcXQb0V410pnD5fg7laxtdq
4VJyQZXKDn8X+FoznOqd7zZpmS/WDSe8f3BOy+PbMJzqTZWhN9+t/Vy/aTiv
/29a1jMtw9lfKObF4902nPL10JpevL47hJMfn7899Ow97aMu4cQ/ZfjxWL/d
wkmv5Azy4nzSK1yqVV2VddXXi/N3v3Dyq9uhXo7xHhROfH854b0y3upw0g+d
Rgt8HRZOfuErP4GvI8OZDxLeK+PrF07+9JzhXswfA8Op/mmFHw98Hcefd00H
L9Z/QeGkl5418uJ8MYnjoOrwH5o8mDMtnPVwSS9erzPCKX/3+inwVB/O9eLn
Aj/n8fi8g14HHkaHEz9rgHo79GBsOOUnPfx45IO4cPL3XKifgI+Ywyl/Fo7W
8vgtDqd+q13TtTx+9nDKl20DBB9MDud+oP5a5uOp4bSe+7fSsr5JC6d6w/1a
WtYzK8PZLymhZT2zlud3syzW598cD3kK/tmsaO7tEfT+0gWhp3dFEF9KuSj0
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
TMRfrkDPT7NVahZvYj0KfrCk555qi0zcn+8l8NliIj6dD/102C+LTeQPBYJf
YDwSTaRPlsKPD3ry66rdRHhxDeffoI8dJuKfn6p48fpINpF/5wd8x/5w8/w2
/Cz0cKqJ+MWHJ1rWA0t5vS2CXsf3TzMR/of/J/B0uYnyaSD644E/K/nzZaVq
Wa+tNrE+j9XyfllrYjyGP4P8sd7E+gz1duSPv018HwTWB/y1f0zkN33A+Tfo
4c0m6j+oVF3L+2WLifv5ygh/Zxuvr9Oot4OP7zBRf2+1NxpeH7tMzD9va3j+
9seTXu90TeDBwXjuP4Y/D71yOJ7OVy05L/ztI/F8vviSwId/46k//OcloSf/
iyd+fJH63RW+dSKe7yfA+2M+T8VTPtZCf0OfnInn89HQ51jvZ+NpPa28KfjF
+Xg+/3Bd+N0X46l+2CtL+N2X4/n8U6bQj1fjGd/+8I3r8aTX198ReHsznv2j
e4J/3I6n/aC+L/D2bjzx07zQ48CT+/HcH4QY+SIrnvixGu+P/fFQfF88x/p4
zO+XmC30/ZN4ygcVqZ7+36Axz+LZT38p/PAX8cRHop4Jff8qnvbX4xcCj9/E
kz5pjBj64108+f338Xrsnw/xtN7LvRb4/Cme8vPu98JP+RJP8z3qg/BTvsYT
P2n6/k99IZ7yyYJvAq9/xPP6Q70d++tXPPkXg74KvS7z/IWpBB7lMtP8TAZ+
Y7zzmMlvPZZb4FE+M+mhftDnyNcFzKTvShcR+r2QmfoxWyJGvi5i5vwK/x36
o5iZ9w/0OvhwCTP7aTjfDv1Rysz3N0CvI1+XMVO/+K6/BH6VM9N8XPIQfngF
M/HHGvDfkZ/+MvP9AMBz5O/KZsLzRs3UPN5VzbT+qwDfsb6r8/cp5Cn0dw0z
8ZNP3QTe1zKzn9FT+OF1zFR/e4P+OfCjembqX/9vhKg/1DeT/sk9Uujxhvz9
a4wR9YfGZvZTQ4XebmomPyhzmtDbzc2Ub0+QflfyX0v+/rOMwh9vbaZ+6BU2
4Z+0NVO/3aA0ocfbm/m80Xrhn3Q0c3/OVjEfnc3UD3cwQ/CJrmbyZ5aeF/pc
4jjivqhfdDfzeYPnauanPc3sv/wS/kpvM/m9NQsLf72vmfrHhpYXeNvfTP3n
t5ppmI8NNFM/XLfuwm8fbOZ+JNxfA34/lNdb7clCr2t4PA3zhV73MpOfUTlV
+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
n3Gnxf7D/YJfyzTzOyPyAe4vONm28IizVj7vgn4L7KdzVupPW9dDy/vpPL/f
W/RfKvm79wUr1ytxH52S7/tctPJ5feh1Zb6kS1bqv/2N+2aV+epymcdn52sN
768rVj5PifuWgNdXraSvcoGvLmrcavv1RKpP9Yaf3nFG2U03Evm82TWR328m
sl7D+Tld/XurbiVyPyTdJzftUNrtRNovz4GXmM87ieT3778u8vvdRNrvgwV+
2+8lkh9WBX554z5jrPcT+T5f8IOfwV3iMxPp827H6zdsrWbMSqR6cxr89NI9
ihoeJNJ+mn+H8TvqYSLVZ78A7x+Pfzr3USLhXcI9xvM5jxO5/xL4jOvksxOp
f+MX6t/KftU9SaT6qPUJ4/vUp4nER7s/ZHwPfZZIemU2/HbM//NE6i8wwW9X
9ufYF4l0/lGPWNmf/i8Tqf5XEHiu7M+RrxJpvS8Bfhd//cvrdSLxpTrA61mR
L9VvEvl+iFeM94PeJnI9DPis7Ne+7xL5fmHguWHY4u7vE7nfEP3tmO8PiXQe
wvGZ8bzTRx6PXai/I99+4u9zFP66Mt+tPidSveZ+Ds930y+JfD4I+r1w8tt6
OYl8f+13wde+JvL5JPjt4GvfEkk//IQ+R/79nsj+OPrhlfn+60ci4fe/wPv0
23PK/kyk/LQEejzp5pBiv8Tfl2Z8L/I7ke9rhh+PfCwn0nr/Wp7xNZfKxucn
KjC+/1JifL7V0OfIv7ls7Fegvi59Xv8+t43Pq8KPPz068XUeG5+/wnl25N+8
NvI369VlPH2Yz0b3wQ6DH1/pbf27+W18vwrq669K5b1ewEb7sVlXxr8LBfn9
WsOfRz4tZOP7jYHn/nMc/xa2sZ+HejvyZxEb80XodeTPoja+jxh4Dj5VzMb1
MJx3w34rbuPzDcB37McSNsqfBYDvkQ0LbixpI798KfS6Ml9rS9kov/xMEHyr
tI3PxycKvlXGRvialMrz4y5ro/k+tgb6fIrdVc5G/WE/tqt5f5a3cT/IMZ6v
hAo2Pq+M+2YV/FxU0cZ+Bc6/YX/+ZeP7j+DHI99WstF6LYj+eOTXyjbuD0B/
PPhQFRvfJ1JFQ/x6ZlUb3/eA82/Yj9VsfH7LU0PzN7m6jc+/A98VvAzx4PGo
h/volPmcUMNG++tnrIb5Tk0b3y+E++jAd2rZ+P423EenzOfw2ja+jxJ+fMuT
Odo6NtpP26B/sP/q2sjvmv9Dw/ynno37AdDfhP1Y30b6Lhb5GfuxgY36MfoP
EPm4IY/3J9xHh5+PaGTj800GLeunxjauZ6xQ4iB1h9ZNxPvh/Bv0U1Nen08v
aHk/NrMRnltwXyr4T3Mb99t81bJeamEjPB4Ifxr8p6WN8x/8ePCfVjbiEyG4
v1XhtyVa26i/dVsnL+LThdrY+P5h6Gnoo7Y28kvqAZ+VfJu7nY30VAL655T8
+kOJ6T4W1M+x/9rbuP8P/XYKn33XwUb+0DHwAfCfjja+3w2vV/hpdicb37eA
/ngFLx935vU2GHxDmb/MLjbuh0d/PPZjV7E/0D8AvuNpo/6gHjgPAL4j8frt
BHyHXurG43kM/Qh9lx8/091G9V/LQ8bT4z1sfD8jzrcr/PRITxudxwnF+YSi
R2cd6mXjegTmR6MPOdDbxveP2bWsh/rYSI99Qv9EeXelzX1tlN86h2p5//az
8f1bI3m+Vva3kb7v3kXL+3EAf55NOP+G/TfQRvx0cw0t65FBNjrPcLColvXI
YBvh+zKsR+ifITbC3+3wl6BHhnL+ybzJ/HSe2sbnpc8qsU/tuPLD7MSPqgOv
sR6G20m/3wLeYz2MsLO+gb7HevC283nhG0I/j7STPovD8zlXv/1WYtQ3H1wR
etnHzvwP+K/s76+j7ORPnAeeK3rno6+d73MEH0B+9rMz38Fz5Gd/O/tHd4S+
DrCTPzIEeA5+HGgnPpEKfx/rZ7Sd7xfBc6yXMXaav7/vCT091s5+KZ4rfOvG
ODvx0Qn3RTzezv1RDxl/L02ws7+JWNE/ZyfayR/Z+Ujo6yA717PBD8CXg+3U
TzEIMdZLiJ37jbMZb/eG2qmeZn4m9PMkO9/X80rEk+2U34Y9FXp6ip38zD7v
BN+aaid8iHrPeLx2mp3P38Fvv7v39PLpdu5nBH4r+LtUZ6f6dU3EWE9hdtKz
98EHoKdn2LmfBviO/D3Tzvc1/GY/ZMEsO+mbi9Dv4FOz7eyH5BL5W29nPQb/
fcrl87PD7YwfhYWenWPn+2uLiHiunfG8uNC38+yEf5PRLwc+HWHn+0SA58jn
kfz3b8sK/Rplp/ybB377pLV9Rkfb+f5s9Mvh53xieLxO1BH61WDnflzU25G/
59v5/HVTxue+sbxej7QUetRo5/uqOjE+d1lgp3x8rwvjc/s4O/9+UE/G5xYm
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
11uNA4IPq53sP11hf/m+xkn8PP9loXe1Tv49o6si9nLyeWnoa/z/w5yE33R/
LPjwcCfVmxOBn6gPjXDyfaY3ROzt5PtZ8Hrs/5FO7ue8KvSwj5Py29Yb7Ecf
HeXk30O8L/DX10n1vkk3hR72c/J5yiyBx/5O7u8En8B+D3DyefZH4vWBTj5f
gffD/h/tJD587j7zmy1jnHzfymOhl8c6ud/iocDzcfz3jgfsX68Y7+TzOE8F
vk9wUn77+iee6OTfJ3gl6hdBTuZDL4SeDnYyPr8QejqE/3/pDfsni0OdXN9/
L+oXk5ysD3MEP5js5PvJP4h6xhQn+2vvBV+Y6uTf//gk+MI0J/Uz7f0q6hXT
ndxvi/445A+dk+oHq3MJfR3mpPNM02X2S0JmOPn+E5xPR31qppP09KP87H9P
mOXkfoACoj4828nn6QoLfa138u8DlGW88A53kr6RS4nnc5x8nxL8d9Q35jpp
P4ysJl4/j9dTc/jvyD8RTr7/p4GoJ0c6+X5e6HXwkygn/f7lHJxnB5+PdvJ9
Rq0EP4nhzzu5g+AnBifvb+h18Pv5Ts4/PQRfiXXy/UHw31UZA9oZnXzeG+fZ
kb8WOKm/3436OvJXnJN/b22cmusjJifz5/FCzy908n2vIey/N4538u/voL6u
4E99s5hPg9Dzi5xc78Tvwyjrq3qCk/hNAPrnwLctTr5fK1XEi3n/Xge+w6+z
Ovn+q63sx5dJdLL+PSz4is3J90OcE3zF7uTfk7qr5vp1kpP6hybgPDvyoYPn
d7Ms9L3TyfyysNAXyU6+Dwe//wY/T4mh/2rgvhrS+7zfS8GPh//rdpJflm+E
qH+nOPm+kZA/et/Jv1cSzX7+hyVOrh/j/Bvy6VIn94tuYT//xTIn+xMnhR+Q
5iS+o0W9En5fupPycVX83hb6Z5bz53+N++jgD69wcj2iKddXb6zk7+PRj+ur
F1Y56f4BDeqv6I9Z7eTzmLF/9D5/vq7L/uh9J59H3S384XVOvk/wgojXO/n3
h56w35+xgfND4e/s9x/+28n3fZfwYv94I+fvxriPVVmPu//hz5fRVtTPNznp
PEYuScSbnXzevb+on2/h/fzdi/FzzVYn8ZkF8NvhB27j/fbOW9TTtzuZv3qL
evoOnq86I7k+kLzTyf0lA7k+YNvlZP8UfAL5bbeTzyfi9+mQz/Y42R9uLPyD
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
WuRmP8vNfGhJAq/v7SuZD7ktbr5vZjvXG5IWu9l/2M/63W5103mtk/g9V+BR
opt/z/4+6/nFNjfXL5+yXl9od5P+C8bvuSrrMy7Jzfd/FeR+9PkOXi8l0R8P
fHG66T6lyGas3+ck8/+/uBPr81kuN/HNjlrW52FuN/ePoz8e/a4pbv69Y73o
r0t1k96r4xT9dUvcVI9thPvj0d+81E39JYeOiufL3FRfHXNHw/oujef7xnvx
PJ3X487iQt8td1M/gF9j1u++KzheivvBoRdWuglP8sOPB16tcpMfYIcfj3y4
2k1++gyblutda9z8+1O4jw56Ya2b+52OiXidW/y+hKgfr3czH/4o8GuDm/iy
q6Dwv/8W6wf3r0I/bHRzf1ATL9aL/7ipPvAL/XTQi5vcfH9GT+GPb+Z812wg
6/12W9ysx+i+dyWfbnXz722I/vmW29x0fiiXl/DLt/P6KIH+OPSP7OB8W3mg
8Mt3url/Dr8HA798l5v1UxcR73bz77G3YT+gyh433ydenf2ASnvd/PsR0OvA
s31u0uP5c4l4P+/nDx+4H630ATGe8OORXw/y/j19XtSvD7m5X+Go8N8Pu/m+
rA1cL8mf4SY/YrhDy/nyiJv48Ov5XC/5cUTkzxla9pOOcn7L7Sf893/d/Pv1
6I8Hvz/m5t+Txu+5oh72n5v8sWXw43F+4ji/fwLOY6C/8ISb/LZOuO9Y0atZ
J918vvQ14/OdU7w/+94T/SSnRT7F+TfkvzNu4m/n/hX1sLNu9hvhX0HvXkqh
999/Q9RrL3Pc6bLA9ysptP4df/D9agrvt2vstw++lkJ6tsA1oW+vp5Bf3feG
iG+kUD/F3Luinnszhe9PvMH17563Uvi8OPAd9ZrbKTR/l28LPXonhfsz/+D/
3RT264X/3vZeCv9eDer18D/vp7B+Aj5Df2am0P6uiRj+RVYK5evzmQLPH6SQ
P+f3B+8fpjC/eCLiRyncP5TNfnzNxylU34l4xn57lewU8je64PVYn09SqJ+i
BPQ5+NfTFP49deA11uOzFO5HgB6Hnnyewv3W0O9Yjy9SmN+9Yr8938sUvs/+
Pfvr35UY+Pr9M/snH1+l8O8jfGF/5OXrFOILn36w//HwTQqtZ+d3nt87b/n/
a6gS+PkuhfzHIiqBl+9T+L4i1NOxXj6ksP8CPx7+4kcxf9Dr6B/8lML+QWGB
f59TaL2H4v459At+SeF6ZCmBbzkpfH9XRTXrra/i/cqxP7DuWwr5bfkrsp5P
+55C+Ssb+I56xg9eH9RPB//vZwrz+XrsJy/6lcL3aTVk/W38nUL3b/wAnkP/
yClcf0W9Hf6UKpX9cPw+DPynXKm0n9ah/o7zbLlT+fcu0U8HvZInlc+rDRD1
h7ypdL5ixHDW3775UolfbB8t6gv5U/n3KCcyP9EWSOX8MoXHe3DBVNI72TNF
PaFQKvl9uSJE/aBwKucPo6gXFEml/pfPyaI+UDSV/GsV7o8Hvy2Wyucr/0fU
VcdHdT1fira4u1tx1+LulGyAUgoULe7Q0gKleFu8FM1mN7vZJJtssriU4k6x
4u7uHhx+c+ZMv78/z+e+9/bte/fdmTlzZm48/YfS6cNY/7aW/kCRDGGsf0M/
OszvjGGq76h62Pj/TLze5XPG72cO03jzwAPj87OEqZ4qGfTxWE+zhrGfcVqr
R8sWpvFdRD7T+wjGepW7HPXzr7KHqT1/Az4eeoEcvN418PGYvznDmC8wffzN
XGFcf6YYf547jP79Egf5jjx8/tVNH38ybxj52l2ml8sXpvxBM/T/gL+XP4z1
pR8MFwjj+pDN+PCCYcyXoV8N+IdCYez/0Nr0cIXDlO+5NMD0cEXCdD2oA3sA
fqBoGPN3S4wPKBZGf3i1jRfn815wgPorz+dh1BtcYzznLBGm/vLMN8YHlAxT
fmtvGtPLleJ8CBQxfrt0mOb/e5a3+L1MGPU79YzPLhvGfsyNTf9WLkz5z0mI
r+HvlA9j/z/Yd/g7FcK4fiA+Bz9aMYz5J9hz1H9V4veSCvYe/knlMO6fgXo3
6FWrhDFf0djy71XD1H8ZA70+8lvV7HupYP5E9TDNj2+AfUc8XCOMfE1G8x9q
8vl98cHi3y/4/U3B/vaw97XCmG+4SH4kQ+0w9rf+x+x5nTDql9GvBvNRMPod
DAKfgvimbhj5vN8tf14vjP3xx5l9rs/vKaGv5csbcL7/0tHyNw3te69Hf+9k
ozCNv9ZWJn9/qDGv3zaP5WuahGm+ojT4eOSbm/L/JH9n+pFmYeovPsN+B6if
aR5Gf/ek4Racvy32mH6kJZ/nKfBV4j9FtAqjvYxzcL1o4yQ/cML42rZO1sfB
/uJ5f+lk/HHc7GE7J+3XGbN/IU7a43Nm/xxO5Y/qnTF7F8rzG51hfjlTeyf3
tzhn9q2Dk/2mMY78Xkcn199TZu++cv6/nh96h05O9iO5bPGoYMRz2n8W+qSv
ndy/6wLzA487O/V7KI3jEW9+4+T+QzfM/nVxsh/IFfL/57s6uZ8p/AH4S92c
up/nq5v0Zw5962S/GePjd3d3cv/V//TyPZzsx3yXz3NNTyfre+7yeS7r5WR9
P/wDvJ/eTl3PuiF+x/fex6nz9bMX5AeWfOdkvel9Pr95fe3/go9HPNXPqXxc
7UTG8xP68//r/u3Q6wxwqn+aCD4d+fWBTvYnAx+P+qNBTvZH+2D5kcFO1Y9n
SE3+uMcQp/IB15KavRrq1PzazynJD7cb5mT/WuTbEa8MdzJfkon+QasRfF5v
oI9HfDHSyf6nsOfw10Y5VQ/iycH4t/Jo5//Xu8Ef+96p/lCG/GaffuD8iC5q
/P0YJ/P/iNeRX/7RyfqESoxHM/7kZH0X+HjwI2OdzHfWtnzxOKfyZ0PQLx7+
k2DdP7CB8RnjneQbwccjn/uzU+1/P8TvmD8TnJqfOdSRz+fML07VZ9XW/vGR
T45OdKr+p2g/4xcmOZlfHmb+0mSnxjdbRpi/NMWp9vvERNrvdVOd6v8umv0f
H+Bkv7AFIfzepzvJL7vNX/rVST5hhflHvznVv7qA/VzBJ//uVH8o407zj2Y4
Nf5Pe5zP5/eZxPcvm380i/NhKPh4xOOzndQXprB6tzlO5a+6Z7F4e66T/kAR
i7fn2fOqYfgPp/KZ/hYWP8/n+y7Zjfa7x598v98No56o8wIn+0P+Sv1Q+4X8
nu/5rJ5tkVPXx+sbaK+bL3aq/cwGPh587hLe39ab1O81XMr1aUsy42vDnOq/
9S1g/KyT38vaL0IZr4bb74WEst+Hi+vXxaHU3+V3c/48nGr66Agn9XLohwJ/
yOPUfHrFjeTfU3udyre1RH0W5l8kr7f5PvV2HyLt+0S/Gtgfn5P+b9b2tD9R
TuWbVxamnu5etJP1slXIn9+O4fpWpx7t82W/k/tXQh8PvVSsk/1uQ8mPH4tz
arz+rAP1c4cCTu6f+hXt9d54+57b015vTeB4sTa0138FnexH0vS//L6T+xUg
Xsf6ttyp8cot6AHAV61wqn+/EPo5+D8rneRDEK/Hn48KW+VU/yZtasvnr3Zy
/3Tk28EnrXFyP2noE1APv9bsyXHG3xPXOVnvtpN6uHHr+T5C0V8A/vtfTu7/
Fxlqen4n9yuYzni699+0f54fQum/b3SSn+pK/cVXm8yehVo+fjPXs3X1jI/Z
4lS9UK6Sxr9s5fpVPiv9x/rbnKx/Th5K+7vdSX4hkfa92g5+32E3Lb++k+fP
Oeagvd3F+fst/FfkQ3c7qXeFf4v85x4n+9FFmR5lbzj9ecTnqFfcF06+DvYc
+cN/wrk/1jGzh/vDWQ9g8f65A+Hki04xn33kYDjX07PMJ+87FK7PayLsL/Ry
h8PJJ54ze/hvOPky4+P/PhLO9fYs4/FVR8N1fqj+Hfq3Y+H6vo5dMvt4PJz7
62Ic/OWJcO2fexwY8+VkOJ/PRcbPf5wKJ/99g/7DjNPhGs+3vUb/YfKZcPo/
V80+ng0nPwH+HXziuXDGSzcYP488H0495E0+v0EXwqmne0h/ot/FcNb3w75j
/boUzn6E94wvuRyu9X15Eo0fuRLO/kqw91i/rvL/ZE00fC1c+fQHL4z/uB7O
/gCvjO+4Ea76gbnAiO9uhmv+eshby1/cCmc/rvfmr90O534Qn9A+FL0Tzv4R
SWgfCtwNZzySmvFzznvhyidfTkG+N+t9Pv/EjORzMzwIp141PfnbVA/DqT9H
PTv8Z8HKX8GeY/16FK760dA8Zk8fh7PeroDlA56EM34vanz/03DWp4CPx/r1
jPOzRRnj95+H6/cbU9ns64tw9S86V6X/cTAxnPVstc2+vgynPW5o+eNXfB9j
0T8e69frcO6Pgn7x8K/fhLM+tn0I17O34dR3fG38xDvOhx/7mr19H85+632M
X/8QTr3/cMbHSz+G83seY3x5Ehf1/7+avf3ExX5n883eJnVR/4H+8ejnkcyl
9c8z0a8G/ltyl8Zz22HfEa+lcJHPBB+P9SylS/NrvgPGR6Rysd/gGfPnPnXR
v7jB59n5Mxf5lzfkezqmdmn+tE8ys7dpXPp/z+QkX9g2rUv1iX99bvXj6VzU
l9VxcL6mdzF+cVAPXyeDS+393p7Mz1fJ6OJ+aD9S714hk4v68PkO+n+ZXdwf
KZbxTLksLrWfK7Yxn14sq4v7c52x9S+bS/Uh7bF+Ip+W3UU9czrjd3O4mI8p
YfY4p0vnT7MmzJ9nzOVifqyr2efcLvZHxfqPeCOPi3wR9geFXlAwvtfn8cbn
5nVxf5fdtC9P87nYD+6c8bv5eX7PRON3C9jzTdWe/mRBl/KtubIzvr5ZyKX+
4McSZr8LuzQe91axevEiLu4PZPnuk0Vd3G+ktdWHF3OxnvZL5rcPF3exX3w7
s+efu9hvGfYfeosSLu732cn0fCVdmh//uqXp+Uq5uL9KM8bfy0rz/y5EPR7y
TWU4f7pWID8fUdbFftXgHxC/lHOxvjib6e/Ku9hfJUV78nEVXKyPfWL2u6KL
/Rlg35HvqeRSexN/gPH3yMou6pMRryN+qeKif4L+sohfqrrYj26h2e9qLuoP
J5jerrqL/TuHm/2u4aK/9K3lT2q6VK/2TxPT033hYn/WKqanq8Xn/6CQ2e/a
Ltbfon8C8st1XMovL/lg872uS+PB7Y9svtdzUZ8IPh7rc30X90s8aPa9gUvj
+YpbqTcp2tCl8WdO9FtG/WwjF/1Fl4PrVxO39rd7epJ899qmbp0v209YvNnM
TT3IGeavY5u7qZc8ZbiFm/XO8AfAP7V0azxTDufj/bZyc38R2Gv4a63d/P/n
LF5t41Y+xXuO+W1XWzf3Uz9v9vlLt64XuS6RD1jazq3zpc4lGw9xc3/tKzbu
cCt/NB32GXxuKM//C+PjPv6yoL1b/cvVd9qR7+rg1nxPEcuPz+ro1nxnv+vM
h//+lZv+BcZR39LJrfnXo7csXv7azXoNxONYbzu7Wa9+h/ntH79x63rU+zb5
hR+6uFnv+cDGu7o1H5XmifkP3dy0N8/Mf/jWzXoFYOhdurt1fqV+TX5iWA83
+5u/tfGebvLRiRaf93Jzf4t35m/0dmt9QybYb8z3Pm7l3/5A/I75/p2bevMk
tr73das9roH6dcz/fvy9trr/uviz/Xm/eTMY/zzAzf2as9O+Oga6uZ9jbuOj
B7nZfzWnxfeDOV4M9h7x1hA38xnQy8EeDHXTPytM+1t/mFu/x23Qz8GfGe7W
/Oj7UsZfj3Drepm0AvMFX4x0M/8IPh7f1yg39dZfGH8w2q35tZQtbPx7N/kM
8O/4/n7g8x7QlvFzxTH8vTqod0N896ObetQuIdR3/GTzDXp58Itj3Yznhtr4
OD7f3P/p48e7qS+bZPhnt8ZbuX41/nyCW7/nI4vN//rFzf1JI4xPn+im3gP6
OdizSZyfK1ebfzaZ8yFsh/EdU9zqz7VC/znYu6lu1ueivyz8/2lu5v/uGh8y
nb834g3j/cy/utm/Pb2DfNxvbsb7hRy0h7+7Gc9XMP3PDDf7qTSx8ZmcH2vQ
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
e1pS+i9DOnH9OID+8YinBGv8iHgd8c7XHvWXtiBel/XjlmDt34v+8RK/9Ons
Yb0U+sfvKX3hemd+n83wvmS96PUN15Oz6E+AeOYbzp978N/k++/RxcN6gk6h
jFe68P191iyU8VBXD/fHqsLrXevK9WsF+HhZX3p287BfWeZQ9X+uCtZ6ZfRD
RLzzLee3G/4nfl+w6sWQT0I81d3DfiOof5P15GJ3O36LQ9ePrj08jJ/jBSe5
HHVOMPzx25EO9Y++6cn1c5TTofa83Q0P66NhrxGf3OB8Dz9h9v0m7Wl62GP5
Hvff5Pw7geMRn9zienMS9le+v38Eg689f87s+22bb7r/zIdSewSjX9Bl+AuF
5uZsfMdDfcQls++CNR+l+fSmaRveNXt3yez3XX6/31y28+95lH+s9Z9/cI/2
OJ3hRvdpfzpds/H79ryB5ftt9MCj/roL/Pkcb9hOwfD3z1616z+kP5MK9hjx
00P6E/3v2/Uf8f3fucX73S5Y9RkP7PzHHvX3b0MPh/jqMeff70/N/3ji4X6d
z83/EKz9Bx+TL6nzlPc/5iX5kr+f8vl3gD1HfPGM9mnAG/Il65/RP3IhHr+x
fG+15/S36iB+l+93teD/1bvDP3jhYb9J6Ofke131gve7F/n10n03Vkn0sJ95
WhtP5Pr1CPx8sZvFK770sB9UWvoLQcHaTzW3+QevPOwfCPuO+EKw1rMjPkd8
8Zr26Z/CtPcxgrX+ooTZ/zdcDzuUMv/gDb/vj6XpDxR/y/XmKPTxEm9Ev+X5
vyL/XrVu92LvPOTT0L9GvnffO/7+7AbmP7z30L8GPy/fm0cw+KSaDrPfHzzs
T9DJ/IsPtF9TvuHxhT5y/i/sS3/A/ZHrx0+Dac/zJfGyXwbidfkewwRDj3Nq
Au157k+8un/K22nkK5YKVr3mXPITuZJ6WZ+G/PqM1rMWCdb13UecI5lX+cGw
v8z+C1a+bBv5iqzJvew/dpT4T8Fqfy6Qv8icwst+2Q/M/gvW/s1vQ3R9yJjS
Sz0L+sdjXDCeR3x+wTn+GpUllVfzV9MrOZTvmCcYevSrDRzqb2T61Mv6za9t
XLDWkw6lP5DhMy+/B+jjxZ+YLVj7x2J9unXuy3Spvbr+N13l0PVmpmDVU+4x
+5/Gq+8r12Xi3wXrfppv6A+kTutlv5pcocqX/CYY9VbFwccnr7b603Re9jOA
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
WL+ne4yfQyv6dP1bAT28+K9HBet+1fAHJB4OreTT9f4m4nPMH8G6n9ddO7+y
j/U6Lxh/HxWs/Zte2PlVfPQfDR8TDP/280Qbr+pTPdPHV7zeMcFa7/qB13NU
83H/G9S7QR8mGPmmvikYj4dU95EPTUb+9V/B1dCfIjVxuxo+1Xf1T0k+9l/B
iHe+RX4d+rKaPrWvWdIxPj8sWPePy8z4vO0XPs1HT8xOfEiw6v9yMd5vW8vH
/GReGxeM9S1dUcbzbWrz+aVEvA59h2D1z0oSt67jU76jbTnG8/sFa70u8u/w
5+v6lF8bBP4d+SHBmt/BfjAy35vX4/Nzoz+N+Pf7BKMerEELHt+yPufn4A7k
B/YJVr0J6t3ke2regM+jXk/ivYJVL9nLrt/QR/3FADtfsPJLo2y8kY/54EnE
ewUjHz7zP/1cYx/1OAvs/MZ8fme9dn4TH/ePCfL4PYKhf+y3mnxFs6Y+5d+y
7LH7E6z76R7m9Vo087G+46r9f8Gq13xA3KI55/fw13a+YKxXC7Pa+tHCp/Yn
Q2FbX1rw90tUtfGWPu3nUa2prS8t+T29am/jrXzqL08YSLxHMPiSt7/y+Oat
feznvcjGBas+DHykxEdN2/h0Pd/9D+Of3YKVD75i12/rYz/y93Z/glWvnZ38
eLMvfarPL1jF4i3Bao/aWLzVzsd6qwGMz3a34/cx/RfGf81DfKxHD2f8tyeE
vzd/pY07fGp/tH883o9g1SfctN8P5ftd/czOD+Xz+zQN+fgm7Tl/W4O/LjQ3
507B2q8C8TDiyQ4+7afaqxb5+u0d7HtuSL6+QUeub8VRr4b8pWD1VxC/Q5/4
Fa8f35r8/ZavuL7+hnHoDzv5uP8p6uOhPxKs9cnNiWt/7WP/5+o2/jWfTwzy
/xLv1Orso39XhHz+X51pD/LnYb6/xje8v5sZyO+vE6z1+9gvB/qkLj7ykdAb
Ylyw6rmPEVfvyvNT7uTx6wRr/wXE6xLfVO3m4/51ThsXjHzC1F/t+t/6yI9D
PyHxy9pvOT+ugI+XeKVqd/seQonXCIa/P6+hnd+D55cuYef34Pd8Lo+d35Pz
vUZaO78n5/ffr8lPVe7F+Vcf9h3n9+L3chJ8PPRVvX2019vIX60QrPtjo78s
9FN9fNrfYin60Uk8tFIw/J+8qG9HfvQ7H/Wbc4lXCIb+8Nxk5sNC7vpUz3MG
9hfr+13eb6cztGeOez6Nn5+cMvtxj/Y4BuOy3n9530d94Vk7X7DmK2G/wcc8
8FFfc8Ls1wOun2/O2fUf+jSeqnXVri8YesffL9r5j3yaz96m+8c9PHpQMPyr
x9ft/Mc+jZ9HXbHzH9v8vmbjT3zcH+GGjQtW/c5t4pCnPtYP3rdxwbq/zU37
f898zN/DXsN/e8b3lQTx961zX7Z57uP+q/eJDz7n9TohHgff9MLH+jrYf/hv
L7he3UR8j/U10afxd3vYd3z/ifa+gMHnvPRxvyndf311/l2CNb6G/h3r0yv6
B6kN73rF+fLOjm/ymutRFmCsH6/pv91OSdz4jY/7J6Qhf71DMPjJdJnIXzd6
y/fbJgPxDsGor/83m42/87F+CP1rsP684/vqAX4e+uv3Ps3ftoc+DvoEwdpP
uZCd/4Hfwzcl7PqCEW/PKWfjH+mvRVUif77tI9eXWxXt+kmi2A8d8bmsZ1sE
6/5U9YnrfRJFfU4j8u2bBaueqnUI17ekUTr//wI/D32EYKynjb4mbpAsiv5B
D7u+YK13Rr8a6L+TR7EeZhjxZsGI55KP5f02SBGl/PKyKeT3twhW/3eWnZ8y
SvnfBkvs/gSjn322GBtPFaX1ZZXi7PkJhj/lWWvP59Mo7if1jz0/wbAnVU7x
fTT8LIr645v2fgRrfetzXq9h6ijl0xYkpf52u2D4U+lzkN+rnyaK+x8Ws3HB
0E9lqebg/0vL59u2jfGRgrUeqDtxo3RR7K8+gvzj9nQcz/Irr9cwfRTzfW4H
n79g2KMyW4gbZIhi/9jD/L1tgmEfmz+w+8sYxf3aU1Hvtk0w/Pef8lPPVj9T
FPMb4FdxfcG6fy708ZgfmaMYnwwm3iJY97P8nXq5elmi2A/NTT3cZsFq7/62
62eN4n5rR3j8FsGa37xj188WxfoK7NeO+SFY8xFZmB+vmz2K+x0UpL3elp3/
rwTy17h+jijlCz5Uo73eIlj19/XNfueMUn5jidnzLYK1/0E78x9yRXE/htbm
PwhW/TjsN+ZPbs4/Twv7/dycD1Xr2fXzRLE/+xd2fcHaL6Mc9YB180ZpPcrn
+Znf35SX39OSHPQn6uWLYv1MMvMvBGu/hES+rwb5ozTe2X+Bz3OrYPX/D9vz
LRBFvdgGe36Ctf80+svi+y3I36u52N6fYOhhV03h+6pbKIr6l9E2Xojz44uu
9n4L8/8MbGvvV7D216lt768I58O7wvb7gpEP+S6b/X7RKF3PuqNfTfX+t/4W
DL5oDfTx0WMH1C4WxXqAW+TPNxfj9bqgvyz0VcWjVK+SFPMd/pNg3d98nUP1
EF98HqV6ggOw5/CfBINfm7yIuGYJrjc+2HfUd5Tg937uJ16vdjyf99fIp+P7
EKz9nU6QL2+QEKX52L+Pk3/fksD30eoM+fN6wSjl0+4eI94iGP5HjbM2vsz+
zzny85uW8fkuPUd+vfbyKLUv7YGhT19u3z/y57j/FVH0ly+S716/gutN5A3y
29VX8vlevkx+e61g3d/I6u+qruL3NeM68RrBiEdDYb/hX62OUn8vSvvFN1y7
SjD0FK/uEFdeE6Xxag7Tu69aY+v1bTt/bRT1N6ZnXylY9cuw5/Cv1vH+K6P+
7UwwfNk6rg/NEZ+j/mU95/Ms8PHQpwlWf+0ljy//V5Ta24S3PH6ZYPXfEM8v
d6QvuyGK+WTE7w3rz4gXDP1PcsTvvfNMLf23rcfg56F/F6z7BaQmH1xqYxT3
+wMfD/27YPDrKTIQl9zE739bBvLFsYJ1/9Rs5ItLbOb/f4l4Hfo3wcpnmR6+
+JYojRc+y08cLfhgiST1fypGPrn41ijuL/45r+cXDP+uVHm7/rYo+m+VbFww
+J9X0M/V2vKixPYo6l9r2bhg9Qca2vV38P+HtrLfF6z7YUAfD33JziiNJ0ZA
Twf9nOD/7ecKfciuKPXX8/Tk8VG7bD3ub9ffzfXnz9F8nnGCtR4W+jnUJ+yJ
0vhwNvLreH+Cdb/zWcwHVNjL559pCfn/5Xv5/C6Cn8f82hel8XTHNcwnrNjH
9ajVFuKK/0Sx/84BO18w+NmN5/h75ffzezh5m/mJZYK1f/tr5hfKHaA/MAr7
vaF+QjD42/m5mN8uezBK8ylTKjpU/5QgWPe/rEtc9pDdfwc7/xDn4/LvHKzf
OszvLctE5scDhzm/+mC/N8y/f/n97Qrw9xL+5f8puIP59vJHoshPniFedoT2
ut9r5ufLH43S+oObn4VyXLDuf4r8KJ7/MX5/x7CfK+5PMPQas7rw+PLH6Z9V
/dHOF6z5mT/s/BO0j0/jbPwEj++Afub4/ZNRmu/PdpZ42Um+77aP7PxTUZo/
j/xg44I1X5bV6t9O8/mFIF+N+zvN+ZuiMvXk5c5EcT+02lYfd4b/r2BjHl/u
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
/tGPDvGfYN1PdyXzTZ1XcD5shD4e8dEKW18WMp/VYWUs+QXUm2D/DMG6f/g0
B+vDVsUyXhlGvv7fVZx/+/sw/96wehz1e6dpz7cL/l8/efhnNeLYX+28jQvW
/q0nbbxmnK7vZS4xf79NsNaDXzT+/os4nd9PMA7/UbDy/XZ8g1px3L/qKvP7
WwTr/rmX6D/UrR3HfkM3iDcL1v2sYJ9RX1AnjvuxX7LzBaue+L/+8nXjmE+G
fYZ+X7DqRWHvod+vF6f7ceS/b+P17Pr3qD+oXz+O+yk9tOvX5/PZ8oi4XoM4
5dMyvLBxwbp/wgs7v2Gc5iM/eWP5i4a8vyRv7PxGcewP+Ir+05ZGHL/8ysYb
x7G/WxLjWxtzvDvidTz/JnHsz4/8Oc4XrPu5fsrj6zaNY39DYDw/waqvQj4d
/FOzOOohgFFfJVjrWcC/o76peRz1bDnI3+8UDH8sc24bbxHHfpDoP4f3K1j1
7sV4vUYtefzKMjYuWOuFkG/H/GgVx34mlZkP2CoYeqFasPf4/635/B/WIv+8
TTD4tRmNjY9uE8d6v2a83vY2vF7q1nZ+2ziN3+63t+cjWOuBu9nz+zKO+xP1
s98XrPzWQBtvF8d61R9sXLDuvzWeuH4Iv4c3s3j8NsHa726e/b4jjvyTy84X
jPWyTrRdPzRO17Nf19q4YK0v28L7rdc+TuPttAft/QnW/o4X7P11iGP8fo94
k2Dtr/eRx9ftGKf81Gv0l8XzEazxWz769w2+imN+HvE6fl+w1neBj8fvd4qj
XrOTg/NbsOqfB/J6Db/m/J8zgdfbJhh85Hjwifh/nePYLy9ovy8Y/suCvTb+
DdeDTy4RbxOs/XhfOTi/usQxfsJ6i/kpWPNDpUO5fnXlfAlDvTLq8wTDvpVG
/RPurxvnTxD7h+D6gpHfzb6QfGyDb+PU3q2I4/HbBav+fwePb9A9jvvXWv/4
rYKV77lPXL9HnPIJH5Oxnm1rD37PYzNYfVvPOO7HUsjiW8Hg4+aXZTzcsFcc
+aUaVp/Wi+vhsrpW396b3//ghhY/C1a9bVPG4w378P0PbWrnC9Z+zP/Vz30X
R3tdn/z/ZsG6P181q1/rG6d8wPUSNi4Y/Nppq9dr0M++11x2fcHI71T67//1
j2N+DfYd5wvWehvUs+P6A+z7OWn89wDOp7yoP8D9DYxTfrv0cvLhmwba/PcY
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
p5Szz4/xPp7KYX/fMdr/Gemt/nLcl/u0f9Lffj5O//X0Lf3xsBO+3KcifDz8
02dg5Ucv8uuHn6S92n6Y/vkTsO6b8ePXDz/F+3d+Df11nOEmC+mfR56mfbko
8+ik/nbazuNI4hFnfLWeGGX+/csZ/r3FOlr97awv6+uGv5/l+Usm+xx3Pd16
sIgf5/noPNpGT+OBJR9qivza5+3ylR5F/bTeW15wv7tXRgLrPEn4c5/5rnPB
wKrHh//2icqaJK4ov/+1fN6rjUelYn68n8Knz6zgNhRY5pkGwv/7DJsc7Q+s
+2DF/ycb7P0eWOejwF/7dL29uXxxP84nF38+2W/tQGCpXx6U/Hvb7OX7gHV/
70viN8BiH47jc59zvRaWKeHH+S7Ix32i687uByz28NQ74HR5pu4GFr1CUdG7
V/g6/jWw+LNrwD65m7qXKOnH/mjBtYtU8AYW//pA+PhSI6O2Aet+OPHvLR3P
XwLrPIfv+PpBZcIKl/JjfRb5vs/iFHe7A+v+LtkPM6HD/E3Acj9biH/fVHnm
U2CJNx8n8jzmM3d63fyl/TR+WYt83edV9Ngupfn/JkjJzzcAC/+xTPj3Ufe/
hQNrP8wf+Hx14Mc8ZYgvCB8fl71cpzJ8vr7Z8fmQdj1WA2t+JP6+867cD4BF
j/VS/PnEqVlzlPVjPxb8uU/GoYvbAWs+hnxdzsNyYO1nKkZ8F1j1euU99Xxk
LefHed4yX3ZMkol/Aev+Dg98vvbx6CXAuj+iLj4vd/nLTWDtJ5B+N8eO9xnL
8/c9d3jqefEElvrRES/gAx6P5wNrPUjmz4Vlvn+lPM/bVtHL4zykq+DH+p/0
txe6eKk5sM7TGobvX58q0Wxg4TPa/Oep7/s8sNafpwvf7x6YoqKf6gNqy7ya
FGveNgZWPlj4+OsZ900XLPHBNnx/twSlzlbk++3p56nnIambH/t9jog/Xpi9
AbDu4xB9/N8Tlk4GFn8beQffH9sv40lg5TOk3n7/yIWElfw0ft8v+bpboWR1
gYXfeJXQccwn7/AjE4BVbyTz43+sPHUMWPlI4ePb/IJj89P95VcrOfT81K7s
x30AMj8e52U8sOo9uwDfrFn5CLD2wwwFLrNp0E9gzRfm4PuPzI+tUcVP7Xmu
9Q49P2OAlc+QfdWXD60/UIXncYTojYoVePgNWPurZT8mzpOHux/7xxM6aU+A
db5ddqeer1Bg3bcjeufKLed+ced9zNCKX+9e1Y98r+yHaVdi+ghg7Y+dgM/T
fPgZCCx62kbC9+L8fADWfl4/p56fCh5+Gs+2PAW8vPPLQcC670X4eNgXXw/a
u9Zv8fmARG3eAOv8yMRex3wWhrUqU43v45vsfwsMbdIPWPj8y1Jvjx9Qcxew
9l+Kf/W6+V8UsPaXVsb3z/77QInqfqqXiakK/PLYZ29g4eNX1AZeObPfdmCt
b0j+PvVh4Qj7+uY676Z21yI1/DhvRPrjE+Xq0KMG76+n5Os4T5uBJX55VhY/
L/j5tWc1eH8SF/PS81WoJu2VU/rfcL7+qcnfNye1F+0JsPC9e2UeHc7PY2Dl
R6TenursiLy1/HR+RMwzp56Hv2vR/u+54KQ9qcX/N1zm0eH9369l530b8MMo
z+y1eR7TLwYusKFhG2DdJzGJ729Jbf49MVJv/1o/+GZtPs+52u9YwS1THT/2
1/+Jr3++dICjDu9/sarANeN3LqxDez+9qFP9xzVg0fMUysn3m76uH/c5S38G
7ENLYN0HIPX2Dl7p5talP5L8XfzHZWDJR/KKf8f7TlPPft5piU8X128GrP0Y
Mo8R73tmPf4/N4TPgr04W4/fv07uC+xD8vp+zGcWAB/q0asRsNaTZzrUX0wB
lnhq3AiH+ouT9fn7Nns79H0makD7UE/q7fAXdRvQ3r108v77AEt+kKuJQ+3j
wKk8v26P6D99gXUfqfjzzOtyvp1Ke7Ff/LX7qMxlp/n9/33veB79p5k9Fb4d
/+9uYO3ve2z+Eljnez1vree5+HQ/rdeHCoZ97QssfHrvKOATL7/vBNb9Uq/o
X6OAJX66E0P/WnwGn19F8fewr72BVe8k34/ntc0+l/k08rxeAGu8Kf5dzvdM
2rdOn+hfuwHrfDXxvxn+TLNppp0X8eenMkx+Aiz5b0Lx3zjv+Wb5af47Verv
OO+dgVXPLvV2+M+1s3i/NiE/98n+qfijWbSXjcSfI57KNZvxxRTh52EPOwAL
/1Y6If3rKmDRz+5B/u4Tmq7dfWDtR5d9b1u6Zsg+h/FGp9T4/Ez1VG2BZf/U
SOHjcV+WzWH8NVDyddfcE7eBdd55Nnx9/TG1s8xlfOAj9fXb3oe8gDW/yIHP
jx0Ytngu/dfB/J56f27M5fv/Jv4d9jDDPD4v71L0r63m2fMoS386b57FW8jX
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
uZ5Yv9hpsxf3rV/sNOOdaxHUs28H1n0mz/h55GnmT+NeWn38DM/7A/HH8Dc9
z9AfZIpkfrwFWPSIe2Kob392huf7RSTjjwJn+fe8jGL80eUs873Lwt8LXwss
/eLVxH9L/nHW4rdY8v25z7m0X9XjHfXsHc8xnrv6hfHHqnP013XiyO/fO8fz
2/wz+f1s5y0e+cn4os152qdf3xlPLAWWfqPZSazf6zzjlaIJmb9mvMB8c18y
8w/AWu9Maf4BWPjigNTMV69dYDwWmIH6q/QXXcqPT/2D+WpLYJ3Hl5F6rQXA
Wu/PTn9y9SLPy4eC/Pp0l1ycT1TA/Msl+t9D+cj3zwYWvq56EeKLwFpPKUV+
P9Vl3qel5RlvNAHW+Q5Vma/OAFZ9s8yfw3k4e5l8Rn7k61pPusLz2KsJ69UN
r9D+HGlEPn/KFd7PYsLPS/3oCv1fSCfWqxNdtXi3C/n8ulfJp9zxJj/ic5XP
v+9A8iNHr/L9zRlNPv+XfR7tQ76/9jXmZ83mMR4Zf43nZ/Qq6iUOX7PzK/Po
cH5+XGO+1WUfcY3rlg8eYHwyBlj1njK/RupH18mf/LjJeCX+Op9P9ifUW1S7
4dL6zZD37JcYBaz9Ab892S92g+ex6x9WH79B+3u0AO1P1ZsuzhOHf1c94U3y
OfENHRofh9xkPNK6HfU+n2+ST+rej/xipVsu1b9kmUx+cdgti99XM78JuMV4
f38A+cX3t2gfkl2g/alwm/ldvqfWj3Pb7P1X8ou+wDo/IIP1mwFrP10ZJ/WA
d1ysx9V1Ug94h/a2QUfyw7vuWD47nHr613fI101a5GS/2V0X6z0yDw35jPdd
xisF9lO/tf0u87OA607ao7u0j+9emf7+nkv7T8fFU9/dG1j0ghtS0v9tv2d8
kvDZiH9e3qM/LFic+XKR+3xfHypYfRxY6lmFRE8Hf7f5PuO909W8GC/fpz0r
XJP17wIPGH+Wr0F9fpcH9GdeoqfDeVz3gHzFUsQLqvd5YPxLOX6e96HFkyW9
qAcE1n3zyNfVvz2kvRmQyfSAD8kHnU7I+kPORy7VV2z4yHio/SOer8cvWA9f
ASz119G3rD7+iPf52HHGQ1nDXKqnaeoyPiXM7Otq1r+XAGu/1FynxkM3w8iX
XRplfEo4+ZKg3uxv8wynfz3b3vrdwhlvl2xEfuUasNSjWlakPiPdY56v2QWc
tGePaU/yZuL5mgMs9d0Ev6gvvfiYf1+Oz8yPUz1hPLTiMXHTJ7R/B29YvAys
+tmjzJfPPTG+IJD5coqnlg/uYL2q8VPzr6tZn5r2lM//yizqUc88JT87UuZJ
SP/sMxfrF6J/wflp8Iz3p19vq68/Ix+9sTPj5xPPaM8zyv4n6Z997uK8rvrk
5+oA6371mrQHywsHaH685gH153eBdZ9NOPPp7EUClE9IHk79entgiX+LPmF/
/Epgnacn/LrUL4Hl/nWLIM5ZNIDzJSQ/l34wYOVXxN9L/RNY59lHM/9/BCzP
++sr88fFArhP9bXp64GFX54l+nic5zXAGo/Esj8tDFjip7YxxHmKB5DveWd6
N2CdNyfz6eT+AGu/6DvqBx4D6339ZP1wJQI4j+G79QcAK7/4jXqFTcA6D/67
6fWAVb/5nfFK4ZIBan8KJLD6NbDoE6+Kvk76XYGVP0tN/ApY/G/OlPSXxUsF
MJ6RfB3x1b/Acl43ZKZ/3QksfOr4rMYnAwtfkTUb9WQlSwfw/ORmPtgPWPuJ
JV8XvgFY90vns/o/sO4XLkp9QLkyAXqffcoyvhgIrPqOCow//ICVzyvP+OQ9
sPD5BWqRf69QNoD6vnqMb4YAK5/4J/NhF7Duo3BQr/fhf5+3Yz7tVi6A/R8d
Wb8eWs6eR1erBwDr/OX+rB98LsfnPXEI6wtVygeoPUs6nvXyEcDaDzTdk/4P
WPiON/OpX/wKrPsi1tK/Vq0QQP3eVk/2uwCL/iPMRX99AFji1ZxHzH8D6z6z
C6yv1KjIzzvct34AYNVvh1MvcKgiz8+7OPbX/TScIRn58lpuAdz/lNWh8cl4
YMkf3EoQH3Hj15e3/vbfwJI/Lpf+mFMZJtepFMB8W+yD1KuBlZ8dYfYCWPUP
My0/rxyg9ajDG5m/NwBWfWEI7dHUyvz7J980ewUs8bHvc+vvrRLA+Ve/rV4P
rPOWc7N+O7MKz8+ecvTP54E1/mxq+mv3AM2XJnanXrs5sMbrst9V+pOBJd8e
tYz4MrD4/+hdjB/SVQ1g//lpp8a7rYG1v+oR+fiFwKIvrhRN/3K9Kv/++YlY
787oYecvA/NzJ7Dkr5F5rd8MWOd5FaZe/aYHf/7h8qZfrxbAeWLij6U+W432
6534b5zHZcC6j6Ou9bsB67wZwZIPVuf7OShfL/MmgHVeihvr/yuBdb9SWfrn
B8Ba/5B8HecvZ40A9XelshN3ABY+39f8+2pgjaeTmr+vwf+36Sfmt7lq8r6c
jiBf8jew7iO7Sb3CGmCdR3KI/MojYNUbiN5B7G2tAO43WG/5dC2+P9nfp/lX
Ld6H0SOYnz8B1nl2PUzPVzuA+hXZ3w5/1RVY5xPUZX6/EVj3SZW1/gn7/M88
rOcXrBPAesAf7KfrXof3o3VC6ju2AOs8/nf0py+Atf83zPo/6gYon+Jxmfq2
XsC6D+848ba6Zn996b8j6tJ/JNrK+1C0XoDGr4sXEPcCVr3obAf7NYFFb9hE
6u2iV6rH91lrmNXf6gdw/l039rt3A1Y9Xife103AEr+Pbsl63LP69BcPGpKP
L9gggPVzd+P7pwaw//IR8/OdU2kf3MMs/xYs8WYY69PFptG+5XnO+S69gIWf
CHnG+S5bgbVf6xnz85fAOk8qgvNdCk0PYH0tgv6w+3Tal3Sif5e/H1jz50jq
+55Op33zeMV6doEZAZyfLP5Z3j+wzk+JpT9eP8POfwzz+XBg6S9v/t707TN5
vxzv6f87zeTvH/CW/eprgHW/6CfGA2HAMg+gRTzjj9yzAlQ/dPK75f+zGL94
/bL8H1j3rySmP7g/y55/IvqP7LP5fkukYv9W29n8fzekpL9ZDqzzkFLTH90B
Vj4/NevdWeYEaP3DPTP9m9ccvs8qWU2vBax62FysX18D1v6dnJb/zw3gfsF8
9Ecd5vLvz1yQ+eQqYOW3irF+fx9Y4uvhpUxvNo/25Jkb/V87YN3f4W76fmDR
r4yozfr+XWDVi8v8mnYlpmedb/6nOf3xX/N5/i45yJ8vmW9/bwfT9wNLfuvq
YPr8BQHsT+/JeMEBLPFwiDf1aQsWmL0cxfjk6gLat/kTqbdPt5D2dsFUT/JZ
wKL3aiL97ed6LZy70PzVOurvLy3k+Ru1nXxG6kX8exwBjJ+aAks9IPsx1ldm
Amv/8nnWT84toj2a9pD19mSLA7g/+Bn19w2BRU92KY7x39TFjD/vpTB+HFj5
7ay0P0mXBHCec2mL95cwHr1Rg/ZhyhL64wOit5F+YWDVz/Sw+RhLGb9ofy3u
X/2l5j+n0V5MWsr3HbSd8zOOL6U/Ln3QofY4wTLep0tXbV4OsNYXXjMeGb+M
8dPtJORPDy/j/9cvL+39z2X8e7pWZb22xnLzB83Jt48GFn6naE/j15ebvZnM
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
AFa9gC/16ceK83l/38L+0MQlgjhfdJnpUUvwvreZav2mwDqPaJzpUYElH3s5
iP2pyUoGaf3Ov6vp70vSPrzpyPs/A1j5rFbW7wqs/fF1GU+kKhVE/qgO738z
YJ2HVpnxQ5kBQax3hFk/N7DybU/Z7+0LrPN0pb4u87IH8Pklesp5beUH8v+J
e0m+fjCw7lN9yXjBBazzXSIYL3wEFr5y7Avy826Dgsj/vmJ/2XBg4X8+vbb5
csDKL75mfPAFWPdBSj4u88YHByl/N+4j9fyjBtP//I+fPzDY/E0s5999H0x/
ftj0dTWHBHHe7Ffy9eOARY8u/e4SLxwBlvwz5qfNqxkapPXs1AnMfgMLH95V
Phe+dCjv73L4c90nBix6q+vJyJenGEb/sTE1+fImw8yepqV/nzWM/0/NDOTL
LwJrv0NW+vM0w4PYX5aVerAWw/n7QnJRLzZvOP1VP9nXLvvUhtO/Xy5If55h
RBD1PkXpzx3AygeUoT9fDKz5qvDzog8ewf93tvn3zCOD2K/nTr3fX8AyH221
5O+4r8tG8v5vkHq71ENH2nluSn+e7b8gzZ8vOk2f9x/vr3s76vdWAgu/V6EL
/fmD/+z+S71d9L2jGM+1H0z/3nEU/cG9EfTva4C132Uc6+OPgIV/3TDbk/2y
o2k/9y0h/94ZWPmDteTb14+m/ziyh3z709G8f9f9We8vOCaI+vwj5A96Aose
5sxN+u+twDqP7CHf/6sxjE9PR5NPKDaW/qHaJ54Hb2Dhl+6mZj6wc6zFJzlM
jzOW8WzXUvTXpcfx761fi/66P7Du05F6O87DXmCdx9uLfPqbcTy//UY7qCcZ
H6T585j5Ds4XGm/x9Tar3wFrv6/Mk5f5aePtfd6iP3ebwPt76LX10wHr/snE
5N+DgLUeXJD2PG6C5QfVac+r+PC+92pNfv4/H9qj+D6WL/qY//KhPf8GrPug
Vts8lIlBnG8aQH332Ik8ryfO0b8fBhY+YfcDyxcnMj6PiLH67STmF0t/UI89
cZLZC6lXSz/BJLPXBTj/JfHkIO5bL8Z5MQ0m03+lciOfPhVY6uMlJV+X+X3A
ql9yt3k0U2hPH1bhPNrGwKpP82B/+kxg0es+l/xf4rUpjP/fVaI/TzOV7yNh
MdbbW0xlPB9WkHzBPGDt38pMf351KuOhmGRezPem8b7tlv4/idemMX+bGUn/
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
9wQW/7hN+HeZDw2sekCZLyv74IF1/tF38gvF/zZ7bv1wfYB1PvJn1tN3AQt/
81v8PeK/aGDVk0r+Lv6pE8//pl/EfTrZ85b8XfxbJ/6+BaaXjwQWfi1/Kubf
xTqHaHxyR/rbZX8DsOqP0hBvA1Y9eQbW0yOARX9wMrPx211CVG90PRv1Wr2B
tV/P6u1bu/B5OnLSH0d04fOJyE/9X5GuPM+PClPf3aMr/dFo8d/Sf9SVz++h
G/39C2DhRz+6W/76T4jqX8bXsPgAWPuvazKe2AQs8cWp+ow3ngLrPoPmlj93
C+F+xVbUr3UB1nloHegP13fjeTnWmfX8J8CiR9vag/6wQPcQzh8ezM+7Aku9
4uZw4g3AEn9csXz9CbD2007l78vXI4T9uAv4+7r04H2svMriI2CtT+yw3w8s
/GpvF/1zvp4h5G+OefL8Aku+3/US/fs6YM0n7vPrHwNr/9cL+/29QrS//PkP
+/5efF5JkjDeXt/L7F929peFA2u/X3Hyefl7m31x59d36U37tqwVv34dsOSn
PpIPSL9qb/qbNUMY7+fxDmH/7kzm23978/MaWxysBwPrvIBQ65f1tnjlOvP3
XP8yXngb5WD/ObD2KyWhP14FLPzxolzmr4GVP61K/XP2PrxPRZpTL9e+D+/j
+e78fEUfnvdC4/j5/T6MD1IvNj19X76vpXvs+/vy/EedJF7Z1+zFPfv9fe18
vaZeL0c/2vfnP6m/7wgs/Sd3MnB+6ypg4UuG5TC+vh/9f3Hb95q9v/mvspYP
96e9Ti/8fLsS05f1p72X/Fzs4b3+5k88OH8224AQ8qnu3FfzF7DWiypaPg6s
823LMH+/OYDPt3cJzsvJOJDxxbcixgcAS/1kTFbyBQuAdd5xUu6DvTqQ8dbp
r6xXpxsUwvp5NPnzloPMf4STX58LLPl77AXTtwHr/vAD5OPTDGZ8XXyHk/ps
YJ0PI3pH8X+DeV7bSr1d+k8H03/9NczqNUNCWF/qQn1FY2DtT5b9v7K/cwjj
8+DazNfPAgvfNUfiQ+knGRrC/C8v8/tGwKoPS03+ZtpQ80efGB+fBtb5JBGm
jxsWwnn0j6xeNYzx6+Rzpm8bRvu7c7/p24YxPijma/q44SFa7+y/yfRtwFJ/
qLGE/e2TgFX/M4t8+/HhtJ9O5O/ajzMihPsFB1h+PcLio068r+NHMF71b2f6
/hF8Pv2bEf8cQf/5pL7l9yPpj/3qMP8fDazzAtx5Pw8ACx+/oAz5hgr7+by6
hlGfNnA/44lZzzjPzX8/7c8N+HvthwCWfVGNntl8uAMh5KMjGA+MOMD3syeC
8+pCDpg9iabe/esB2uOWseTHqx00/x9LfnzMQcafx20e/aGDvO99rR/u50F7
fp/Ij9c6ZPf7DfvhJhxiPPPrLfmHE4fob25+5HzcxIdDNL9/Hcf+t4aHzZ99
N/07sPCJ//1g/f8MsPCn3ubPUxwxe5uQ+WoTYOlnmJfA9O9H+PPckjNfvXSE
/1/XpMxX0x7leSmThnr3lsDCr6yV/F30qEcZL12VeXV4/teBRY+RMxvz14zH
QrReO1z8uegZj9HfPCnAevLSY/T3FYuyfnwXWOetFGH/WfbjIcpHNpH6u+yT
OG7xfxnTnwMr3+JG/dsjYOHPuniQX8hzIkTz7wa1zF8Baz2mofnbE/RfL1oY
nwAs9cEeLa2efzKE+9Pasx7R46T5jy6MR7ae5H3P2tfiHWDVA/RjfFPsVIjW
r7eNIH/gfYr2OHIi9Yy7Tlm+L3p56VcGFr4q2xI+/zKnGR8sXku+YMBp2s9R
kr/LPP3T/P8PiJ5O+oeAdZ7aGerlKp6xePOK1fOBhb95+JjvI/CMnc/37CeI
O8P7uOA79RbuZ0O0XvQpBfnxUWfteedg/e/AWbOPJelvfwDrvJS69Nc1zzHe
quWgfx9/jv7hpzftybFz/PnD/nMo/53wvOXzC82+Aes8z+1Wjz/Pv2/QEavH
A6se677xCRfoD+a+Zn9wY2DRq5RNTj58xgXmd4kK0t5fuED/872K+YeLjE8r
eDo5T/6i5Z+DOT9l7kXLp8c7bR8S7fXvNdRjZ7jEeDWZL+u1npf49d5nWa9d
dInx2elHVo+/xPOz7K3xCZfNXyegP25z2fKXtPTfKy4z3t6Y3fz7ZcZLdQpQ
35brCvPZZWWoj/v7iv1+09OtvUL7M7KS7X+5wvMt9XWdh3U1hPtn3Ww+DrDq
iSrZ/hlg1TOVpT7/xVXmD12L2P6aa4zPfuUlf9Drmv0/f1i/3TWzR+nYXxd9
jfn6ong+/9LXGa/FR/L597tO+3H7EfUP+67z/xtxis//LbDWt0L5/MvfYLx7
divz/8HAOj9lHvN/1w0+77jx7J/7ACz6lZr9yO+43Qyx/i/rl7vJ57+rCevl
wcCqb6pGvd+Xm+RjnCUYv3ncYvz5MQvjydHAqr9MYHzALfJtTT4xfv1hn999
yf63mrf5Pjfcp3+dcJt83kDZj4R4/Oht3p9xB6wefsfsjT/9d707tN8+G+2+
3OHfn2qR3RdgnTfyv30xd+lvd4wx/u0u7evGwQ6Nb6bfZT454R/rdwPW/s42
1u92j/a1R3PW65rd43mqUYd8wZx75IMCq1EPe/ke7Z13BfIF6e6HsH+nOOOR
brlDqbd5wvx5M7D6y2fMn18ASzw4NYL930XyhKoeZMwL5s+9gbWeGWn5LLDu
831FvVsUsPbfRxCXyBuq9erHxt//C6z9ozHk73cDa/z4lnx9DLD2Jwj/LvqN
fKHk09+yPj8IWM7jg48WjwBrPPmB82c/AOs8uXfU57vlD+U+rDjW54cB6z7U
eJt3Cyz1vJhf5OfjgKVedvsn+/mrFAjlvoVfjF9GAku81zsB+d9QYK1nCl8v
/T3AWu9IRf63esFQ9t+lov8cC6z5UDryv4eBhS94ltH4XmDVn+Rmvlm3UKj6
j5vZWc+fBKz6j7zMr08C6/k1vXySwqHcB1CU/rIRsNjv/aXJt08H1n1A5Vjf
Pwes9aKq1h9QJJT6UOHnRY8KrPdd+t3FPgOLXuao+Hexz0X4/we2oL/MUDSU
fFZrxiuewDr/twPjlUXAqrdGvi7x4i1gnc/lTb17lmKhrG8Oor9sAyx8Q/Wx
fN4rgHVf5RTy7Q+Apf+m2RzWP3IXDyVfL/vgpB+6uD2v9cyv1wPrfALph5N6
IrDwodND2D9QsESozi99cYrxSXdg4bd/XmM9Yyuw6o0fGn8CrPXvN8bflAzV
/GrzL8aD/wILH3EmFe/vbmDRtzXMx/sbA6z9guXZn16mVCj7I+qSTx8IrPPN
27A+6AcserpT/cmnfyjF815zEvk9t9Kh3K+53PrZgFVvJPNnpR8ZWOOZkw7O
lwbW/Af2UO1rmVDut//I+uGoMnw/t5I5WX8vY+e9gPWjAeu8ybrky+uUDdX6
cZgX67OTgCU+Gt7XyXwJWO3fZOrdk5QLpV5Z6u0ynx9Y5xmGODkPFVj6+4ed
s3wPWPipGmGsx6Ysz/Oy54Pp+4C1npvU5rkCK1+Unv1lV4C1fywP+e30FUK1
PtCuOPPj1sC6L6gi8+lFwFLvS1ON+2ZuAuv8oRqsh2euyPM0vCrn0/8FrPmy
1OelfxRY55NXJh9wF1jnF5Rj/p/dLVTjpWeFGW+0B5Z5Gr/zUB+/CljrJxm9
OM8YWPX7Caj3y10plPMM3lv/P7DGk6+s/78S7XnP21Y/B9Z5Kxc4L6Zg5VDu
N5P5NbI/ujLvWy7Ry0v8DSzxZtQ85tMRlWm/c0/g+yhWhfY9X3/m797Aks/s
bc/3sasK70eXZow3YqrwvLd1J99Q1j2UfGF+xheDgLWensHqC8C6fya59e8D
i39N9NHq31VDdb5C9xfkr4cD6/yQO+Svg4El324q/SEybwNY6qH3Zd4DnreH
B+/P2l2WHwPrfol1zJ8PetB+7Flk+TWw1o8mMh+vVY0///VY658HFv3dtkGs
HxwH1npkO8YHSarTXl1sbfEAsPDZZVtZPFCdv690Ter5zwPrvFIPiwdq0B8t
KM9+gGY1+PNTFOH/FzohlHp08e/IJ75N4NdneMz+8Wo+oZzH8oz942OANd6N
YP/4YWCpXx2KZj79y4fn4bvp6+tMDFW+Ya/w8cgnJk6kP64menjc9xMT6V8K
Sj4v+t9JodynHcv8udEkvr9NsdT7TQfWfUfir3GfzwNr/9pH8u2pJvN5B3yg
fr4ZsM5L+sz+t7mTGc8clK/Hfb88mc/DOyH9U/opoZy//YX9d62n0L9OTUB9
9kJg6Q9Jl4j+6Qaw6O37J6P+OutUvq/oJKz/tp3K8/E1Of39SmCNr2SejdzP
qfx7Vmeif88zLVTrm9+yUA/feRrfT7ds5J83AOu87lz078+m8X3nMf9eaDrj
lQSlTA82nf7avZjpwYB13lolT9YPp9PeJZB+ONFPzrDnX575cB9g4S8r1aG+
ffcM2o/copeX+AtY9uHNb0Z/X2ZmKPXnsj9G/BGw5B/j2/D5+QNrv/DfnuSD
Zlq81I3+vdIsu78D+DxHAGu/wBDyESHAwt/3/I96h6/Auj9qMvXs1WaHUj85
m3r2McC6T3I5/f2h2fRfZbZQj/cbWPl82fcq82zmhGo+MuKA6R+BNZ4/znrF
qTmMPx9d5fNNOjdU61vXHvP5NgKW+m+FD+QbpgMLv7U4icXrwJK/DUzDel/K
eaFarxuZ1+ZTzKM9OlKO/Whz5tE+yH5nnWcwz56f0+rl/6+m8w6vqsz2sHJB
OqEE0ICBEEDAAgYGxRkELEEwENIwhhJAio9jg8t91LEMOsy1DBh6BwUCGGQC
iOXsQ2d81CtNuYGrFEcCISGNRBIgtNy11rv883322efsc87e61vrt8qXhb3X
/V6tviQLf6vDW6znC7L4PR5cir07moW/tysXe9dmToj+u33Yg3Rhjc8iTrC+
L53DelDvN+zdcWGrV2iWYvdn9NwQ9Xox1F9lClt/8gD6y1fPdXuVzvqRL6z6
3zdT6VeLnReiv2KmryfzWN/qrE7hfp3H79vrK/Tdwnn4BwsPsH50mx+yftFv
T3g/nrDqx59coH96k7DND61l/SgXtvq/JtTH9VyAPX8zBv176gLWq+t3MU/u
M2Hrz7yf9fyisM0fjPP5cQvxt3v3Y71+ZSH+T2oc9fiBsOnH/aifrxU2/TSO
+H7QIuzBiR7E7zOFbb5zF+bpfL2I+7Usivr4eotD9D82pN8+frHfr7eS739P
WPWRN6tdL1/s/vYZ6gsbL8F+zD1Cf/rwJdyPWTr/T/ybLGHVO1M+ZT39cQn+
aezKFPMfWy51f2w28XiqsM1f1Phd8xXClr+f4v13S4kX/y/N8zXLsEevxJOf
zxA2feN+8ifLl/G8JUQTrx8Xtv29WzHf4M7l3K/tdL68zhdfjv2aofXyWp+x
HP+y5Czx/ElhzadPzmN9brciZPXFz30Lj1pBfJrwJff3shXYo1456GnHhW3+
7kf4t3es5P+tep96/PSV/B4xsr5bP5Sw5s/6TuP5Oias+YGxzyXTT7UqhL44
jucxbRX29E8Z1L8uXMV68epQP9+Pv6H1tLo/+Uc83wMe8Hy7sNaLbOjlny9s
+w10Smb/ltPYi+KTPl/mtH//Xz2eFbb+3tO+f4uw1vvMKiD+7ZOPva133uPh
fOKF1CLq17bl4++W+jz63/L5/0qLia/jzvB5jTSeF39s6hn8qX6lHo+fcXtZ
Sf1chbD1L1T4/i9nWT9uVno8L2z7Z3j93WZhq6etoT6v/Czr6R+d7yvw+O6a
1/MXEF+OqIt+nits+2PX9fVMWPONcbX4D3efc/+/IfXszwnbfLvbvP/rHPb6
YZ9nc/4c/mrbZr6eFmIP1zbx+rVCj69bsP5uKPT4TeJ185cLsdevtid/37UI
/2NdLMcnF7n9jPH8fBH6h82n0/q5Iu6PzJ7E953Ph6z+emmc6+XnXS/Q+F33
nznPeja6v9eXC9t+Kbqfe9nzLWOLQ/TfxVPPN6GY36va9fk1xTyf+0aSTz9d
jH+4dwx6fseSEPUGz3p+vYT4beZU92eErb5zmufXS1jvf3rd8/ulIer3/5v1
OlNY87/vzsY/WlWKPRi1Ev/pVCn+4Os5SdiLMuLZDlvRU0aX8fx1C/P6lWXc
z32+I/7/pczXsyOeryh3Pegkrx9TznpxqsrP9+Ov1UMvPFXu/vTtnh+/wP/x
186eH7/A+tStD/r8igvoYdlPYI9OCNv+A08RP9xZQXy5ZyqvH13B+z+i8+m0
frOC+/PJFX5+BfrL4K2eX6/033c/9iyjkvf79Rfs2dJK/KPcK9iznyrxpxq0
SGH/mt+wH0N/3z9G2PY7i8e+LxbWeuIO6dj/Y78R32W+DLe5iP09N4v5OGnC
Wm82bw3rx4KLxC8JX8F5wlafegT9t1VViPl4v1L/lSas/dYPVtFPtaAKf6Xn
reS786pYX7e09P1cq7FPBzowDzal2vWVzr5/TDX6w87evn+Mv75JHPPgml8i
/ninNzziEuvZA/3gOZfwjwp0Xk33hAk/XGI9jYhjP5kWl4nn/3IvnHTZ9bI7
Pb8urPVUq9vCPwjbvIPGvF/zK6ynx67SX5h4BT1g70WfP3OFzzuc7/kPYesX
OkI+vlmN6z/bPT9f4//3VvhDYcuHrYQP1eCvDdf5BBIfNb3q8e8r5POHXfXn
cYr3Q14l/hudRv5+/1Xuh38/TD6n0bWQ5cta9Xa9RVjrvW+PgT+45vpwkxT6
n6/x/17x/YcbXOf7DrpCv+YT17Ena3/v57yO/5Ch8xd1fs117FflDtfTb+Cf
5H/u/eo3uL7abPjvN4jHP/jY9XhhzaeM+cDj75v8/4/8BX7sJvFJg2mu59/E
Xi2ZTL3fv25y/aFM8v11aj0eTfT8vrDp9YM9v1/L/XF8IPm2vcJaP7JI59Np
feEtAf033cg3DBDW9evljuh/BwcF5q/uKCSebfpIQD1eEfXrw4U1HrtxhvXv
Q2FbDwuYD3NQ2OYV/X7+o4HFc4nF6OsJj/r7l/q8GWG1950u0I9+WFj9rf1l
Xi//WEB/cSV6/HBhqw8q888X1vxfs2pef0jY9oup5vXNHg/oX7vs82qEdT7Q
7Brvd48PzJ9/+xr8g7DdH75fXPPBAf65sj4vwuwvBWcJW7xVj3z5YWFdj+rW
JV6NeCIgX9qY/rPhwmqvv4twPVtY9eifG/v5T/j3bQFHDOH75bYk3k0Stv6T
9sS784W1v+d4tOsHwpZ/6UL/WsuhgfWj1cR6P5uw5VfuJp88V1j9wdFxvP+P
wrae6/w6tTdPBrZeT9X5szpPXVjnvZX39/qAJ/m+Mx/z6xe2+uUnXY9PCCw+
mJoCjxC2/Wwy/Hxh9U/Tx7ueL2zzUnX+rP7/w/i/b07l9xombP2q03l9lrDp
yW/w+x4Stvkkf+f1TYcH9rxNyCLfPkzY9kNeTj3ELGHV18esT8LeCGv91tEt
+GeNEgPm4Ybxx4Yk8nvMPQi/L2zz6o+jt/+PsO2HegZuOCKgvvBiktmjIcK2
H99txO/vCdt+v5Hob98Ka79yoPXyWk+UFJi+u/Ah7NNgYctnDeX4u8Kqz3TM
oN/1G2GbRz/N7U1yQL5H13edl5XM5+39iP74vyX7/xvyeiJhrd+Y8T32pE4K
z8egQuzJIGFbf3S+vNb/C9t+SC28v01Y/e+ke+FbU3n/++PRfwem8ry/k0l8
/1c/Plf74bQfWFj7g6+q3qvxbSrX+/Z69OQBaQH7RW9HL3hL2OZz/Yj+vCuN
+2XVr9Rf3/Djsy4T3/UfyfP9dn3mzbwpbPPkdd685heETZ+OQd++Lqz1mHNj
U6nveSqg37lXKvMLhG3+Ul8/X1jjnQN/8POFrR+2L/3yf0zn+ezWFz39dWGr
D7iXeTVhYc23tL4LPb5GWOPz72OZT9Pv6cD6seprfYD2fzzN/Z9xG3p+SNj0
/5v0K1x+mud7Rxn17X0zAvpzjuP//FcGz8e+I8yv+TyD60/YiT9UJazx+n/k
eP58VGD+eMxS6h2mCds8iA+J5z8TtnqeV10vH+X/5/gU+plH+/OYiL/xkrD6
c9/0Rz/IFdZ84uZ7qQcoH836ERHjev2YgP0yI+AXhTUfWv8a/SC5whof3yyj
X6RM2OYf/oz+dc9YrvfEEfLVL4z17/N1suUHNo3lfrlns+fHhFVv6bCW+vke
mYHNv/lhMfranzOxh8PnoY9vzGT9Wa16vOajha2e80W4+7iA+XbP8vw/K2zz
6TJ4/jcIm/+VhH9SNI71JvsxuNt47MPPA6l/mTIee3asD/X/68fz/23qgT04
J2zzvlUP1Hq6tYHlmx7MZ73MFbZ5Fvmsp+XCVn+Z7/nv7ID9tQu9Hi/b/89i
n2crbPUdpbxfubD6h9ne737fusDin+9LWH9fWId9rVbW/X7XYf9/Kvf9W9Zh
X6I0H6/9I+tZjwou+vnCtn9wFa/fJGzzNWuIr0uE1T+6WE1+/+4NAXrOVa+n
38D//fZ1798Xtnz7VervizbgLzxaSz6g+yeB+dfxjchXPyts8/Z8Pl3OJ6wf
Kxt6Pb2w+qcpv9fT53A/lTb1evgcf/5buX4ubPPCojhemMP6OCrK6+k38vxv
7Eh8P2Uj9mhrDPH7+o38frfHen2asMazg3t4vP8p/kf3nl7P/yn3S9+4JN+/
J2C+aT+P94W1/v3PA/z8TYHVD7w1mNdPFtb5vHtG+PnC1i+QiB5wVtj2G0pH
z+7yT/yBbWM8fyCseuw7k/i+G4RtP7HnPX/wT57P5dO9vi4X/+fQDL/+XJ6n
Z2b67yds8/dm+e8nbPn55fw+XTf7+pXD6ydvxv8b9oVf/2bW40O7ub4CYdVD
Jh/0z98SWPxU8ov//luwn+MK/fO3cP8NukS9YIGwzlN+sB7rb+etgenLf4ji
eZwsrPnkvM7Mo1i3leu7tT/xQ4GwxW/JxBtdPvPfd1wy/RDCGo/2+k+Or3Oe
8y7vVyCs+sP01XCXbQH7NYe4nonb/HoPw9nb/PrOEe+c24Y9Xl/L9Xb9nPXw
pXbMi5skbPl1tc96vrDm65cNRm8/K2zzxZ5xPf6LgP4oXd/Lnm/5jLDqXaWL
0e/XfOH+Qg75+Xxh7YedH/b+6i8Dqw/cr+uTzjMQtv0VCji+Rljjx8SL5AdO
C2v+5TmJd03v+Qp/cXtbeNxXfH6TjvDHwlafeo/PpxO2/pD7fb5dKLD88Uda
P6f5iJD786q/az9DCP93otffnRK2eaYav2v+LcBf/6QX83DGBr6+x+AvrBC2
esJo+KSwzTdozry79uGA+VANfb6dsM6rOVrj/Qxh/MtWxejfx8P+eae8H2F7
wP7nh+kveFrY9NsQr18mrHrT0k3o6T9tJ555Ksv19R2sDy3eg9N3cD9+OQ39
ZskOt18TXJ/fwf0QlUw9XZudgekbbbXfPebjx0fu5Hk928v1fWHT96M4fmwn
98/mRug7rXfh/52+QX952i6/fu3f1P1VhC0ffIrjR3fh/xcchFvvDsif7nB9
fDfrS3iLn7+b9fvQOvJbebtZLzou8PP3BOzH/o9kr28OyJ+95ufv4XlPn+7n
78GenZwCR+4N6Acdg14/Utj610fAi4StX0/id/v+e/E3avtRL9NmX8A84F7o
+WnC1p99F69ftI/1qetdbi/qhpm34vVzk4TNPpyivi5b2Oa7naX+/IywzT/X
9Vz3F68XZh7GeebRTRS2/SSLef1aYfVv9haSXz8jbPsXljDPLva2MPUOJbzf
RGFd/z8o5/2yhS3euEC9e4Gw6pNtK7x/rn7Y9I70C36+sOYj6l+mn26dsP4/
H1dz/Kyw9edf4/piG4Tpf7nK9TwjrP7IzFp4rbDNN75BvUC+sMZXaXWod4tp
GLZ5myX1yd+OF1b97p4IeLWw7VfdCD4tbPFwI+//asTxryPpr8oUtnl3rbx/
S9j2I2nv+raw7W/Zzvu3Goep7+vs/V/CNv+qh/efCdv+vV3hfwvbPOk+6NfR
TcLMp+2L3jxG2OLbPyVRHyxseuuj6NmnhFUPKor3eoGmYfrVHye/PVpY18Ou
I7weX9j0l3Ty4SeEVV/6cgzcrlkY+zbFP1/Y9nt7Gb18hbDWV30/nfc7Kaz+
bM0bcPuIMOvnLN5vlLDNP1rg50f4/bjC6x2Erf58A/WO7ZqHmY+r9XSqTwvb
fjj/Ip+/TNj6abQfTucLClu/kurxWg/VIowecz6J/ZOETa/Xfjh93oRt3n4j
ns9jwqqPjY3257Vl2OLBb3r689qS5yPvYezPQmHVA3cmc/yosOmlk7Avka3C
7Lf9GvYjVdjqU+Z4v7qwrj8N1/L6PGHb72An9igyMky+8Aj1SanCtn+52kud
XxTJ+d3reH26sNWjRLm9bc3zuvEB4sWRrfn/44fBi4RV7/jbJNfXhTV/sGYG
8WNkmzD94XOJH1OFTR/7lH7s+W24H6r2wP8rrP0licfgVm05P7IUTmnL8c01
ru8LW75X+921f7gt9mNxJBx5O/auIpb8eoryC7cMnNYDvX6+sO33o/G7Xr+w
1vOt6OXn38HzUXmf7w8vbPW+D5G/n3cH9+vPvZlv86Ow5TPvdn0+Ksx8uU7s
9z5CWOtfYqOo98uK4nncGeH9b8K6Hn5d6/p6uzDzQC7RjzBMWPXtV4vod5st
bP3Bea7PC9v+gPvJt0e0D5s/NXcrxxOFNZ+4Ksf1+fY8P6eXoL8fFLb54zPg
pndy/+16CT0+Qdj6X1Sv0XmwwlbfMsT7K4RtvuxD6PWNo8Pozz28vyKa3++h
dvCsaNab9XWopzgQzfkVVd5/3iFMP+EFOKED9jHvF+L52cLqf99ykOMHhK2+
Ikz83qQj9vjFbXCCsNZX3ZdNvdo/hM0fXszxAx153l97j/rYxjFh6v9fId4f
Kmz1XKrPa34hhudx40SvjxNWfbNFhtfHdQozn2IE9ThDOnF+g0HE/+8LWz3c
QOL57zr579EHfa9+LOdP6E48Hy9s9aUdkvf8Px3dsU0=
        "]]}}, {}, {}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"Time\"", TraditionalForm], 
      FormBox["\"Phase\"", TraditionalForm]},
    AxesOrigin->{0, -66.45412330630002},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Medium,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"Phase(Time) dependency\"", TraditionalForm],
    PlotRange->{{0, 6691.276999900816}, {-81.621917725, -67.176399231}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.003666666666666667], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
cuZzIrjjlO57U8LK34w8f/bdXXPCb35kyVqQ58+bP1xJWPWtAq/H1bcacJAB
x7o3gJXfzeF9AZHSt+f5o2x73w1eOCfJjX5wpk3fVw1j+uuQg8bx+m+vKzmN
178iWah5vP+9Py4thaOsXzZnLT+famfpLTzflhSZd/N6Xf08yPS7V8+c5P2u
rjjuInwnWdO8N3i9rj7eM/n3jOVReO+Cdyb/vsFqr8Fa4/rX9o4RDlZ9jcp0
137jwKqfiWG139RMP1M9UmZ438fhMXPDAXUOfCwEL+w451ApWO29Eqz8rMXr
KzgldiA/HybclRaw6msHWPnbg+mfN84bwOt/XLvpCJ7PxccJsOLBdOP5vH5X
Hsv5fdsq71gPqz5vY3q47A32mvw/wvtNMeHAaTiw6axZ//B8xy71vAVX2tG3
4EOT3y95vIsHH3j/Lh78a/I7RBukd49fJwKs/iYGrPyOB6u+JoU3dD5SNi0/
7/IzK/ymcsxreXh+V1+LwMqfMrDadxV+/kDV+7X5/S6eNoLVnlvBqp+dYNW/
nvy8q38D4TvfQ68dyetx8XIi78/Fy5nwjvfpNp3vhOOXnVj0DzzzUMVx1+BK
9135wRtKRql1Fx5YsGneh/DVJQviPoV7Pq0e6SVc6u6qt2/ghcUfnvsAd8yf
e8sXuFakehP+5fd3ntE+SOffbjkpfp0QcKXGBbOHgQPqTIkdAc6UtXGUKHDP
vWc+R4fPJQl3JRY8svCEA/Fg5VciuFC4UIOSwl9SjWmbktczztUvWPmVEc7V
4GmKrPDEA8lC5YT3dT3wMQ+vd0rJuwV4vZ8H7ysCp6q3d0EJXk/VaEPKGFeA
Z8461r2Kyc8a/P6PNXPXgcMMOhTQAH5S+fH3Rib/mvF6RhTf1gruGG3TvHZM
z5xzVCfmz7TOLbvBqm+94Ktf15Xsx/IdFjfjIDgwyoiYw1jeYW58HWnydxyv
t/yklxPh2Nd+XJrK+ztXecdMeMexZXPmmvxbyPLeUb7xUl5//FGFV5r8W8v7
6Rk7xAZ4Yce2jzeb/Nxu6uMu1r/AGOv/Nvl50NTHo8yvG6nqnTT18SxcKueO
hBd5vTXyh7vCdNd+r5v6+D9eX9uY1+6Z+vmI6THDrH0Gq32/Yn659v3O1MdP
zO+iO0t/Y3reSOl/mvwN1uW39y0oHSEUvPKIGz/AgQ9//YoIxw4x7HlUWPn/
B9PXd98bh+mnvq9KAOtxZmJ4w7yEw5LDeryZGlZ5pIfDrC2bMzOv/8S5JNl5
/XPe/8jF69/Z82k+Xp+rv4XgWk1b7y4GKz6U4vX0LjqmHNNDbehcCR7Y+nnl
anCuUR3z14KV//XgUhEyhwk0+d8UVrxtAau+t+H9THh7oQOvx8WPLrDiRw9Y
/VMfk58DmO7i7xDm39ugaUfAigdjWJ4uHoyHM206dWoy/GVVwIbpcKHs42bM
hhUP5vPzLt4uZv7d7t96OfPP1e/VLP8rF8qv5/W7/mwTr/flmvjbTH7+xfvf
sKj4gR5Ij3Er2RFY5XECDpJ22/vT8I7SeW+fhzu23HfiH1jx5xqs+HOL6a7+
34VV/x/CikdPYZXPS/jNhb4F38Iqr4+8Hzee+AorPv2AVX5Bev622kMIWPE8
DKx4HgHu+DjNiCiw4lEMWO0hNqz2EB++eiZF5gBY5ZUMVnxKBau9pKO3JbmR
kdfv4k1WuFbu+8tywhqv5YXVHgry+l3/WRRW/pbk9bvxR1lY+VsR1vijCtNd
vK/B/Eu45VgdOMqQ1ysa8HpdfG8MH1vUdUpzXr9rL615fT+C12gPqz535vW4
8Uh3k5+9me7qd39Y8X4wrHg/jOUzY97rUbwfV//HmfKYBKv+T+Pn3Xh6Fvyl
/6xZ80z5LGK6q//LTPms4v24+L+O1+vGMxthjWe2mPq9g/nt4v1uXq/rb/eZ
+n6I1+Pi0zFT30/Bik/nTHlcMvl/1dT3m2xvbnx42+TvfTjIPyuOPIbVnz43
+fea9af7y77veX27l3T8zPq85XPV7yY/f7E83fgmeK/fVn0PDau+h2O6q++R
4EJj5hyKBqu+x4SV33Fh9a8JYfWvSWCNF1PAyt808JsVH1NlYLqbz2SBld85
YNXv3HCmW1Xv5+f1ufpbGFY8Kc50F79Lw8rv8rDyuzKv38Xv6rDidW2Tv/Vh
jR8DeX2uf20Ka/7Xkt/v4kVb5nf6u707wqqvXXl9rr725PW5/rMvr8f1hwP5
/W4+OJT56eLBCOanG4+MMfk3weTfFFj1dwbL243H58Ca3yyANZ9ZwvJ185kV
Jv/WwLEzRgi2ud9vKz+3waqvO2HFg73wwteXlxyA1f6PwMfKNm9+AlY8PgNr
/H0BVv5ehlUfr8Oa3/yP1+fGK3d5/S6+PoQ13nsKKz9fwqqfb2HNvz/yflx8
/QorHvyAWzafVjRof6S7/i8krPobFlb8jQirPKLCGm/EgLWeERvWeCM+rPgQ
AGs8mQxWfE4Fq/9MB6v+Z4LvJMveIBus8skFK37kgzU+KcT7df1jMV6vi9cl
YY0PyzI/XHuoCGt8UpXX69pDTd6vK6+6sOJJQ96/K68mTA+4XbEFrPJqA6t9
dIA1P+oCK973MOXbh+luvDiA9+/mU4N5/ykCHw5nebjxzWhTnuNNeU6GNb+a
Dg/c97X/bJaHa0/zeT8u3i/m/bjxzXJY7Wk1y8+1p/Wsb27+tJH10c1XtzI9
boOdf8Ear+9h/rvxyn5Y4/XDrF9uvnqc9at94cDTprzOm/L5h9e7ZEHca6wv
Ln7dghW/7jDdjWcewOoPnvD63XzrBa/HjR/f8Hpc/Ppg8vsL7y/+qML/sj27
/iDIgN9WewgBqz8NDWt9IDys+VFkWOPB6LDyNxYcpVbLSfFgxa9ETA9Wp2lS
WOPDlLDaQ1per4tXGXm9Ll5l5fW6/M4JK17lgRWvCsCq30WMS8Dqj8vwel08
qsDrc/1vFVj9Qw1Y45c6Jn/rw+p/G8HqH5rB/60nmvxtx+9z859OsOprN1j9
QS9+X+ysWfvBiieDmH4gWahhJv9GwkGCZLw1Ftb610SWrxsvTmV9cfV5Ju/H
xYu58MBnVe9fGPTbAZnCXbkEh0m35dhluOmu7nuvwn2nFt92nekTX6+4Ca8s
cX/Z/+BSY2fNugNrO/09eGysUIMewE+WH+v+CC6WY0zbJ3C9yHWaPuPn+xQO
fAEvnH2k7Cv439SjCr+Ba/1VNuc7eGibpyk+wG1bTIn9CZ4ZJ3OYL/CHle9/
fIUr5dr2/ju84WjPpz/gQwtL3v0Fr5379kLQwb/d9+9Tp4LDU2fOORQSzva/
yjtCw1eThlkbFu7Zau+C8PDSePUmRISVv5Fhva4QFe76JFW96HC9BxfK/wF3
3LOoeCx4boeC2ePAW0pFSh8PPpX4VrIEsPIzETy0UOMoiZmeL0KwpPDAP258
TQbfXDrvdQr4Q7+2j1PBlSJmvJUGVv6mg1WfM8ABIYfsywTvK5N7SxY4/vXv
q7LBqr85YNXfXHCINQmH5YGXvrnUMx98bnHnlgXgf6tFqVUIVn4XYbqrr8Xg
U+Wa5i0Bp7qZInMpuNDWj6nKwHe+rYlfDlZ+V4CrNckfrhKs/K8C52v4+HtV
eOarVW+rw6rfNeGpB5PcqA2Xu7fiSF34TcoGO+vDqr8N4WybTyxqBCu/m8A9
C+Qc1QyOPfRl3xZwkIEz2reC9fpNG/hcj+eV28F6/aYDXOhO34KdYOVvF1j1
uRus+t4DrjX+UEAvWPW9D6z40Q9W/e4PKz8HwooXg2HV96HwzV4xrw2Hld8j
YcXn0bDq81g4xOVlc8bDyu+JsOr3ZPjS6a/9p8KKH9Ph2LWbN58JKx7PhlUe
c2HF5/mw8n8hrPi8GFZ8Xgqn2rgg7nKmu/q9Ek42PHaI1bDyew3cMuqw5+vg
CDXz3v4TVn5v5PGuv9wMq7/cCh/qtu/Edqa7+PIXPLFdjPW7YMXrPfCLfy8v
+Ru+9GXgtP2wyuMg0115HIbVXx6FFU9ODf1txe8z8MjpHfOfgx8kz5r1Aqx4
cgn+crF3jMvwnbPJQl2FN7z79esarPy+ASt+32K6y8/bsPLzLqz8vA8rfjyE
lZ+PYdXnp7DixXNY+fUSVn69hlWf38KKJ+9h1e+PsOrzZ1jx5SvTQ68v+R1W
/P4Bq37/Yv7+DJo26DDfweEoV88lCQmr/oeGVf/Dworn4WGNTyLAyepOehkJ
zpUt8GEUWPE8GtPDXjsTg+lufBITXtmp9e7YcJig6TfFhRXv48MaLyaEVX4B
cGCzlpOSwLs/pBmRDFb/mgJW/5oKVvmlMenp4B3z49fJAMfIcLtiJqZ3mVY0
C6zyygarfeSA1R/kgtVf5GF5uP4gH6z+twCs9lMQVn9bGFa8KmrKr7hJLwkr
npWG1V+UhdW+ysMaX1aENR6qDKu9VYUVv6qb8qrJ8nTjodpMz3O3d124a/QN
nevDal8NYY2PGsHqL5rAimfNWH7Ba+VuYcqnlWk/bdi+XDxrx/x2/XMHWOP7
jsw/F786M931D12Zn66/7m7aS0/TXnqb/O4Ll9sesKG/ye+B/LwbHw1mepFx
M4bC6h+Gw4p3I03+j2Z7cvFurCmP8bDmVxOZ7uYHk5nu+pepsPqT6aY9zDTl
MZvxyvXnc9m+3PhpPpxvdPtoC1nfXX++mPV78IGPS9h+3PhpmYlfK0x9X8V4
VGHCgTWwxkvrTLz6E1b/vJHxx82vNsN6HXwr67Mbn2438egv410mv/eY+PS3
qf/7WZ/XlY5waMRvq74ehlVfj8KKB8dhzY9Owqqfp2HF77Ow7v88rPHJRVj3
/w+s+nUFVn95Ddbr8DdgxdtbsMYjt2HVn7uw4ul9WO33IazxxyOmu3j6BNZ8
8Rms+fcLWOONV0x39eONyY93vH83fv7A9PMVx32CNf/+YvLnG6z49y+s+PfT
5E+Qkb+t+UkwWPEtBLwlwYiYoWC1nzCw8iMs011/Eh7W+CwirPFZZFjtJyqs
/iI6rPz5A47/Z9cpsWDVlziwxmPxYPXvCWD134lgtY/EsOZzSWH118lh1Z+U
zD83fkrN/HPtKS2s/jgdrHiTAdZ4KROs9pSF6S7+Z4NVn3LAGv/kgtWe8sCq
L/lgrX8VgBWPC8H/rR/A/60fMH9ceyoBK/6WgtWeyrB+uPZUDj528szn8rD6
v4rm/ivz/nZ131vV1I/qsNYHa7I+uPZTG9b4oa6pH/VhtZ+GJj8awf+NF1j+
bn7ZzORHC5MfrUz9aMP7/1Q9UjtY6yPtTX50NO2lM6z42hVWf9+d7cn1Nz15
/2483BtW/94XVv/S37SXgaa+DDb5M9Tkz3BY/fdIuOPkuBlHw3OL7Ug4lvfv
+ufxpr1MMPkxCW756MelKcwfNz+eZurHDNM+Zpn2MYfl7+YD88z9L2B7cP3p
Ilj9zxLGEzdfW2baywoTP1aZ+LEG1vraOtrNh/807WUD88eNTzbBGo9vMfVj
mym/XaNxfa4/2ANrvvI3093174fVPxyENZ88DGu8dRRWeR6HNT85yXRX30/B
Gl+cgXV/52CNhy/AioeXYN3vZVjx8Sqs8cd1WP3JTVj9yf9gxYs7sNrHPVj1
4wGs8dcjeOHh8o2fwGovz2DVlxew+uNXLA83/3gDq/28g9U/f2B5uPnHJ1j1
5wv83/MFWP31d6a79vWD+enGu7/g/54vjEG6y+/gsPI7JKx4HRpW/oeFFa/D
w5p/RIQ1Ho4Ma/4RFVa8jg4rf/+AVb9jwYpPcWDF73iw8jsBrPqdCNb8OzGs
eJ4U1npJcljjo5Swxo+pYOV/Glj5nw7W+DoDrPadCVb8ywJrvTYb87dT6905
YM0Pc8HqH/KY8sjH8nPxsgCs+XkhWP1rEVjj02IsHxdPS8BqP6VM+ZWBNR4r
Byu+VoA1vq8Ea75exZRfNVjzxRqm/GrBird1TPnVM+XXAFb8bch0N75txPJ1
49smbB+u/TSDFa9amPJqZdzGlFc70346mPLpBKt/72LKoxus8V8Pft7Ft16m
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
vpQZ1vgnC6zxT1bYjW8jZ4PdeDpsdljzoxywi7fBcsIuvn6n1f5ywW48+yY3
rPFPHtiNTx/mhV1/+SCfX36385v2WADWeKcgrPFOIb/8TheGSy06crIIrPlQ
UdiNT/cXgyMc6L63OFylZ+vdJWDNh0rCMWfF/bOUab+l/fJaUsa0x7Km/ZXz
y2tyeb+8JlTwy2tURVjzkUqmvVWG6yQbEbP6FO/80WrAqg81YdWHWrDmz7Xh
3pe+/qQ1X64Du/b9pS7s5jvv68GKz/VhxecGsObXDWGNjwNh1Z9GsOpLY1jz
6SawG29daWrcDHb97/nmsJv/nGoBa37dEtZ4uRWs+tIadv3tX21g1Ze2xu1g
xf/2sOpPB1jxvSN8868TizrBrv+d1xlWfeoCaz7dFVb87gZr/twd1niqB6z6
1BNuf+FMj15++XbpbdwH1vy2L6zxdD+/fFv398u32QC47YqSjQb65VtnEKz5
62BY8XsIrHg9FNZ8dBis8dNwWPF5hF8+mUfCmp+OghWvR8MaT43xyy/lWNiN
n5ONgzW+Gu+XZ4IJsOL7RL98Y0+CNb6abNr3FL+8I0yF3Xg7yjTYjbfDTTft
fQas8ddMWOMvOlX8G19nmfY+23iOae9zYY3H5sGa786HNd9dACv+L4Rd/31x
kV8fLiw27XsJPLv2w3NLYfUPy2Ctry2HYx9adHgF7Pr7Ayv9+rNnFTwzQ4Od
q2HNr9bA6i/Wmva+DlZ/sd607z9h/TmtDX55TtwIa7y2yY/nozb75Tt0i2nv
W/143nsbrPHZdj9+d9ph2vNfsOZLO/3ybLIL1nx4t2nPe2DNj/aa9vy3X15l
9/nxuNh+074PwK7/znfQj8+5D8GaHx827f2IXz5pj8IZOj9NccyPx4mPw2e2
L4h7wrTXk348jnoK1vzntOl/z5j2d9Yvr1+04tXFqb+t+HQJ1vX/A2v8eBnW
9V6B+/4a+MdVuOOP6pGuwZqfXYc1HqBd//D5Bqzx4E24xpmeT2/Bau//g914
/cZtWO37Dqz++S6s/vgerPZ4H3bj6y0PYBev1z2E1b8+grWe8Rh24+kZT/z8
GP8UVvt6Bms9+Dms9vQCVv/4ElZ7eeXnR5PXfn7UfePnR9W3sNYP3sFqL+9h
rRd9gLU++xFWe/nk51/+z7DayxfYjV+yf4W1nvTNpH836f/CLv5l/GHq509Y
672/YPWXQab9ttYfgsKjg66NHwzW+kNwWP1jCFjtLySs8W8oWP1laFjzoTCw
1oPDwloPplX/w8EaD4eH1R4iwJo/RYQ1Po4Eu/j6KjKs501R4J6rOj+JCqs9
RYNdvL0VHV5eN8rVGLDWN/6A1T/GhNU/xoLVH8Y2jgOrf4wL63lTPFjtMz6s
9ZAEsIvH2xLCWl9OBLv4tiEAfrLr48rEsPrPJLDmW0lhtedkfv2YmtyvH5NS
+PVhbEq/PgxPBbv41z81rPXHNH596JEWVn+azq8PHdP75dsmA6zxcEZY4+FM
sJsf18sMq//MAis+ZIXvRL5WIRus9ebssNabc8Baz8gJa30xl19eOXLD6j/z
wBof54XVf+aDNf7Nb9p3AdOeC5r2XAhW/1QYVv9ZxLTXoqa90mqfxWCNV4ub
9loCVv9V0rS3UrDGq6VNeysDa35aFtZ4tpxffpfKm/NXnu6fvwqs81U1rgbr
+6vDGg/XgPV8qKZxLVjtvzas+XAdWO29Lqz2XQ/WfLg+rP64Aaz23tB8PhBW
+28Eq/03hjV+bgKrP28Kaz20Gaz+vblxC1jPL1rCmk+3ghUfWsNan2kD6/lF
W1jjg3aw1kvbwxovdIA1XugI63lFJ1jxozOs+NEF1ny6K6znU91grZd2h7Ve
2sOvP3V6+vWnVi+T3hvW840+5vN9/fpWuR+s9dT+fn0qOQDWeH4grPHJIL9+
5R8Ma3w/xK8/uYfCQfaVzTkMVvwa7te/HCNgPR8ZCWs+PwrunyZMutGw639S
jfHrW5Kxfv1KNA7WeHu88QRY63UTYe13meTXt8iTYY1XpsB6fj3Vr39hp8Ga
30/361/QGX79+0b/N9+Htf47y6+fn2bD/833YT0Pn+vX1zfz/Pr6bL5fPx8t
gLXetxDW/plFsNaHF8Na31sC63nNUr/+nVgG/zffh/+b7/v1b/9K41Wwnpev
hjXeWePXz91r/fq4fZ2Jb+uN/4T1/HwDrP01G2GtB24y8WuzX79mb4E1/tkK
a715m4lv20082+HXn6F/wRr/7IT1fGeXiU+7TTzaA2u+s9cv30Z/m3iyD9b4
Zr+JLweMD/r9WYVDJt4c9vuvIkfgCAe6FzgKz8zQIM8xWPOb4355ZTlhfBLW
fOeUiR+nYe1POj/jtzVevAArPy/C6g8uwZpP/gPr+dllWPl/Bdb48iqs/uAa
rPHmdVj7jW7AGm/ehCcOLhx4C9b6zv9g9Q+3YZXfHVjldRfWfoh7sPYj3Ye1
/vMA1nj1ofEjWH/O/TGs/uSJ+fxTWOPhZyb9uTn+Baz+6CWs532vYPU3r2H1
R29g1ae3sOrPO1j9z3tY/c0HWPPjj7DWoz7Bbv6T8DOs9eQvsMbXX2H1V99g
za+/m8//C+t54w9Y60c/Ya1H/4I1Xg8y87e1/hUU1nw7GOzGSyGDw+p/6KtN
dn8IAWu+HBLWeD0UrP4kNKz+JAys/iQsrPWocLDmy+FhzZcjwBo/R4S1XhUJ
Vn8TGdbzyCiw+o+osPqPaLD6n+iw+p8Yxn/A2t8ZE9b4Oxas50+xYa1Px4G1
XhYX1vg6Hlyp/P1l8WHtD0oAaz6e0ByfyBwfYD6fGNb4PAms/iwp/N98Hv5v
Pg9rfTwFrPF6Sljz+1Sw+rvUfv0blgbWeD0trP4vHaz9SelNegZY4/uMfv3t
mglWvM7s1+f2WWDtP8oKa/9nNljxOrtff+vm8OtvjZyw1hNzwXqelhtWPM7j
19/Sef36WyKfX38L5jcuAKs/LQgrHhaCFQ8LwxqfF/Hra+aifn3NWAxWfCzu
18dkJfz6lKgkrPhWyq9PsUobl4EV38rCim/lYO1vKm/yv/Ks39Z4pgqs/rAq
rPyvZlwdVnnUgDWfqgmrPGrB6q9qw+qP6hjXhfU8oR6s/Sn1YT1faABrfach
rPXbQFjrPY1grfc2hlU+TWD1V01h9TfNYM2HmsOaD7WAlf8tYc2PWsF63tka
1vOMNrD2u7SF9byF1vypPaz5UwdY60u0no92hNVfdYK136EzrOejXWCt73aF
NT/qZtwd1npRD1j7I3rCWh/qBas/6w3reUsfWP1ZX7++negHa/9bf1jPYwb4
9fHIQJM+CFZ/NxjW89Mhfv3bMhTW89RhsPqv4bD2x43w69uakbD6m1Gw5k+j
YT1vHQOrPxoLa341zq+fs8bD6n8m+PV1ykRY/dEkv/5OmAxrvWiKXz9HTIW1
v24arP5lOqz+ZQas+cJMWPOFWX796zAb1vrRHL9+NZ8La3/zPJM+H9b8boFJ
XwhrfrcI1nxiMaz5whK/ftZYauLhMljPu5bDmi+sMF4Ja/6wysTL1cZrYM0f
1sKaL66DNV9cb+Lpn7D6tw0mnm6ENd7fZOLpZlj7R7bAWl/aCmu9fJvxdr++
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
Ff/bwmov7WDNt9rD6g86wBr/doQ1nukEqz11hjU/6wKrfXWFtX7QzaR3h9X+
esDaX9MT1vyul98eUvf220PKPia9L6z9OP2M+8NqzwNgteeBsNbLBvntKfFg
WOOzIbDWO4bC6u+G+e0p3nBY6yEjYPWHI2Gtx43y21OU0ebzY0z6WFjjwXGw
1uvGw1rPmwDredVEWPtRJsGa/9IaP07229enKcZTYfW/02Ct50w3n58Bazw6
E9bvYc7y2+eb2X77fDUH1nxqrt8+n8yD9bx2vt9eHy6A9bxiIaz3GRcZL4bV
/y+BNT9bCms8sAzWfG05rPWpFX48uLrSb/8XV5njV8MaT6yBtZ61FtZ66DpY
44v1fvve/affvndugNWfbfTb75ZNsNa7Npv+a4vf/lZu9dvf8m2mf9tu+rMd
fntc/Bes8cxOWOP7Xaa/2g1rvWKP8V6/vc7622+f0/eZ/m0/+7/xL/s2Wfjb
Z698/UkrvSk8ZGHHH/TxGk37NIP7JbrxlV747VLP5nCP+cU/0bN7FezWAk7b
YvcH+nbGrF1awtfWz3tNJ2o2qV0ruFOCDe/o5I9SdGoNt54b9zU9rkeM9m3g
IoXGvGhjzt/WpNNN4w1r0w6+mD7MC3rEp/6t2/vne9neP1/bDv75ntNxHnxv
1RFuMPv1Y3r1+Z6tOvmff0q/GdG2RWd4aaX7D+mnoa406QJn3HPiLl1l5qHA
rvD+1SXv0vPPlm/czf/8Hbpbl70Nu8M7U2+6Rc+ssKNBD/hWiLU36aS7FtTp
CU86neQGfWVIzNq94G8NolylE+QJV7M3/OFW70v0yuVvq/SBTw56fp6u16Fl
5b5wlFy3z9KLk9er2A+u8erCaTrc9tLl+sN7B+w7QXcplbP0APhunZ3H6ZRR
15ccCP/ckvAw/U+tCUUGwV+yjtpP53/Wt+BgOPBw972D/c8XHgI3LxHhAB0v
8pBCQ/34sHeof74Cw0w67eJF/uF+PNk93Bw/An636f0eeu2/vwqONOcf6X8+
/yhzf6NM+miTPtpc3xg/nu2iX2RukGcsHClirb/og/+cyTkODjP2wFZ6d7Xc
2cbDFYps20y7eJVlAlxqf8AG2sWrjBPhf0fNWE+7+JFuEvwpTLA1tIs/aSb7
8WEV7eJH6il+fFlBD+r2NMVUP14soV37TzLNjw+LaNf+E02HU+fLPp/u8C5V
/Bl++55Db1kZP+5MuGWnKTONY8+C16ccMZ127T3GbDj31PaT6Vf1HkaZAw8o
03gi7dp35Ll++59AHw5SI9I8uNfxU2Pp9JOLhp8PV2qXfzQ9PWnmMAvgG9eS
Dadd+w+9EG53dNEwelO/acEX+e13MO3iUflki7z7O0crPTnsrv8U7eJVmRSw
u5+TtItXpVPC7nqP0u5+SqSC3fUepEclDlU4te/9tGvvBdKYdOPCaWEXr/al
NcengxV/6JytHudND9cpdncn7dp77gxw5ieVd9Bq/xlhN57ZSrv2njUTPOXL
qo2ZTHpm35vpYOHTZ8kCb7u4ZINxpqyw4gft4kWGbLAb76yn3XgkfXbYjT/W
0G48ky4HrPhhnDonrPhBu/FHylxwtCbNl9O14tRJlhvu86HqEuOkeWDFFzpU
o7yJ8sIR7p1bTLvxSEA+czyt+JQfduOR+fnN8QVMOu3iWcKCsBvfzKMV3wrB
Lp7Npt34JFZhWPGLHnbyc/QisBufTKKzRr8WqSjs4tlE4yjFYBfPJtCKX8X9
842nXTyIUAJW/KNd/IhYEp679MgY4/Cl/PgxhnbxJVxpWPGRVvwrA+/4mWZE
GZNeFi7zYsVw2o2XQpaDi7WJNsQ4eHnYjacG0y6+BK0Au/HUANrF22AV/fgz
kNZ8inbjj/6V4OV9Wv9Lu/FG78qw5lPGvarAbn71hXbxqWdVWPMt2o1Hulbz
4817WvOt6r7f0y5+daoBaz5Vw6TX9OPTG9rFo/a1YM2naM13avvx4zHt5i/N
6sBH0956QLt40aQurPkM7dp/o3p++75Daz5U3z/ffdrFl8YNYDf+uUdrvtPQ
fH9D//sCA/148j/axY/6jeAgd5bdoN34qG5jvz+v9NBvn2dp9e+P/PZ4ktb8
5LHf/k7Q6t+f+O3vKJ14YuxiT03/Trv2UeSZ6b+fmeOfm+ONi74w6bRrv0Vf
whMWzzn00pz/lR8PDr8y53/tX++B1+b4N7DmV2/8+yn81m//+2jNL97Bml/Q
ml+899vzDvrhhmM5Pvjtdwut8cFHv71uptO22J3tk0mnkz9Kkfmz3z7X0xof
fIE1v6A1v/jqt9cVxim/wRof0G48kOI77OYby+nsBQKT/+u396W0xg8//Pa2
iFb//dNvz0t++p9P/Mtvvwto1x4TBFn82649zqE1PwkKJ921YDZ9ZUjMOMHg
MeXGzTCOFRxW/09r/hLC91R65fK30ULC6v9pFx+ihDLpdKy/ukYPDdfr0HIS
7cYbUcOYdNrFm8hhYTeeGE8/vlExYjjYxZuxtPr/8L5H0y4ehYsAdymVcxQd
IseWMBFhjQ9oN18KGQl27X0I7fr7YJFhNx8bSWt8EQXW/Ix23xc6KuziyzBa
548Gu/gxiHbjiV/GA6LDGj/QLp70iwG7+ct32s1fev8Ba/xAVztYtkdMWOMD
WuODWL4/0C7edI4Naz2W1nppHFjrmbT697iw1jNprVfGg108eESr/48Pu/jw
kFb/nwDW+CCBSU8Iu/78Hu3iQaNEvu/SGh8E+Oe7H+B/vlFi2M1PbtNuvtAg
Caz1TlrrnUn9+0u+zL+fpctM+nL/+pbQmj+t8K9vkXHileb8tMufJKtgzZ9o
xdfVsOInrfnRGpO+xqSvhcvFyjiPdvE23jq4xPRZs+hvDaLEXg8rvtJaH/rT
//xM49gbYDcfm2EcayNc8I8Q02nNzzbBLh5Ppl28jLoZPh9s0DRa8X0L7OLx
FFrxfSus+R+t+LsNVvzdZtK3+55Aa/64A3bjxXG05m9/+R5Da31rJ+zGi6No
xc9dsOIzrfi8G1Z8pjU/2wO78dYgWvGRVvzcC+t5lXG/v2E3HvtOa361D44U
sdZX+uA/Z3rs9z//lXbjte4H4DBjD3yk3Xis60FY8y/axePuh/zPf6D1vOyw
//lPtPu+bkdMunH3o+b6jLsdgzX/ozW/Ow4r/tNuPtjhBLyhSqSXtBs/tjkJ
63kV7fqDFqdgN757QGv+dRrW/Mu48RmTTmt+dhbW/ItWfD4Hu3h0i3bxut55
3zdpF6/qXoBdPL9Ou3hU6yLsxnuXaRcfql+CXXy5eMn/fI1/zPF07qntq1yG
Xfw5T7v4UfkKrPVgWs+zrsJuvHaKdu297DVYz7OMy1yH9TyL1vOuG7Abbx2j
XXwoeRN28eEwrfnaLbjMixVHaK03/8+k0+58xW/75ztI6/g7sOaLtJ633YU1
36O13nwPdvHo73sm/b5//MDmS7z0n7TiVQs4xviX/9KKdy19/2ppjm8Fv9v0
/kcrk94aduPToG3gtf/+GkAHHu7+s41/PX3bwm4++43W8/92Jp1249c+7X1/
p5f3ad23A6x4Tbv43Kuj/31faK2HdYJdfP5Eazzc2aTTipddYBd/Pxp36wor
ntKK9938833qZr6/u/n+7v75uvUw56c1Xu8Ja/8DrfF6L9jN99/28j/fubdJ
N+7Ux6T3Mefva9Jp9Rf9YPUX/cz5+8NaL6RL7Q/oOMD3G1r7NwbC6m/oi+nD
tB0Ej/jU/xmt/miwSae1v2IIfHpt5ye05itDYc1XaM1XhvmffzzMpA/3/ZB2
4/tmI2A3vr9Pq78bCWt/Bq31xlGw5iO069/qj4bvDyt8xzhwjEmn1V+OhdUf
jjXfP85c3zhz/vHm/LT66wnm+mmtl0707+fWRP966k0y6ZPM9U+GO7xLdXOy
yZ8p5v5ozdem+uf7n3GDabDGG9PM+aeb65vu32/DGf793pph7m8mrP0xtJsv
1Z4Fu/HHVdrNf2rN9n3VuNYcWOMNuvGbH9Xm+r401/98jXkmndb+m/mwxiu0
1rcXwG5+c4bW+vZCWOMVutfxU+UWwRqv0FrfXuz7uHHpJXCIHFuO0RqvLIU1
nqHdfLRmqqW/7cZ3/9BuPlkjNezmm1dS+5+vngbesjL+dVrPA9LCGm/Sqh/p
/M/foDVeTW/Sadce6mUw6Rn866mT0VxfRv9+amYy90+78W3VzLAbv16g3Xy4
ahZY9SeLOT4r7OrThazm+Gy+LxpXze6f72J2/3xVcsDaH2ZcOSf8qt7Dc8aV
csEab9PaX5Yb1vMb2s3PK+TxfYZ27aFCXpNOq33kg7W/w7hcflj7O2iN5wvA
ej5Eu/peqiDsxvfHC/qfL1MIVvuiXXsqVdj3scLm/EXM8UVMelHfx2jtnytm
ji9mji/uf/4orfZdwlxfCf98pUua+zcuXcocX8qcv7RJL23Sy5j7K2PSy/o+
WtbcXzmTTrv5UYnysJv/HClvzl/BXF8Fk78V/fMdoTXfqmTOX8lcX2VzfZVN
ehVTPsYlq5rjaTd/K14NTjwx9iFa88nqsJvfHaC1P7IGrOeXtPYn1oQ136O1
/7AWrP1Hxvlqm3TazXfy1oH7JbrxF+3mN7nqwm4+sZ3W/qR6Jt04Z33/89tp
N7/J3sCkG+dsCLv5yzbazVeyB/reGmiOb2SOb2SOb2yOp29nzJq1iTme1v6q
prD2X9HaP9UMdvOhTbSejzb3vZFW/H5m4jut9Zjnpv+gXbyv+MIcT2s95qXp
v16a878y539ljn/t9wenX5vj35jj35j0tybduPI7k/7O3N97v786Qz++UbH8
B9+naa03ffT7oxO04usn0/5pred89uPBYVrx6Yvvw1/8zxf/auKHcbFvfjw5
SGt/wnffB42L/mviD6391z9g7U/4YY7/ac5vXPSXiV+/zPmDLPttF8/+Ni4Y
FNb+a1rxLRis/RHGhYOb89Pa/x3C915a+ytCwoqvIc3xocz1hTLpoWHlH638
CeP7IK31vrC+D4T1z1cknDk/rfwNb9LDm/uLAKv+GBeNaL4/ovn+SCb/jQtH
9r9vf2RzfVFMehSTHtWcP6pfngWjmfKN5pdXweimfKKb88cw5RvDnP8PUz/+
8M9XIKa5vpjm/LHM9RkXjG3SabX/OLDaP636E9d8f1xz/njm/PH8+ykQHx6y
sOOe+Cb/Epj8SeCXV+GE/v3uMy6UyOQfrfYbYK4vwORvYpOe2FxfElO+Scz9
JzXfn9R8fzI4Z6vHu+jlfVrnS27On9zPr/wpYI2f6DrF7uZJCWv8ZJw7Faz3
O1L558u31rSPtX55F15nymeduf/1Jv+MC/7p58eeP833b/DvZ+cGc/0bYe1P
pzW+2wRrfERrfLfZ91Za46stsPanG2fdatK3muO3wcHCp99Ea3y1Hb62ft6f
tN5/2QFrf9oO//MZ//I//ye9oUqk9DvhIoXGrKWbxhuWdpfvNbT2t+2Gtf/d
OPUeePX5nqvo02s7p9oLa/8brf1vf/teTuv9m33++VYap9pv0um8f39MdcCk
HzDnP2i+n9b+kkOw9s/R2h9y2P/8ssPm/Ef8/Fx9xC/PDEdN+dEanx+D9X4D
rfp13K9PG40znzDHn/C/L+NJU//ocT1iZDjlez2t+nUaTtRs0jrj9GfM8bTe
3zoLa3/lWT+/0pzzv2/dOXP9503+nffvJ+MFk37B5P9Fc30XzfkvmeMvmeP/
Men/mO+/bPL3sjn+ikm/Yr7/qrm+q+b4ayY+XDPld92Uz3VTfjdM/hqnv2nK
h9b7MbdMOq348j//82uN09028em2+f475nha9eOuiU93zf3fM/dnnP6+iX/3
zfU9MOVDu/l05oemfT005f/IlN8j8/2PTfk89vMj3ROTP0/M9T0192ec/pnJ
v2f+9XVov9y7vle09jN2gPV8kdbzxY6+X9B6/7sT7OrH804mvTOs/TDGrbr4
n39G6/3xrv71vjRu183//Ata7693N9ff3aT3MOk9zPX3NNff0+RPL3P/vcz5
e5v7622O7+N//nkfkz99zfF9zfn7me/vZ66/vzmedv1nywG+nwww3z/QXN9A
//vaDDL5Y9xqsEkfbI4fYq5viEkfar5/qDn/MHN+2o0HWg6HtR+X1vPtEbCe
b48w+TfS5K9xm1Gm/tCqv6NN/TVuN8akG7cba+o3rfeNxvl+RWv/wHjTvseb
808w8WGCSZ9ojjduN8lc/yTz/ZPN+Seb/Jlizm/cbqo5/1STPs3c/zTz/dPN
8dNN+gzz/bTa10xTvrTqxyyTbtx2tik/WvVnDuzG10/nmOPnmvPPNd8/z6TP
M+efb+rvfHP+Beb4Beb4haZ9LjT5s8i0z0Xm+hab7zdus8TEH9qN15svhbUf
3rjZMlj74Wnth1/u+z6t/ewrYL0vR2t/xkpY+xto7W9YBev5sXHd1bDed1tt
0tfAV4bEvEbr+fZa3zdpvc+ZacVva39bZlj772g3H/9F3x9WOCArrP3r9P7V
JRNn872I1v767LDLv4W03l/OYc5Pu/uJnxPW+8XGCXLB+n2FXOb43LDeX6L1
/lIeWL+vQOv9pLyw9r/Ter8pnzk+nzk+P6z3m4xjFvDPN4vW/vyC5vwFzfcX
8r9vRiFzf4X9880sbK6vCKz9+cZ/FDXHF/WvJ3Yxc/3FzPUXN9df3Hx/CZO/
xjFLmvwradJLwXr/jC4xfVac0ub6jOOUMfdXxtxfWZNe1lx/OXP+cub48ub+
y5vjK5j7N45Z0aRXNPlbyeRPJXN/lc31G8euAuv9D+NYVU16VXN91Uz9ofX+
f3XTfqub9Bqm/GjV35q+Z9f0Px+3ljmedvEzXm3fc2qb89fx68ss4zh1TXpd
U771TPnWM/lf3+R/fb+8YjYw+UerfjQ0+d/QHB9o6kegKb9GJn8amfxpbPLH
OF4Tc/9NzP01NffX1Fx/M1M/jWM2N/fX3L+fmC3gYSc/T6H1flBLWO8HGUdt
Bev9Ijr31PbRWpvjaf1+RBuTTuv90rawfl+C1vtH7czx7cz52/vnm2gcpYN/
vgm09oe8h7U/xbjUB1jvh9N6fvYR1vMFWs8fPsF6PkBr/8JnWOvntN6//gJr
fZLW+sxXWOtHtNZ3v8F6P4/W7y99h/X+H63xyb8m/tB6v+6Hqd+06t9PU360
3n/7ZdJp/X5SkJW/rd9Hou/W2Rk2KKz3w2hXXiGCwYknxh4azKQH9z2UduO7
ICFgV779ab1PQev92ZBw5ieVv9Da7x8K1n57WvvVQ8Oab9Eaz4fx/ZzWfDws
rP3gtPZ7h4M1Hqc13g4Pu/K8Rmu/aQRY+zGNq0eEtR+T1n6SSH55nqLnLj1S
NrJfvsdptdcosPZj0HqeFtUvr7202mM0WL+XQGu/UHRYv5dA63lCDL981tNa
r/3DL4+VtJ5nxIRrxamzlHbtM1ksWM9LaLXH2LAb/y+gNV6PA6s/ojVeieuX
1zRa8T4erHgazy+f8PH98hlF633NBKY90fq9sYR+eQ1K6JfXT1rvByWC9f4P
rfclA2C9b0jr/ZTEfvm9obU+kQTW/JzW+l1S2M2XHyX1y6dJMt/3k/nl1Sg5
7OZnt2m1txSw5qcp/PKpntIvn/O09hen8tvXWVr7b1PD6t9o7T9K45fHflrP
19P6+b+T1vPhdKa90Pp9kfSwnu/Qai8ZYD3/pF38Sp4RVv9Eq//KBLv59sJM
/uebbIb1vj6t9Ykt/ufvGzfZ6rfXB1tN+W8z8XSbX94Nt5vyp/V+xg5Y6x+0
3k/5C9b7IX/5n2+w069Pt4zr7zLH09qfv9ukGzfYY9L3mPPv9ePPTeN6f/v3
c+tvc/w+/3puGtfbb9JpvT9zwPd1Wus/B026cZ1Dpv3Ret/2MOzG41eMax7x
+8fLtN5vOQrr/QBa7w8cM+2b1v7H47D2X9Laf3/Cj88nae2fPwlrfzmt/vSU
ST9l0k/D2h9Ja//3GVj7H8/4ny95Ftb+7bMm/Zzffxw1Lnne/74j583xF8z1
XfC/r8RFc32065+KXfLj4aFLJv0fczyt/V2XfR++7J+v2BX/fIeu+OcrftXc
31WTfs3kn3GJ6+Z44xI3TPoNk383Tf4bl7xl8veWOf//TLpxydvm+2+b+7tj
8ueOyb+7Jv2uyf97sPY30trfdh/W/sn7Jv2BSX9g0h/C2p9Fazz5yPSPtBtf
5noMa/5Ha//9E78/3U73mF88x1PYzQe3GGd7ZtKNsz2HNb+ktf/lBaz967T2
v7yE9fuhxplewdof/8qkv4Y1PjDO9sakG2d7a9JpjR+7rfpt/d5id1i/Z0vr
/XZav6fYA9bvKdL6PcWesH6vg9b7571gvV9Oaz7YG9bvgdB6f7sPrPfD6QpF
tnXpC2t8S+v96X6w3p+m9fyyP6znc/39z3caAGt8PMCkD/S/7x2t8fUgc33G
XQab9MHm/obA+r2oIeb4oeZ44y7DTPowc/7hJn24uf4RJn2EOX6kSR9pjh9l
8m+Uyf/RsJ7PjvbLo90YU37GncbCen/duOM48/203p8fb8pvvLn+Cf7n3xp3
mmjun9bvE0zy/YHW7w9MNvV7sl/eXaeY8jfuOtWcf6opn2n+/bwz7jzd3L9x
5xnm/oy7zDTXP9Nc3yxzfbPM9c029zfbpM/x/X6O+f655vi55vh5Jt2463xz
/cbdFpjjF5jzLzT5s9CkLzLXv8hc/2KT/7Tq1xJT/2nV76Wm/tP6vaBlsPYX
0Hp+vhzWehmt/S0rYO0PWGHSV/p+Suv3hlbB+n0HWvtfVsNaj6P1fH0NrPkn
fTTtraZrfT9Ya45fB2t+Smu9b73ve+v972vyp/l+Wr+/sAHW/I/W/GkjrPkR
rfWLTbD+fgat98M2w3p/jdb7MzlX/7bGZ7TGZ7lMei6TnhvW+kZu//NF8sAa
P+bxP184L6z997Tev8jney+t9wvym+NpvR9RANb+fVr79wuadFrvZxQy5zcu
WNikFzbHF/GvZ28Rc3xRWOPfoia9mDm+mMn/4ub44ub+S5j8K+Hfb/6SsN6v
ovV+UylY84NSJr20Kd/S/vmKljHptOpHWT+/9pU191/O1C/jwuVN/Sxvjq9g
8qeCyb+K5vsrmvRKJt24UGX/8/srm++vYo6vYs5f1aRX9a+3YDVTftVM+VU3
9be6//kCNUz+1DD5V9N8f03z/bVM/a5lyq+2KZ/a5v7qmO+vY9LrmvyjVb/q
mfpJK37V9z9/sL65vgbm/A3M/Tc019fQXF+gyR/jQo1MunGhxqb+NTbX18Tk
n3Hhpub6mpr7b2aOb+aXV8HmJn40N+XbwqS3MN/f0py/pbm/Vub4Vub8rc3x
rc31tTH11zh/Wz/e72lryqedOb9x4fYm/9qb9A7m+A7m/jqa+t/Rv98Cncz1
dzLHdzb1o7O5/y6mfnQx6V1N/e1qrr+bub9u5nxfTTz4Zu7HuOB3E6/p/96H
Nu3xX3M9P0x+/jDH/4S1XkVrve2X6W+MiwVZ43+/cdGgsK6f1npXMFjxIpg5
Prg5P632GgJWedDKv5DmeOOioUy6cdHQ5vpD+9dbNIxJD2OuL6w5f1iTHs7P
j0PGxcKbdONiEWCtx9Jab4zo+zCt8o1k0iOZ9Mi+j9BaD41i0qOY9Kgm3bhE
NFjrqdHM8dF9H4nuf75kDJNuXOIPWOu9xiVjmuNjmvRYsJ4n0vo9hdi+j9N6
nhDH3H8cc31xTf7H9cuzeDyTHs+kx4fVPmnV3wSm/tHqrxKa+pXQHJ/IHJ/I
HB9g2l+Af75iiU37TmyOT2K+P4l/P8WSmvSkJj2Zqf/J/Pwqntzkv3GJFCad
Vv1KafI/pcn/VCb/jYulNumpTf6kMfmTxuRPWpP/ac3x6Uz8SWfKL735/vQm
fzKY9Azm+Izm+zP611s0k7l+WvEts7k+Wv1TFnN8FvP9Wf3zHchq0rOZ82cz
+ZPdpGc3x+cw92dcNKeJD7Tady5Tn3ab+rLbpO8x6cbF9/rnP0YrHv1t4hGt
39faB+v3X2j9Psx+WL//t9+kH/B98oD/+XIHYf3+jHH5Q7B+X43W768dNsfT
er57xPepI+b8R83xtH6/7Zj5/mPm+4/D2j9y3KSfMOc/Yc5/0vfpk+b6Tpnr
P2WOP+1/3xlaz7/PmOuj9fuOZ/3Pn6X1+0rnYP2+3jlz/HlY+9lo7Xe7AOv3
Ky+Y9Iuwfn+R1t+XvQTr/RVa+xv+8X2T1v6IyybduN4VWO+/XDHpV006rf0l
12D9fiqt/SnXfd+mtT/khn+9t26Y89/0P/8/WvtXbsHaP2Mc+D9Y+2do7a+6
bY6/bc5/B9b+FFq/b3rXL8/LtH6f6p6pP7T2b9w36bR+f/GBiS+0xksP/Xh2
lFZ/+sjEa1rj+cew5re01h+f+N5D6/fhnsLaD0nr9z2ewfr7T7SeDz+HtR+S
1v6uF7D2d9H6+04vYe3vovX+0yu/POe/8ssz/mtY7zfQ2h//Btbf13jjl1/0
t348mEhrf/s735Np/X2O9/73Taf1/sAHk05rf/9H//MzaL0f8Mmvr7No7b/+
DOv9hM/+5+N88c83i9Z+0K/+9cz4aq7/m0n/5pfvmv5rf1vvyw+A9b79AJM+
ENb7+rT2sw8yxxunG+yfb91g/3zph8D6vQHjjENh1deh5vuHwdqvOMwcPxzW
7xUYZxphjh/hf1+GkSbdOOMoc/2jzPWNNvlD6/cMxsAqnzEm/8b6n19rnG6c
yd9xJn/Hm+sfb/Jngrn+CSZ/Jpr8m2juf5JJpxVvJvveaJx5ikmntR9lKqz9
JLR+j2ia783T/M9nmw5rvw6t/TozYP3eJK39ODNh/Z4SrfdBZpn0WSZ9Nqzf
a5rtX0/OObDi+Rxz/Fzf241zzjPnN841H9Z+JuPcC2Dth6LV3yw06bT2Uy2C
9XtctP7e8mL/87sXm/QlsH7vaon/fXmWmu9faq5vmX++Xcv868m33KQvN9e/
wly/cb6VsPpjWuufq3zvpbVevRrW+oJx4TWw5ofGRdaadPq/3yODNf+jNX9f
D2u8YlzyT5NOa31ng+8jtOaPG006rfWHTbDmi8bFN8N6f4TWfvgtsOZzW0z6
VnO8celtsPbbGpfdbtJpzRd3+D5lXO4vWPMlWvOpnbDmS7TmM7t8n6M1n9oN
a7xqXGmPH387Fl7n+Q3t4mnHIibduGNRWPs/aO3/KAZr/4dxp+L+970pbs5f
wnw/rd/nKWm+37hzKVj7h2jtXylt0kub6ytjrr+MOX9Zk17WXF85c/3lzPnL
m/svb46vAOvvKdPaX1bRpBt3qOSf73Ulk7+VYb2PZty+iv99L6uY9Krm+qua
81cz6dXM/VU3+VPdXH8Nc3wNc3xNc3xNk17LpNfyz9extik/WvW3ju+3tPaf
1TX1x7hzPVj7x2jtn6sP6+//GHdvAOvv/9DaX9oQdv3hN9r1d30CTTqt/a2N
YL3vSOvvKzWG9ffy6Heb3vdrAuvvPxn3b+p//get9y2bmfM3M+dvbtKbm/QW
/vX+S2t/b0vf31qa/GsFu/HRZ1r731qb+kHr/bI2sH6/hdb7ZW1hvV9Ga/9Y
O1i/z0Lr79m1h7X+QWv9pQOsv69B6++zdPR9ldb7K51g/X44rf6mM6z1QVr9
YRdY/alx6a6w+nta6/3d4P+eH8Na/+ju16e9tMaDPfzy3Unr72P39NvfFlrv
r/Xy48WfvfzyzdAb1vvXvf3yTtvHL++VtN4H7QvrfVBaf3+1H6zfh6H1+y/9
4Q7vUs2lNf8fAGv+Tv/ckjBk8PW/7cZPw2ilh4Bd+QwP4X8+ZEiTTuvvG4eC
3XhwRCj/86FCm+PpG9eShQrje3gYc3xYkx7WXF84/36GhfOvJ3R4WH9fmtbf
n47gexztxmcRIpp02o3PIkXyPZ6u8epCxMhw1ujXxkc2x0fxPz/OOGJUWL+f
QOv3EaL5nkhr/Sq670m03s+P4XsKrfWzP3xPMY4e06QbR49lzk/r79vGNum0
fl8nDqz1NVq/PxDX93TjmPFgrb/RWh+LD2v9zDhOAljrj7R+XyUhrPVL44SJ
TDqtv28cYNLpbl32JkoMKz4YJ05i0o0TJ4X1/mxSc/5ksN43T2bSk8P6fark
/vkCUpj0FOb7U5rro7X+mwpWfDROlhrW7wcbJ08DL610fxmt309OC7v+doVx
ynSw3uenV5/vmTo9rN9PpfX7yRlMOq310Iywft+U1npbJpOeyRyf2aTTWm/M
4ns9rfW6rCY9qzl/Nljrhcbpspv07Ob4HL7X5TD3l9NcP631wFy+/6S1npfb
9wZa6415zPF5TP7k9fPjz7zm+Hyw3m8zzpwf1u+T01qPLGCOL+B/PktBc/3G
mQr559tonLmw+X5av19yBNbfez1i0o/6HkjrfbpjsN63Mw56HNb7dsbBTsD6
+9zGwU+adDrxxNghTsH6PQla45PTfn8/jNb444zvEbTGD2dhjR/OmvRz5vzG
Ic+b441DXTDHXzDpF036RZN+yZz/krm+f+DpSTOPpEPk2BLmskk3DnMF1vjM
OPRVk37V5O81k37NpF836ddN+g2TTncplTPsTVi/N0JXapc/3C3/86Numfv/
v67OPO7n4uvDKkkSQlJZsyVJmyRJ9l12spblTn4SJZW2W0ISsmQp+06yJSEJ
qRQV0SKVJEkSbfbqOe/z/NF15s/r9Z7Pd/nMzJkzc87MfJs8T9Z5JnvAOl+I
rPOnvos8KuHce8Hy3xLO9T1Y5xslfNE+sOKTCef9ASz/KeF8+5Pn9yf6j8nz
ZPlXB8A6D4Ys/+inRCcrPngwlh9/MNF/jjyBrPPfDoHlP5EV3/0FrPkNudEl
FQofBut8KrL8j18jTyebP1LsCFj+B1nnixwFmz8y42gsX/y35Hmy7jf4PfLM
hK/4Ayz/hqz5359gxccTLvFXov8VP6/kseTzyTpv6Hjk2ceTzz+RPE/W+Swn
wbqfguznjyU6Wf7V6cjzyJofn4k890zy/N9g3Q9B1vz7n2R8Tfjaf5Pxlazx
PcuS/1j5D2TFA8+KvIKs/ImzwVpfICteeA5Y8Tiy4nlZwYrHkeW/DQPLvxgW
f+8Nz4EVz3wu+f3DE3148vzzyec/nzw/Aqx454jk/4+M/3dlwjeNSvRR8X1U
eiG+jzdeSPTRiZ5wpTHJ+0240tjk/ZIVzxwXeXXClV8Ea32JrPyb8WDFA8mK
F05I9AmJPhGs/QoJV58EVr4oWflDL4GVz0tWPO1lsPIryTr/cHLkzWTFy6aA
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
rzeRtd5EtvnDjb/F+n+QbPPB5b/F+v2d/MmB0tf9HsfPvr/H+l/2e6z/o2Qb
Pyv8gefNv74frPawmLr5279SL7Fl69V/xvG1F1n+N1n+N9j977/AWq8iW/uY
C/b5JXXZk2PRPncDuz0h23xzH8tbeypxPNrvLmRrXzPBmn/uJZv9KX4itrfO
YI3P06jLHpFlj06ivOanZPPXJpPNX9ud8OWn8Hnmr7cD+3hN3ez7F2Rrr5ec
jvarDdj9d7LZr8/I1l7znYntsznZ2t9osrW/bWSzP7n/juN5Y7D8t+fJZm+2
sLy1pxz/gG0+W5/88OIHniVrfgv2+e2/sT3VJlv7GASWf7bx31j/Z2VZ9l95
rVeRNV6TrX7XkuV/g1V/t5wFXf432MdrctuyQ4+RNV6fjefNvvQjT9kzYAXZ
xo8/wKq/688BW/31JVv9LSVb/R0hmz36rRY+X+vhtePzfcia39dOPg+s9axr
6kA3e9OLbP7eIrD8vUPUbTy6qi7Y2se9YNmf+dStfRygbvandD3oZn8yyDY+
zSHLvoB9fl8futavwO7Pk6397GF5rV81AJu96EjW/B7s83vq1p4uawg2f+ZO
ss3fJ5JlH8jy5xvF9tUKrHjJOOpa/6Ju7S9/46i3APv8nrqNd59SN/8xb5PY
fluCtb42lrr8JerWfi+6A7rmE2Qb70aBtV7wMXX5O01je2sE1nrBc+ThHdZ8
QLbxLHszPK/1AbK1pyFg2Z93qVv7Orc52OaLtcBun8g2Xm0k2/zxrBZgG4+q
gX09nbrND98im706w/I2v6jSEvzR2mkDwFofWk02//g42fyhm1rheRtPHiLb
/GIF2drLH61i/V7fGqz18Naxfpe2jvV7pHWs32vaRPvSG+z+DlnrCywve9Y2
ch+w7NcS6vKXqLdrmav8ndC1PgF2f4n6xv2nD1I3+1W2HdjGtx5ks1/zwJrf
HqDepPm+Uu2hV579cjewr8cnvI/lzT+6okNiz8g2Hs4gn5m06Tuy1is7xvbX
Cazxcgp1s3ffUDf7VqgTWOsTZJvfTiLnfXDsl2D3dzpDN3+8NVnr+Yn+Odns
T/67or1qDla8ZjR1+Ttka1+57kb5zRmjG4M1vj1PPVfhwVvIZm9ydIn2pj7Z
7M2zYNmb96iv7ZaRrWu0L7W7xvoeRJa/k+jvzI7t4ew5sT1UB2u+/jTZ7NEG
ltd8bE6s/6pzodv8/HGy1jvAmp+dTsrfOg/63p4HHgMrX2ANdbNXJ8nWXm6e
H8fDh8nmb60km/36C6z2ceOCOD49CJb9Wk42+3WU5TUfWxjbS2+y7AvZ/OXD
YNmTq19J7AtZ+QOJ/gvZ/Kdyi/D55j/1JC+utGI+WO3tJ7L8pVejvekOlr2Z
TV3rn2Sbr5VcjPLmP3UlKx5Ctva0Fyx7U2wJdOUfkKs3XTWVbOPb12TZl6Vx
vGsP9ngh2ezPVyyv/INlYPPX25I1nyLbeLcTLH8o3/I4/rUAq/2MIVv72Ua2
8SjPa7E93UHW+g5Y49/H1K09Xbgito9GZJt/DSebPfoQrPHp/Ndje6lHVv4B
WfYJ7OuvK6O9qgNWexpMtvazieW1PvQGWOtDZMVTyOYPvQ2Wv/0PdfOHqq5K
7BFY7eFNsrWHU2SzL5VXgzWfA8v/XkXd/KNj1DWfWxP5IbD87xVkxVNY3san
69+M41NfsM/nyJp/kRVPWYvnzR++D+zxFOrWHn6mLn/lrVj/97wV63MO2OOj
b8X6LLEu1meXdbE+Z4A9/r8u1meRt2N9diTb+PAyWP7sV2TNn9bH/n0n2POJ
1sf6+5ys+OYGsPkXLTfE+hu3IdbXpxtifV20Mfb3phtj/b1A3fzdT8jWv3O9
A5a/AdZ85nmy7FPW5YE/J2v9+lyw4rVkrV+TNR8kKx8i23/s+VFks18vkNdU
3vMJ2POjzoNu7bEx2P8PdflP1GWfsoNln8DuP5EVH2J5m69lOx+s+RhY49Ug
so1XG8maj+XA8zZe3Q72/Ciy+UNvkW18OsPnNR+7ALrZnwEJrwGr/Z4k2/h0
c06UV34TWP7PG9S1fk3d2kPFC6Fbe3+ILPtE1noT2NebcoG13kT+5EDpZWC1
j6Nkm+9dmzu2l/vBPp+jbu3lMHWzX1fnga78D7LyP8jmbx9Mype7KJa/l6z1
JbDmaz+RFS/OC1a8mCz7SN5T7a79ZPlL+WL76wr2fE2yzc/2kuUv5Y/trzNY
9nMqdbOf31A/VrBC4YvBiqeBff2auvnfX1G38fHSArF93gl2+0pWvJnltT51
SWx/rciyr2DZnx3UZV8LxvbXDKz29QJ1rQ9R1/rQpWDFw8hmf4aDNb/fQjb/
OsdliT0Ce/4JWfE0lrfx9LzLoSueBtb8bjBZ/hLZ2sfZhWL7qQn2eBr1TXkG
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
39lkxfvIa7tllG4cOYMsfw/s+dvU5S82AcvfJSv/Auz5nmT523fE9nMfWftz
yFqvJyt/vmnSPsE+36GufCay9hc1Q3kbnx4ma77XLNb/qWax/m9tDl37o8C+
n5yseD1Z89UW0d48BfZ8MurKF2gZ20NNsNrDILLyncnaT98KbPOJ2q1i/Q9p
Fet7M/VCDSqd3zrWd4PWsb6HkzU+tI71e2Eb6DafawJ2e9Em1u+nLK/9x21j
/bUi23xgIlj28kuy8u3vBMu/Acv/eYm61pupa72tHVj+GVjxi+ntYv3tJSuf
tD3Ky79tH+tvFnXrz/vIml91QHnlG3WI+uwOsX73U1f+W8fYv3t0jPW7AOzn
FXWM9VuuU+zPvcia34PlLxzuFOu/fGew5jdgP9+Quvo7dZ0HfFfS38nK7yDr
/ASy9f8b7wbr/AWy8uPBvr5DXechd4n24dGEV4M9v5+6tacqXcHmzz9O1voU
2dpTlm5gm3/UALs/Q93a00ay9oN2j1wT7OtzZNkLsrWvczOivft6fmz/hReA
FT9ZEP/PFOrKjybb+FhkIcqb/3UX2OdrC+P//X5h/L0lX4n2rTt58O6Sc8nb
8y4+QNZ8dxG+X+sdCc8He74OWfPtVyP3IiufFez7zamrPyyO9q83WP7RUrLy
aVle498S6DZfeJAs/w7s8WayzVduWory2v9G1n4TsPunZO2/W5aMf2Af/6hr
fzF1jX/LY/1nkuWfk7Ve/Bo+T/492M+DIWu9muU1/q2I7aMOWPGkoeSN+09/
QNb5E69H+9fo9VifI8C+v5y6zvtaCVa8l6x4L1j+8Hay4g1vxPpu8Uas73Fg
z78ly99dBdb8GOzz41Wx/nexvObHq8GK14A9Pyvh3Swve7Em9v9O5DOTNk1f
E+t/L1nxwjejPejyZqz/WWTFS8mKl66N9Z9BVr4vWefBg93ffQus9TWwn19D
Xf2duvr7utg+eoP9PLB1sf5/I2t9/u1k/CNr/CNrPgfWekTF9bH/9094JVnn
q5G1v2xDbD+PkG18XA328wCo63zljdF+PEbWfiqyjRf/kG3+Xe2daD+eImt/
Hln7jTfF9lKDrHw0ssY/ssa/dxN7AZY/NZS68oPJuo/ivdh+6oPlXz1HVj4f
y5u/dcH70M2/agxW/GQkde3PpG7+VO7NsX20IJt9GEdWvvYFr//H8r/J5k/l
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
1n0uZLOXxevE+u1C1n4VsMcTqSsfoW6sv4y6sf7mgf28jLqxvq6qB135CPVi
/S2irv1CZN0vVj/a2/vJig/Uj/X5G3Xdb9oArPwjsvJvG8T6PkbW+lDDWP8P
g9V/V1FX/hFZ+QSNwMonAPt9z2SdV0E2+3tb49ifnyIrn4Cs9eAmsf6rN4n1
/TR1+QNNYn2fewd05RPcEfXuY6I+l6x4Mln5a2Njf+5BVjyZLHsN9vjQuNi/
e4N9vyR1nQ9L1n1QL0Z73hfs8SGy8q/JOo9yfKzfAWDfHzE+1u9p6uYP3Toh
2ucnJ8T6fHtCUn8TY3+tAfb8aeqyt9R1nuik+L7rkXUfGtjzOcha33sJ5bW+
R9b6Hljj5yfUtT7ychwvm4N9PZ+6zX93Utf9BZPBOu+PrHgs2OOxk2P9XDYl
sbdgP29jSnz/e8g6/3Jq7D93g91eUpe9JOu8iWlg+TdgP++CuvoLWedDT0d5
nU8E9v2R1NVfqCt+NiP2j95kzcfJyl+eEevr+plgxb/Avh4+M77vUzPj+64y
K7F3YD+fh6x4Jssrnjk71kcm2PfXU9d65pxYHzXBPv+hrnjmnPi+s88Fm//Y
AOz7wajr/F/qWs+bl/QXsu4vJOv8YbLiX/Pj+NUM7Ovh82P9fErWfUQL4njW
MuFxYF8PJWs9dmEc39qA3b+hrvgXWeeJvQJWfjXY41fU5Z9QV/xqUay/roti
/c2mrvkA2fyR0q/G/nQPWfkLZOVLkpWvtBis/QJk7RcA+/oVdZ0nsCTWZ58l
sT6XUVf8iqz1v6Uor/uDyFp/JCtfHyz/scoy6McKVngC/P/5zWDt72F59bfl
UX/yr9j/1oP9PoJjSX8j6z4DsPvzZBvvzz8e+1dDsPvzZBv/t5J1HsmJ+P6b
kM2+jToR62MbWftPT8bxvzlZ9+OA/3//K1jzgVNgzb/Bfv4fdY1Pp2J9Xno6
GZ/APj6djvX3DXXtvz4D1vwb7PNvsubfZN0P+Tee1/kHZN3HDfb9eGTtx/sn
6W9k3T9HVn8jm3296t9Y373I6m//xvr9Fez5HVne+E9XfjHY9xNQN/t2jKz1
+rNQ3u9vhm7j2Rrqui+BrP10Z6O87lsga/5N1v2JZKuvaueANf8Gaz3rHerK
780KXfetgT1eS7b3+yFZ/ty5YMWbwJ6fQV37X6nLn8sGlj8H9vt9yYrXZYv1
kf88sPoL2NeHqWv+TNb6cnaw1quyx/c/JXt833tYXv7c+WDtXyVr/+r58f3v
I+v8rRz4fPlzOWJ9zCXrvEmy1qsuAGv+A3Z/jrr8OerKr8gJXfkVYD9vg7ru
06Wu82ouBOt+b7LuSyEvyln+d7LyK3LF+uxHVnyLrPkz2Ptb7ti/BuSO9fkm
dcXncsf6rZon9q8nwT5/om7+RZaLwJr/khUfvyjW57tkrQ/nxefbeFWfrPkT
2cavLXljfeXMB13+YL5YXyPzxfr6JF+snzz5oet8BLLiIfljfewE+/zpYuja
Lw728a1trL/PwO4P3pn0V7D3V+qKB5HNvy/UDuW1f6ZdrI8Z7WJ97AP7/tH2
YK03kHU+NNjvg6du/evKDrF/9ewQ628hdfP/DpE1PnWM3JOs8Q3s5xt1jL+n
TCfour8h4blgjyd2ip93Zef4f+8B+/lK1JXPS135/3dB1/nYZO0/Avv5NgmX
vBss/wDs58uQtf+JLHvbBazztcGyz9Oob8oz6DvqOp+7a9TvSnh61/h933WN
31e0W/y+zt3i753RLfl+llc8tnvSfsm6b617LL+ne/L9GcnzGcn/T/RvM+Lv
KXZP8vvvieWnkrVfFSx/sXCP2B87gD0eTF3xYLLiwffG/t0u4ZfIGq/J5k8V
7AlWPLhn1Ccm+i6w+8f/S55PeNL/ku8H+3mLvaArng3W/PWlXsnz1HXe5H1x
/GpDblt26Hiy2cMvwbKXl/SGrvwmsM/HyTqfneV1X8X9YK0HgP3+Tery18ia
H/VBeZ1fQNZ+CrDnt5HlL/aN9rEh2Mc/svafkhWveSDaw7pgv7+TuuLZ1LWf
5ME4Htchm70cQtb5OmTlx/WL9qwW2PPbyMpvI2s96aHINci6n42s/CSy9uP0
j/23Gln3XZCVH5rw32Cf3z8MXec9gj1eSF3ng68GK765OurLwL4fgqzz4dag
vPKZyNr/BPb7m6jrfo03oz15DOz7J6lr/Y+6zudeG9/fU2TlE66N9XnOW7E9
1AZ7/jt15cOStf63Dqz7VcjKfydr/Y+s/I+38X06H5WsfNS34/vfTlY+wHqU
Vz4j2PcrUtf51tRlrzZEe3YnWfnnG+L7/5q6xouNyXgF9vGWrPUEllc8/x3o
Ok/vnVgfc8jyd1he531sivXRg6z5Edj3K2+K77/8u2Ctd4P9PH2y9g+RFR98
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
1Uq+v1Ys/3FSPldt6MofJmu/e53I28C+nlwXrP6S8KiEPwH7eeT1kt9fL77v
EfWS5xPOXR+s+3vIyqcE+/oBdfnXDSI3J2t/ToP4+dvBbm8axvfTtGHy/xP+
pGHy/hpFbtooeb5RUv+NkvpvHN9X48ax/KjG8f1+nJS/sElS/2TZG7LsDdjt
zR1gnW+R8DCwrx8lfH5TlDd7VJ+s+RVY89H3qSufqBl0nVfZLOpDqWt/GHXZ
m+bQdV4WWesRYF8fJ5s9ObsFyms9g6z8/0TfkPBZLcFmf24H+3olWfuBWV7z
W+o6L6kVWPt9wH5eB1n3z7K88hVaQ9d+I7DHF6ibP3SGrPyeNvHznmiTPN8m
eZ668qHaQtf+QrLNF9eAtT58kqz4yJ1g7f8A+/2d1N+rkuM4WedDtwNr/gb2
+2+pm//zJ3XFz9tD13lLZJ3XRNZ6OVn7mTvE/n8/2PdDU9d+Nepar+8YuXfH
WH4xdd0fS9Z+7E5xvLqPfKj68EVgj49RN3twVedoL/5H1vwN7PHohMveFft/
D7D6/zzqys9O+Mq7wYqHgzWfm0tWvhJZ+XSz4vtbPCt532TFv2cnz4P9PNvZ
8fN+nR0/75o5sT7uI+u+3znx/f8yJ77/q+cmz89N6ots8+tDZJ3vPA/Pa/0Z
7Pv358X6+Inldd/v/KS+5sf6XDA/qa/5sT7LLEjqi6z1yEQ/sCCp74XR3t+z
MKnvhUl9s7zm+69Ezngllp9LXfP9pHzpRbF8RsJzwZ6/QV35Qq9G7v5q/L/z
Xo3/70Cil1mc/P7FyftbnLy/xfH9lF4Sy2csSX7/kvj79i9Jvn9p8v6XJt8P
lv+/f2l8HyWXJe9vWXzfc5Ylz5OV/7Ic5bUfYnnU5yxP6i/hUq/F39Mt4dmv
xff742vx95ZekdTfiuR56soXI2s9/nWUP9wrb1ew1u9nUjf/43uy9levRHmd
Z7Ay6jOpa72IutZ73oh8V8LTwb7/jqz9FKtQXvEIsO9noK71GuqKv60GKz4O
9vuGE/6arPsv14C1H4Cs+DzY81HIWl9+EzxwcIE734zlXwL7ek3CBddGbgv2
fEWy1udZXvGgt6AXn167NVnr+4n+OXn5iI0Xr4vciqz7VRL9s4Qvfhus9fG3
k+fBvt7zdvL8euie35w8vz55PuH8G+L/bZ3w+A3J/wd7/HcjWOtVG2P58WTZ
i6xrAncHe38l6/5Dsu4XPxfPK352biw/i7r1733Utb6bLX5et2zx82aTZe+y
xd9X8rzkebLsZaL/cF78fSWyx9/TNeFZZOWDk5Ufez5+n+4nT3hGwnvJ2v+V
A6z97Tni58/IEcvvTcoXvQCs/VMJT0t4D9jjpznBimeRlR8M1vznG7Ls1YVg
3f8D9vVlsu7vTPjyXMn3g33/Vq74eV8nXCh3/Lz2uZPnycp3YHmtT+eBrvVp
sNtL6jpfkKx8qIvAuj+JrP4G9vuOEy6QF6z+Cpb9eTHRPyPrfvZ8YJ2HAvb9
6vli+Z3UlQ+WH/qUPQNagv38ovzx83aQZe8ujv+ndcLjL06+/+Lk+wskv79A
8v0J70g43yWRW1wSv2/cJfH/7Uw4f8Hk+YLJ+yuY/P6CyfOXgnX/H9jzR6nb
/HY7da2XXQZd611gj4eTtf+N5bVeeTl0rXeRlW8E9vWyy+Pn5y4U9TsKxc8f
SdZ6bcIXFsbnPVEheyOwnwdL1v4Kltd9SEWga39Fws+DNb/bmnDOopEbFU3+
f6JvLRo/P2ex5PvJOp880bcWi//vguLx/zUAe3yBuvLjqCs/7gro2n9Ptvni
MLLOlwH7/QYlwMrHAP8fKCU54A==
        "]]}}, {}, {}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"Time\"", TraditionalForm], 
      FormBox["\"Phase SD\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Medium,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox[
     "\"Phase Standart Deviation(Time) dependency\"", TraditionalForm],
    PlotRange->{{0, 6691.276999900816}, {-1., 1.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.720502221330845*^9, 3.720504221671504*^9, 3.720504318668083*^9, 
   3.720504363729335*^9, 3.7205044261626215`*^9, 3.720591289633173*^9, {
   3.7205913586058683`*^9, 3.7205913864203377`*^9}, 3.7205918004594374`*^9, 
   3.7205927440049396`*^9, 3.7271725297148733`*^9, 3.7271728552984104`*^9, 
   3.7271732620957336`*^9, 3.72717336918375*^9, 3.7271735708143682`*^9, 
   3.7271736499642715`*^9, 3.7271737643828845`*^9, 3.72717428468865*^9, 
   3.7271745676947002`*^9, 3.7271763404539337`*^9, 3.727176695282753*^9, 
   3.727176803235225*^9, 3.7271773459433174`*^9, 3.7271773994251685`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Temperature", "[", 
     RowBox[{"i_", ",", "Fres_", ",", " ", "F0_"}], "]"}], " ", ":=", " ", 
    RowBox[{"N", "[", 
     FractionBox[
      RowBox[{"(", 
       RowBox[{"Fres", "-", "F0"}], ")"}], 
      RowBox[{"Kprt", "[", 
       RowBox[{"[", "i", "]"}], "]"}]], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Evaluating", " ", "temperature", " ", "for", " ", "resonance", " ", "i"}],
    " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"paraboloid", "[", 
     RowBox[{"y0_", ",", "A_", ",", "\[Mu]_", ",", "x_"}], "]"}], " ", ":=", 
    " ", 
    RowBox[{"y0", " ", "+", " ", 
     RowBox[{"A", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}]}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Parabola", " ", "function"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gaussian", "[", 
     RowBox[{
     "y0_", ",", "A_", ",", "\[Mu]_", ",", " ", "\[Sigma]_", ",", " ", "x_"}],
      "]"}], " ", ":=", " ", 
    RowBox[{"y0", " ", "+", " ", 
     RowBox[{
      FractionBox["A", 
       RowBox[{"\[Sigma]", " ", 
        RowBox[{"Sqrt", "[", 
         FractionBox["Pi", "2"], "]"}]}]], "\[Times]", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "2"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}], 
        SuperscriptBox["\[Sigma]", "2"]], "]"}]}]}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Gauss", " ", "function"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"lorenz", "[", 
     RowBox[{
     "y0_", ",", "A_", ",", "\[Mu]_", ",", " ", "\[Sigma]_", ",", " ", "x_"}],
      "]"}], ":=", 
    RowBox[{"y0", " ", "+", " ", 
     RowBox[{
      FractionBox[
       RowBox[{"2", "A"}], "Pi"], "\[Times]", 
      FractionBox["\[Sigma]", 
       RowBox[{
        RowBox[{"4", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}], "+", 
        SuperscriptBox["\[Sigma]", "2"]}]]}]}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Lorenz", " ", "function"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"linear", "[", 
     RowBox[{"A_", ",", "B_", ",", "x_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"A", " ", "x"}], "+", "B"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"linear", " ", "function"}], " ", 
   "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7158486740700426`*^9, 3.71584873387307*^9}, {
  3.7158487735482664`*^9, 3.7158487738894963`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fileNumber", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KineticsMinAll", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Calculationg", " ", "fast", " ", "but", " ", "just", " ", "searching", 
      " ", "for", " ", "a", " ", "phase", " ", "min"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Rounds", "=", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Data", "[", 
         RowBox[{"[", 
          RowBox[{"InvervalNumber", ",", "All", ",", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{
              RowBox[{"DataNames", "[", 
               RowBox[{"[", "fileNumber", "]"}], "]"}], ",", 
              "roundColumnName"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}], "]"}]}], 
      ";", 
      RowBox[{"(*", " ", 
       RowBox[{"Getting", " ", "all", " ", "rounds"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"DataRounds", ",", 
        RowBox[{"Length", "[", "Rounds", "]"}]}], "]"}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Saving", " ", "rounds", " ", "ammount", " ", "for", " ", "every", " ",
         "dataset"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"KineticsMin", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"(*", " ", 
         RowBox[{"For", " ", "every", " ", "round"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"RoundData", "=", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"Data", "[", 
              RowBox[{"[", "InvervalNumber", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"Position", "[", 
                   RowBox[{
                    RowBox[{"DataNames", "[", 
                    RowBox[{"[", "fileNumber", "]"}], "]"}], ",", 
                    "roundColumnName"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], 
               "\[Equal]", 
               RowBox[{"Rounds", "[", 
                RowBox[{"[", "RoundNumber", "]"}], "]"}]}], "&"}]}], "]"}]}], 
          ";", 
          RowBox[{"(*", " ", 
           RowBox[{"Getting", " ", "round", " ", "data"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"MinPhase", "=", 
           RowBox[{"Min", "[", 
            RowBox[{"RoundData", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", 
               RowBox[{
                RowBox[{"Position", "[", 
                 RowBox[{
                  RowBox[{"DataNames", "[", 
                   RowBox[{"[", "fileNumber", "]"}], "]"}], ",", 
                  "phaseColumnName"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}], 
            "]"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{"Getting", " ", "phase", " ", "minimum"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"MinPhasePosition", "=", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{
              RowBox[{"RoundData", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{
                  RowBox[{"Position", "[", 
                   RowBox[{
                    RowBox[{"DataNames", "[", 
                    RowBox[{"[", "fileNumber", "]"}], "]"}], ",", 
                    "phaseColumnName"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}], ",",
               "MinPhase"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{"Getting", " ", "position"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"ResonanceFrequency", "=", 
           RowBox[{
            RowBox[{"RoundData", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", 
               RowBox[{
                RowBox[{"Position", "[", 
                 RowBox[{
                  RowBox[{"DataNames", "[", 
                   RowBox[{"[", "fileNumber", "]"}], "]"}], ",", 
                  "frequencyColumnName"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}], "[", 
            RowBox[{"[", "MinPhasePosition", "]"}], "]"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{"Getting", " ", "frequency"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"ResonanceTime", "=", 
           RowBox[{
            RowBox[{"RoundData", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", 
               RowBox[{
                RowBox[{"Position", "[", 
                 RowBox[{
                  RowBox[{"DataNames", "[", 
                   RowBox[{"[", "fileNumber", "]"}], "]"}], ",", 
                  "timeColumnName"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}], "[", 
            RowBox[{"[", "MinPhasePosition", "]"}], "]"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{"Getting", " ", "time"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"ResonanceTime", ",", "ResonanceFrequency"}], "}"}]}], 
         RowBox[{"(*", " ", 
          RowBox[{"Exporting", " ", "calculated", " ", "point"}], " ", "*)"}],
          "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"RoundNumber", ",", 
           RowBox[{
            RowBox[{"DataRounds", "[", 
             RowBox[{"[", "InvervalNumber", "]"}], "]"}], "-", "1"}]}], 
          "}"}]}], 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "Last", " ", "round", " ", "can", " ", "be", " ", "not", " ", 
           "full"}], ",", " ", 
          RowBox[{
           RowBox[{"let", "'"}], "s", " ", "ignore", " ", "it"}]}], " ", 
         "*)"}], "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"KineticsMin", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], "=", 
       RowBox[{"Temperature", "[", 
        RowBox[{"InvervalNumber", ",", 
         RowBox[{"KineticsMin", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"KineticsMin", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "]"}]}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Calculating", " ", "temperature", " ", "from", " ", "frequency"}], 
       " ", "*)"}], "\[IndentingNewLine]", "KineticsMin"}], 
     RowBox[{"(*", " ", 
      RowBox[{"Exporting", " ", "calculated", " ", "kinetics"}], " ", "*)"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"InvervalNumber", ",", 
       RowBox[{"Length", "[", "Data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7158487762011294`*^9, 3.715848819526165*^9}, {
   3.715848918309206*^9, 3.7158489523480597`*^9}, {3.7158489934589877`*^9, 
   3.7158489988949585`*^9}, {3.7158503193051214`*^9, 
   3.7158503587076287`*^9}, {3.715850409998585*^9, 3.7158504191526127`*^9}, {
   3.715850803290842*^9, 3.7158508876812544`*^9}, {3.715851147406446*^9, 
   3.7158512606443186`*^9}, {3.715851348270854*^9, 3.7158513538468156`*^9}, {
   3.7205023438382998`*^9, 3.720502344627858*^9}, {3.720504174043996*^9, 
   3.720504212629594*^9}, {3.7205917185937724`*^9, 3.7205917747449665`*^9}, {
   3.7271725734578695`*^9, 3.72717257348689*^9}, {3.7271731520208225`*^9, 
   3.7271731538811245`*^9}, {3.7271733355549917`*^9, 3.727173340169789*^9}, {
   3.7271734948044643`*^9, 3.727173504701393*^9}, {3.7271737096528606`*^9, 
   3.727173728122331*^9}, {3.72717380096381*^9, 3.727173803748721*^9}, {
   3.7271748932124434`*^9, 3.727174901097257*^9}, {3.727176536735628*^9, 
   3.7271765998339396`*^9}, {3.727176656234229*^9, 3.727176664042792*^9}, {
   3.727177006377581*^9, 3.7271770174864464`*^9}, {3.7271772847141447`*^9, 
   3.727177289991975*^9}, 3.727177377620722*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MinKineticsPlt", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"KineticsMinAll", ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
    RowBox[{"Joined", "->", "False"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
    RowBox[{"Filling", "\[Rule]", "Axis"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Time\>\"", ",", "\"\<Temperature\>\""}], "}"}]}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Temperature from time calculating phase minimum\>\""}]}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Plotting", " ", "kinetics", " ", "min", " ", "without", " ", "fitting"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.715850385535601*^9, 3.7158503876243067`*^9}, 
   3.715850460594846*^9, {3.7158511194735637`*^9, 3.7158511437355733`*^9}, {
   3.7158513173472843`*^9, 3.7158513244160824`*^9}, {3.720502547151202*^9, 
   3.7205025679419427`*^9}, {3.720504058282076*^9, 3.720504097868225*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1: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
Pab3e0zv95je7zH/H99j/getGYm2
    "], {{{}, {}, {}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{343, 3}], LineBox[{346, 6}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{342, 2}], LineBox[{344, 4}], LineBox[{345, 5}], 
       LineBox[{347, 7}], LineBox[{348, 8}], LineBox[{349, 9}], 
       LineBox[{350, 10}], LineBox[{351, 11}], LineBox[{352, 12}], 
       LineBox[{353, 13}], LineBox[{354, 14}], LineBox[{355, 15}], 
       LineBox[{356, 16}], LineBox[{357, 17}], LineBox[{358, 18}], 
       LineBox[{359, 19}], LineBox[{360, 20}], LineBox[{361, 21}], 
       LineBox[{362, 22}], LineBox[{363, 23}], LineBox[{364, 24}], 
       LineBox[{365, 25}], LineBox[{366, 26}], LineBox[{367, 27}], 
       LineBox[{368, 28}], LineBox[{369, 29}], LineBox[{370, 30}], 
       LineBox[{371, 31}], LineBox[{372, 32}], LineBox[{373, 33}], 
       LineBox[{374, 34}], LineBox[{375, 35}], LineBox[{376, 36}], 
       LineBox[{377, 37}], LineBox[{378, 38}], LineBox[{379, 39}], 
       LineBox[{380, 40}], LineBox[{381, 41}], LineBox[{382, 42}], 
       LineBox[{383, 43}], LineBox[{384, 44}], LineBox[{385, 45}], 
       LineBox[{386, 46}], LineBox[{387, 47}], LineBox[{388, 48}], 
       LineBox[{389, 49}], LineBox[{390, 50}], LineBox[{391, 51}], 
       LineBox[{392, 52}], LineBox[{393, 53}], LineBox[{394, 54}], 
       LineBox[{395, 55}], LineBox[{396, 56}], LineBox[{397, 57}], 
       LineBox[{398, 58}], LineBox[{399, 59}], LineBox[{400, 60}], 
       LineBox[{401, 61}], LineBox[{402, 62}], LineBox[{403, 63}], 
       LineBox[{404, 64}], LineBox[{405, 65}], LineBox[{406, 66}], 
       LineBox[{407, 67}], LineBox[{408, 68}], LineBox[{409, 69}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.3], 
       LineBox[{281, 78}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.3], 
       LineBox[{274, 71}], LineBox[{275, 72}], LineBox[{276, 73}], 
       LineBox[{277, 74}], LineBox[{278, 75}], LineBox[{279, 76}], 
       LineBox[{280, 77}], LineBox[{282, 79}], LineBox[{283, 80}], 
       LineBox[{284, 81}], LineBox[{285, 82}], LineBox[{286, 83}], 
       LineBox[{287, 84}], LineBox[{288, 85}], LineBox[{289, 86}], 
       LineBox[{290, 87}], LineBox[{291, 88}], LineBox[{292, 89}], 
       LineBox[{293, 90}], LineBox[{294, 91}], LineBox[{295, 92}], 
       LineBox[{296, 93}], LineBox[{297, 94}], LineBox[{298, 95}], 
       LineBox[{299, 96}], LineBox[{300, 97}], LineBox[{301, 98}], 
       LineBox[{302, 99}], LineBox[{303, 100}], LineBox[{304, 101}], 
       LineBox[{305, 102}], LineBox[{306, 103}], LineBox[{307, 104}], 
       LineBox[{308, 105}], LineBox[{309, 106}], LineBox[{310, 107}], 
       LineBox[{311, 108}], LineBox[{312, 109}], LineBox[{313, 110}], 
       LineBox[{314, 111}], LineBox[{315, 112}], LineBox[{316, 113}], 
       LineBox[{317, 114}], LineBox[{318, 115}], LineBox[{319, 116}], 
       LineBox[{320, 117}], LineBox[{321, 118}], LineBox[{322, 119}], 
       LineBox[{323, 120}], LineBox[{324, 121}], LineBox[{325, 122}], 
       LineBox[{326, 123}], LineBox[{327, 124}], LineBox[{328, 125}], 
       LineBox[{329, 126}], LineBox[{330, 127}], LineBox[{331, 128}], 
       LineBox[{332, 129}], LineBox[{333, 130}], LineBox[{334, 131}], 
       LineBox[{335, 132}], LineBox[{336, 133}], LineBox[{337, 134}], 
       LineBox[{338, 135}], LineBox[{339, 136}], LineBox[{340, 137}], 
       LineBox[{341, 138}]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.3], 
       LineBox[{207, 140}], LineBox[{208, 141}], LineBox[{209, 142}], 
       LineBox[{210, 143}], LineBox[{211, 144}], LineBox[{212, 145}], 
       LineBox[{214, 147}]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.3], 
       LineBox[{213, 146}], LineBox[{215, 148}], LineBox[{216, 149}], 
       LineBox[{217, 150}], LineBox[{218, 151}], LineBox[{219, 152}], 
       LineBox[{220, 153}], LineBox[{221, 154}], LineBox[{222, 155}], 
       LineBox[{223, 156}], LineBox[{224, 157}], LineBox[{225, 158}], 
       LineBox[{226, 159}], LineBox[{227, 160}], LineBox[{228, 161}], 
       LineBox[{229, 162}], LineBox[{230, 163}], LineBox[{231, 164}], 
       LineBox[{232, 165}], LineBox[{233, 166}], LineBox[{234, 167}], 
       LineBox[{235, 168}], LineBox[{236, 169}], LineBox[{237, 170}], 
       LineBox[{238, 171}], LineBox[{239, 172}], LineBox[{240, 173}], 
       LineBox[{241, 174}], LineBox[{242, 175}], LineBox[{243, 176}], 
       LineBox[{244, 177}], LineBox[{245, 178}], LineBox[{246, 179}], 
       LineBox[{247, 180}], LineBox[{248, 181}], LineBox[{249, 182}], 
       LineBox[{250, 183}], LineBox[{251, 184}], LineBox[{252, 185}], 
       LineBox[{253, 186}], LineBox[{254, 187}], LineBox[{255, 188}], 
       LineBox[{256, 189}], LineBox[{257, 190}], LineBox[{258, 191}], 
       LineBox[{259, 192}], LineBox[{260, 193}], LineBox[{261, 194}], 
       LineBox[{262, 195}], LineBox[{263, 196}], LineBox[{264, 197}], 
       LineBox[{265, 198}], LineBox[{266, 199}], LineBox[{267, 200}], 
       LineBox[{268, 201}], LineBox[{269, 202}], LineBox[{270, 203}], 
       LineBox[{271, 204}], LineBox[{272, 205}], LineBox[{273, 206}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       PointBox[{410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 
        422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 
        436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 
        450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 
        464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 
        478}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       PointBox[{479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 
        491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 
        505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 
        519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 
        533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 
        547}]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       PointBox[{548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 
        560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 
        574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 
        588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 
        602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 
        615}]}, {}}}], {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Time\"", TraditionalForm], 
    FormBox["\"Temperature\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Temperature from time calculating phase minimum\"", TraditionalForm],
  PlotRange->{{0, 6615.939999900875}, {-2.2578119999961928`, 
    41.855468000001565`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7271774207192645`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "KineticsMinAll", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", 
    RowBox[{"PrependTo", "[", 
     RowBox[{
      RowBox[{"KineticsMinAll", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"DataOrigins", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "<>", "\"\< Time\>\""}], ",", 
        RowBox[{
         RowBox[{"DataOrigins", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "<>", "\"\< Temperature\>\""}]}], 
       "}"}]}], "]"}]}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Adding", " ", "headers", " ", "for", " ", "columns"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"KineticsMinAll", " ", "=", " ", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"KineticsMinAll", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "KineticsMinAll", "]"}]}], "}"}]}], "]"}]}], 
   ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Transposing", " ", "for", " ", "joining"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tmp", "=", 
    RowBox[{"KineticsMinAll", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Join", " ", "starting", " ", "point"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "2"}], ",", 
     RowBox[{"i", "\[LessEqual]", 
      RowBox[{"Length", "[", "KineticsMinAll", "]"}]}], ",", 
     RowBox[{"i", "++"}], ",", 
     RowBox[{"tmp", "=", 
      RowBox[{"tmp", "~", "Join", "~", 
       RowBox[{"KineticsMinAll", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}]}]}], "]"}], ";"}], 
  RowBox[{"(*", " ", "Joining", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"KineticsMinAll", "=", "tmp"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Saving", " ", "joined", " ", "result"}], " ", 
   "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.720504460770048*^9, 3.7205045278821115`*^9}, {
  3.7205045598974204`*^9, 3.7205045601726584`*^9}, {3.720504609770506*^9, 
  3.720504669183258*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "exportDir", ",", 
        "\"\<KineticsMinAll.png\>\""}], "}"}], "]"}], ",", "MinKineticsPlt"}],
     "]"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Exporting", " ", "plot"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "exportDir", ",", 
        "\"\<KineticsMinAll.xlsx\>\""}], "}"}], "]"}], ",", 
     "KineticsMinAll"}], "]"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Exporting", " ", "calculated", " ", "data"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KineticsMinAll", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], ",", "exportDir", ",", 
         "\"\<KineticsMinAll.xlsx\>\""}], "}"}], "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "exportDir", ",", 
       "\"\<KineticsMinAll.xlsx\>\""}], "}"}], "]"}], ",", "KineticsMinAll"}],
    "]"}], ";", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Exporting", " ", "calculated", " ", "data", " ", "in", " ", "a", " ", 
    "normal", " ", "format"}], " ", "*)"}], "\[IndentingNewLine]"}]}], "Input",
 CellChangeTimes->{{3.7205040515963497`*^9, 3.720504054624488*^9}, 
   3.7205046025573797`*^9, {3.720504671809866*^9, 3.7205046909628115`*^9}, 
   3.7271738924037104`*^9, {3.7271742312296066`*^9, 3.727174271049771*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fileNumber", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KineticsFitAll", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"KineticsFit", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"RoundDataRaw", "=", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"Data", "[", 
              RowBox[{"[", "IntervalNumber", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"Position", "[", 
                   RowBox[{
                    RowBox[{"DataNames", "[", 
                    RowBox[{"[", "fileNumber", "]"}], "]"}], ",", 
                    "roundColumnName"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], 
               "\[Equal]", 
               RowBox[{"Rounds", "[", 
                RowBox[{"[", "RoundNumber", "]"}], "]"}]}], "&"}]}], "]"}]}], 
          ";", 
          RowBox[{"(*", " ", 
           RowBox[{"Getting", " ", "row", " ", "round", " ", "data"}], " ", 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"RoundData", "=", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"(*", " ", 
              RowBox[{"Getting", " ", "Phase", 
               RowBox[{"(", "Frequency", ")"}], " ", "dependency"}], " ", 
              "*)"}], "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"RoundDataRaw", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{
                  RowBox[{"Position", "[", 
                   RowBox[{
                    RowBox[{"DataNames", "[", 
                    RowBox[{"[", "fileNumber", "]"}], "]"}], ",", 
                    "frequencyColumnName"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}], ",",
               "\[IndentingNewLine]", 
              RowBox[{"RoundDataRaw", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{
                  RowBox[{"Position", "[", 
                   RowBox[{
                    RowBox[{"DataNames", "[", 
                    RowBox[{"[", "fileNumber", "]"}], "]"}], ",", 
                    "phaseColumnName"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"PhaseMin", "=", 
           RowBox[{"Min", "[", 
            RowBox[{"RoundData", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{"Getting", " ", "phase", " ", "minimum"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "PhaseMin", "]"}], ">", "0"}], ",", 
            RowBox[{"PhaseMin", "=", 
             RowBox[{"PhaseMin", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{"Just", " ", "in", " ", "case"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"PhaseMax", "=", 
           RowBox[{"Max", "[", 
            RowBox[{"RoundData", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{"Getting", " ", "phase", " ", "maximum"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "PhaseMax", "]"}], ">", "0"}], ",", 
            RowBox[{"PhaseMax", "=", 
             RowBox[{"PhaseMax", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{"Just", " ", "in", " ", "case"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"\[Sigma]0", " ", "=", " ", 
           RowBox[{"Length", "[", 
            RowBox[{"Select", "[", 
             RowBox[{"RoundData", ",", 
              RowBox[{
               RowBox[{"PhaseMin", "\[LessEqual]", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "\[LessEqual]", 
                RowBox[{"PhaseMin", "+", 
                 FractionBox[
                  RowBox[{"PhaseMax", "-", "PhaseMin"}], "2"]}]}], "&"}]}], 
             "]"}], "]"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{"For", " ", "first", " ", "approximation"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"Parabolic", " ", "fit"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"ParabolicPart", " ", "=", " ", "0.25"}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"Part", " ", "from", " ", "Min", " ", "to", " ", "Max"}], 
            "-", "Min"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"RoundDataParaboloid", " ", "=", 
           RowBox[{"Select", "[", 
            RowBox[{"RoundData", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"PhaseMin", "\[LessEqual]", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "\[LessEqual]", 
                RowBox[{"PhaseMin", "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"PhaseMax", "-", "PhaseMin"}], ")"}], "\[Times]", 
                  "ParabolicPart"}]}]}], ")"}], "&"}]}], "]"}]}], " ", ";", 
          "\[IndentingNewLine]", 
          RowBox[{"nlmRoundParaboloid", " ", "=", " ", 
           RowBox[{"NonlinearModelFit", "[", "\[IndentingNewLine]", 
            RowBox[{"RoundDataParaboloid", ",", 
             RowBox[{"paraboloid", "[", 
              RowBox[{"y0", ",", "A", ",", "\[Mu]", ",", "t"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"y0", ",", 
                 RowBox[{"Max", "[", 
                  RowBox[{"RoundDataParaboloid", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "}"}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"A", ",", 
                 RowBox[{
                  RowBox[{"RoundDataParaboloid", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Ordering", "[", 
                    RowBox[{
                    RowBox[{"RoundDataParaboloid", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], ",", "1"}], 
                    "]"}], ",", " ", "2"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"\[Mu]", ",", 
                 RowBox[{
                  RowBox[{"RoundDataParaboloid", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Ordering", "[", 
                    RowBox[{
                    RowBox[{"RoundDataParaboloid", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], ",", "1"}], 
                    "]"}], ",", " ", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
             "\[IndentingNewLine]", "t"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"parametersTableRoundParaboloid", " ", "=", " ", 
           RowBox[{
           "nlmRoundParaboloid", "[", "\"\<ParameterTable\>\"", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"FresParaboloid", " ", "=", " ", 
           RowBox[{"parametersTableRoundParaboloid", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1", ",", "4", ",", "2"}], "]"}], "]"}]}], ";",
           "\[IndentingNewLine]", 
          RowBox[{"\[Delta]FresParaboloid", "=", 
           RowBox[{"100", "\[Times]", 
            RowBox[{"Abs", "[", 
             FractionBox[
              RowBox[{"parametersTableRoundParaboloid", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1", ",", "4", ",", "3"}], "]"}], "]"}], 
              RowBox[{"parametersTableRoundParaboloid", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1", ",", "4", ",", "2"}], "]"}], "]"}]], 
             "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"FfirstParaboloid", " ", "=", " ", 
           RowBox[{"Switch", "[", 
            RowBox[{
             RowBox[{"RoundNumber", "\[Equal]", "1"}], ",", "True", ",", 
             "FresParaboloid", ",", "False", ",", " ", "FfirstParaboloid"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"TempParaboloid", " ", "=", " ", 
           RowBox[{"Temperature", "[", 
            RowBox[{
            "IntervalNumber", ",", "FresParaboloid", ",", 
             "FfirstParaboloid"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"exportRounds", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"RoundPlt", " ", "=", 
              RowBox[{"Show", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"ListPlot", "[", "RoundData", "]"}], ",", 
                 RowBox[{"Plot", "[", 
                  RowBox[{
                   RowBox[{"paraboloid", "[", 
                    RowBox[{
                    RowBox[{"parametersTableRoundParaboloid", " ", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1", ",", "2", ",", "2"}], "]"}], "]"}],
                     ",", 
                    RowBox[{"parametersTableRoundParaboloid", " ", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1", ",", "3", ",", "2"}], "]"}], "]"}],
                     ",", 
                    RowBox[{"parametersTableRoundParaboloid", " ", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1", ",", "4", ",", "2"}], "]"}], "]"}],
                     ",", "t"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"t", ",", 
                    RowBox[{"RoundDataParaboloid", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"RoundDataParaboloid", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], "}"}], 
                   ",", 
                   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
                   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
                   RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y"}], "}"}], ",", "Red"}], "]"}]}]}], 
                  "]"}]}], "}"}], "]"}]}], ";", 
             RowBox[{"Export", "[", 
              RowBox[{
               RowBox[{"FileNameJoin", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"NotebookDirectory", "[", "]"}], ",", 
                  "exportRoundDir", ",", 
                  RowBox[{"\"\<File \>\"", "<>", 
                   RowBox[{"ToString", "[", "fileNumber", "]"}], "<>", 
                   "\"\<, Interval \>\"", "<>", 
                   RowBox[{"ToString", "[", "IntervalNumber", "]"}], "<>", 
                   "\"\<, Round \>\"", "<>", 
                   RowBox[{"ToString", "[", "RoundNumber", "]"}], "<>", 
                   "\"\<.png\>\""}]}], "}"}], "]"}], ",", "RoundPlt"}], "]"}],
              ";"}], "\[IndentingNewLine]", ",", "False"}], "]"}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{
           "Exporting", " ", "plot", " ", "for", " ", "every", " ", "round"}],
            " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"FrequencyTimeData", "=", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"(*", " ", 
              RowBox[{"Getting", " ", "Time", 
               RowBox[{"(", "Frequency", ")"}], " ", "dependency"}], " ", 
              "*)"}], "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"RoundDataRaw", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{
                  RowBox[{"Position", "[", 
                   RowBox[{
                    RowBox[{"DataNames", "[", 
                    RowBox[{"[", "fileNumber", "]"}], "]"}], ",", 
                    "frequencyColumnName"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}], ",",
               "\[IndentingNewLine]", 
              RowBox[{"RoundDataRaw", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{
                  RowBox[{"Position", "[", 
                   RowBox[{
                    RowBox[{"DataNames", "[", 
                    RowBox[{"[", "fileNumber", "]"}], "]"}], ",", 
                    "timeColumnName"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"nlmFrequencyTime", "=", " ", 
           RowBox[{"NonlinearModelFit", "[", 
            RowBox[{"FrequencyTimeData", ",", 
             RowBox[{"linear", "[", 
              RowBox[{"A", ",", "B", ",", "x"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"A", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"B", ",", "1"}], "}"}]}], "}"}], ",", "x"}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"parametersTableFrequencyTime", "=", " ", 
           RowBox[{"nlmFrequencyTime", "[", "\"\<ParameterTable\>\"", "]"}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{"TimeParaboloid", " ", "=", " ", 
           RowBox[{"linear", "[", 
            RowBox[{
             RowBox[{"parametersTableFrequencyTime", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1", ",", "2", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"parametersTableFrequencyTime", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1", ",", "3", ",", "2"}], "]"}], "]"}], ",",
              "FresParaboloid"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"TimeParaboloid", ",", "TempParaboloid"}], "}"}]}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"RoundNumber", ",", 
           RowBox[{
            RowBox[{"DataRounds", "[", 
             RowBox[{"[", "IntervalNumber", "]"}], "]"}], "-", "1"}]}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", "KineticsFit"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"IntervalNumber", ",", 
       RowBox[{"Length", "[", "Data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7205937318234444`*^9, 3.7205938212406054`*^9}, {
   3.720594136090414*^9, 3.72059413668417*^9}, {3.720594239539283*^9, 
   3.7205942960115585`*^9}, {3.7205947026327934`*^9, 
   3.7205947228285484`*^9}, {3.720594785781459*^9, 3.720594821365737*^9}, {
   3.7205949311366954`*^9, 3.7205949484334316`*^9}, {3.720595030877321*^9, 
   3.7205950505145497`*^9}, {3.7205952761661325`*^9, 3.720595311157156*^9}, {
   3.720595352851832*^9, 3.720595445546462*^9}, {3.72059551118438*^9, 
   3.7205955458372307`*^9}, {3.7205956542693777`*^9, 3.720595674970434*^9}, {
   3.7205957885016003`*^9, 3.720595832563607*^9}, {3.7205958814757357`*^9, 
   3.7205959125412273`*^9}, {3.7205959706507444`*^9, 3.72059597624514*^9}, {
   3.720596162566491*^9, 3.720596214515934*^9}, {3.7271744899026175`*^9, 
   3.7271745354870067`*^9}, 3.7271746240338583`*^9, {3.7271747613024125`*^9, 
   3.727174829319399*^9}, 3.7271748648824162`*^9, {3.7271749091318398`*^9, 
   3.7271749720447445`*^9}, {3.72717561481936*^9, 3.7271756155668883`*^9}, {
   3.727175657267587*^9, 3.727175760980527*^9}, 3.727175888755396*^9, 
   3.727175929831362*^9, {3.7271759771289434`*^9, 3.7271759793961487`*^9}, {
   3.7271760382979584`*^9, 3.727176042905216*^9}, {3.727176112668107*^9, 
   3.727176258756256*^9}, {3.727176303692686*^9, 3.7271763206931367`*^9}, {
   3.727176375056202*^9, 3.7271763939704905`*^9}, {3.7271768950186195`*^9, 
   3.727176959688985*^9}, 3.72717730364902*^9, 3.727177383518402*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FitKineticsPlt", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"KineticsFitAll", ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
    RowBox[{"Joined", "->", "False"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
    RowBox[{"Filling", "\[Rule]", "Axis"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Time\>\"", ",", "\"\<Temperature\>\""}], "}"}]}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Temperature from time calculating parabolic fit\>\""}]}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Plotting", " ", "kinetics", " ", "min", " ", "with", " ", "parabolic", 
    " ", "fit"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7271771257377977`*^9, 3.727177154202129*^9}, {
  3.727177203483931*^9, 3.72717720641*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1: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
dOhvboUJmZDz0mm6MGMSLsn/VXtueRYkzWqDc89Mwua0/I4Fmt/yI8bDuGqZ
AN7V7n+nN2fjn5YCcf5rAUaXuK9XSTuJt+VGUi8HE8hFPG1398pBwoJrOkeT
TTB6TZ5cP4NcNF9ZG2hsaIplpqs9PdtyMaTrbmPALVMsXqmpK8rLg3uNRvWl
BUKkiX1vOPl/+z6y76rGwSwhrlw1eP9BrQAv7xgHFyqYoe16cUlSUAE6s2/K
R0SaYes1hbxZtQVI+vG2isp/zODUFvdezlKCaamqFQO9J8PKJ2z5/VgJwrtq
RXFJk6F36Y9Vhz5KcNzKWb9F1RxX88xbN7oW4qGsctTTX8xR0v1TgqO0EOZ+
VV2HkswxRigosB9RhKr1RWVT35lj6+Etd8yDihCu6TzqyTwLPHzvbxpcW4SV
dzt3ZWVYoNz8sXuFZTFG2bQF7B5sCaOQpmxBQjG6LK+u+7jFEp3jt8XWfymG
5NJjgeCWJTZ8dbm9/pcSXFRVGCejbIVDPyU0x/xVgkL9EUvlvaxQe1VtaZ12
KV51KBlERFvBQdGhedcfpXCocXOS1Fvh5vt8k/3PS1HTUnjtvbk13Csl3jGz
TuFn37UeOzZYo+Xqx+qdOacgE9qM2d/y1aEofeOsIVLsbVq21EbFBtF3jU2O
/SaF0jJT/UJzG8gvD89b/UCKNamWP20OtEFdsY7v92anEeV203uh2AYLbv4d
ezj6NC529ffq7G8L5gXzg3lBMy9o5gXNvKCZFzTzgmZe0MwLmnlBMy9o5gXN
vKCZF73uyQuaeUEzL2jmBc28oJkXNPOCZl7QzAuaeUEzL2jmBc28oJkXNPOC
Zl7QzAuaeUEzL2jmBc28oJkXNPOi9/GevKCZFzTzgmZe0MwLmnlBMy9o5gXN
vKCZFzTzgmZe0MyL3vfryQuaeUEzL2jmBc28oJkXNPOCZl7QzAuaeUEzL+je
vODze/KCZl7QzAuaeUEzL2j2FZp9hWZfodlXaPYVmn2FZl+h2Vdo9hWafYVm
X6HZV2j2FZp9hWZfodlXaPYVmn2FZl+h2Vdo9hWafYVmX6HZV2j2FZp9hWZf
odlXaPaV3s/X01do9hWafYVmX6HZV3rd01do9hWafYVmX6HZV2j2FZp9hWZf
odlXaPYVmn2FZl+h2Vdo9hWafYVmX6HZV2j2FZp9pffxnr5Cs6/Q7Cs0+wrN
vkKzr9DsKzT7Cs2+QrOv0OwrNPsKyb7S+349fYVmX6G5n9LcT2nupzT3U5r7
Kc39lOZ+SnM/pbmf0txPe1+/Zz+luZ/S3E9p7qe9r9ezn9LcT2nupzT3U5r7
ae//37Of0txPae6nNPdTmvspzf2U5n5Kcz+luZ/S3E9p7qc091Oa+2nv5+3Z
T2nupzT3U5r7Kc39lOZ+SnM/pbmf9j6/Zz+luZ/S3E9p7qc091Oa+ynN/ZTm
fkpzP6W5n9LcT2nupzT3U5r7Kc39tPfz9uynNPfT3sd79lOa+ynN/ZTmfkpz
P6W5n9LcT2nupzT3U5r7Kc39lO67x/TdY/ruMX33mL57TN89pu8e03eP6bvH
9N1j+u4xffeY/5d7zH8BvgzCVw==
    "], {{{}, {}, {}, {}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{342, 2}], LineBox[{343, 3}], LineBox[{344, 4}], 
       LineBox[{345, 5}], LineBox[{346, 6}], LineBox[{347, 7}], 
       LineBox[{348, 8}], LineBox[{349, 9}], LineBox[{350, 10}], 
       LineBox[{351, 11}], LineBox[{352, 12}], LineBox[{353, 13}], 
       LineBox[{354, 14}], LineBox[{355, 15}], LineBox[{356, 16}], 
       LineBox[{357, 17}], LineBox[{358, 18}], LineBox[{359, 19}], 
       LineBox[{360, 20}], LineBox[{361, 21}], LineBox[{362, 22}], 
       LineBox[{363, 23}], LineBox[{364, 24}], LineBox[{365, 25}], 
       LineBox[{366, 26}], LineBox[{367, 27}], LineBox[{368, 28}], 
       LineBox[{369, 29}], LineBox[{370, 30}], LineBox[{371, 31}], 
       LineBox[{372, 32}], LineBox[{373, 33}], LineBox[{374, 34}], 
       LineBox[{375, 35}], LineBox[{376, 36}], LineBox[{377, 37}], 
       LineBox[{378, 38}], LineBox[{379, 39}], LineBox[{380, 40}], 
       LineBox[{381, 41}], LineBox[{382, 42}], LineBox[{383, 43}], 
       LineBox[{384, 44}], LineBox[{385, 45}], LineBox[{386, 46}], 
       LineBox[{387, 47}], LineBox[{388, 48}], LineBox[{389, 49}], 
       LineBox[{390, 50}], LineBox[{391, 51}], LineBox[{392, 52}], 
       LineBox[{393, 53}], LineBox[{394, 54}], LineBox[{395, 55}], 
       LineBox[{396, 56}], LineBox[{397, 57}], LineBox[{398, 58}], 
       LineBox[{399, 59}], LineBox[{400, 60}], LineBox[{401, 61}], 
       LineBox[{402, 62}], LineBox[{403, 63}], LineBox[{404, 64}], 
       LineBox[{405, 65}], LineBox[{406, 66}], LineBox[{407, 67}], 
       LineBox[{408, 68}], LineBox[{409, 69}]}, {}, 
      {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.3], 
       LineBox[{274, 71}], LineBox[{275, 72}], LineBox[{276, 73}], 
       LineBox[{277, 74}], LineBox[{278, 75}], LineBox[{279, 76}], 
       LineBox[{280, 77}], LineBox[{281, 78}], LineBox[{282, 79}], 
       LineBox[{283, 80}], LineBox[{284, 81}], LineBox[{285, 82}], 
       LineBox[{286, 83}], LineBox[{287, 84}], LineBox[{288, 85}], 
       LineBox[{289, 86}], LineBox[{290, 87}], LineBox[{291, 88}], 
       LineBox[{292, 89}], LineBox[{293, 90}], LineBox[{294, 91}], 
       LineBox[{295, 92}], LineBox[{296, 93}], LineBox[{297, 94}], 
       LineBox[{298, 95}], LineBox[{299, 96}], LineBox[{300, 97}], 
       LineBox[{301, 98}], LineBox[{302, 99}], LineBox[{303, 100}], 
       LineBox[{304, 101}], LineBox[{305, 102}], LineBox[{306, 103}], 
       LineBox[{307, 104}], LineBox[{308, 105}], LineBox[{309, 106}], 
       LineBox[{310, 107}], LineBox[{311, 108}], LineBox[{312, 109}], 
       LineBox[{313, 110}], LineBox[{314, 111}], LineBox[{315, 112}], 
       LineBox[{316, 113}], LineBox[{317, 114}], LineBox[{318, 115}], 
       LineBox[{319, 116}], LineBox[{320, 117}], LineBox[{321, 118}], 
       LineBox[{322, 119}], LineBox[{323, 120}], LineBox[{324, 121}], 
       LineBox[{325, 122}], LineBox[{326, 123}], LineBox[{327, 124}], 
       LineBox[{328, 125}], LineBox[{329, 126}], LineBox[{330, 127}], 
       LineBox[{331, 128}], LineBox[{332, 129}], LineBox[{333, 130}], 
       LineBox[{334, 131}], LineBox[{335, 132}], LineBox[{336, 133}], 
       LineBox[{337, 134}], LineBox[{338, 135}], LineBox[{339, 136}], 
       LineBox[{340, 137}], LineBox[{341, 138}]}, {}, 
      {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.3], 
       LineBox[{207, 140}], LineBox[{208, 141}], LineBox[{209, 142}], 
       LineBox[{210, 143}], LineBox[{211, 144}], LineBox[{212, 145}], 
       LineBox[{213, 146}], LineBox[{214, 147}], LineBox[{215, 148}], 
       LineBox[{216, 149}], LineBox[{217, 150}], LineBox[{218, 151}], 
       LineBox[{219, 152}], LineBox[{220, 153}], LineBox[{221, 154}], 
       LineBox[{222, 155}], LineBox[{223, 156}], LineBox[{224, 157}], 
       LineBox[{225, 158}], LineBox[{226, 159}], LineBox[{227, 160}], 
       LineBox[{228, 161}], LineBox[{229, 162}], LineBox[{230, 163}], 
       LineBox[{231, 164}], LineBox[{232, 165}], LineBox[{233, 166}], 
       LineBox[{234, 167}], LineBox[{235, 168}], LineBox[{236, 169}], 
       LineBox[{237, 170}], LineBox[{238, 171}], LineBox[{239, 172}], 
       LineBox[{240, 173}], LineBox[{241, 174}], LineBox[{242, 175}], 
       LineBox[{243, 176}], LineBox[{244, 177}], LineBox[{245, 178}], 
       LineBox[{246, 179}], LineBox[{247, 180}], LineBox[{248, 181}], 
       LineBox[{249, 182}], LineBox[{250, 183}], LineBox[{251, 184}], 
       LineBox[{252, 185}], LineBox[{253, 186}], LineBox[{254, 187}], 
       LineBox[{255, 188}], LineBox[{256, 189}], LineBox[{257, 190}], 
       LineBox[{258, 191}], LineBox[{259, 192}], LineBox[{260, 193}], 
       LineBox[{261, 194}], LineBox[{262, 195}], LineBox[{263, 196}], 
       LineBox[{264, 197}], LineBox[{265, 198}], LineBox[{266, 199}], 
       LineBox[{267, 200}], LineBox[{268, 201}], LineBox[{269, 202}], 
       LineBox[{270, 203}], LineBox[{271, 204}], LineBox[{272, 205}], 
       LineBox[{273, 206}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       PointBox[{410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 
        422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 
        436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 
        450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 
        464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 
        478}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       PointBox[{479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 
        491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 
        505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 
        519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 
        533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 
        547}]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       PointBox[{548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 
        560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 
        574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 
        588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 
        602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 
        615}]}, {}}}], {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Time\"", TraditionalForm], 
    FormBox["\"Temperature\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Temperature from time calculating parabolic fit\"", TraditionalForm],
  PlotRange->{{0, 6615.414455060478}, {0, 37.98802558142793}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7271774791194925`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "KineticsFitAll", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", 
    RowBox[{"PrependTo", "[", 
     RowBox[{
      RowBox[{"KineticsFitAll", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"DataOrigins", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "<>", "\"\< Time\>\""}], ",", 
        RowBox[{
         RowBox[{"DataOrigins", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "<>", "\"\< Temperature\>\""}]}], 
       "}"}]}], "]"}]}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Adding", " ", "headers", " ", "for", " ", "columns"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"KineticsFitAll", " ", "=", " ", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"KineticsFitAll", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "KineticsFitAll", "]"}]}], "}"}]}], "]"}]}], 
   ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Transposing", " ", "for", " ", "joining"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tmp", "=", 
    RowBox[{"KineticsFitAll", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";", 
   RowBox[{"(*", " ", 
    RowBox[{"Join", " ", "starting", " ", "point"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "2"}], ",", 
     RowBox[{"i", "\[LessEqual]", 
      RowBox[{"Length", "[", "KineticsFitAll", "]"}]}], ",", 
     RowBox[{"i", "++"}], ",", 
     RowBox[{"tmp", "=", 
      RowBox[{"tmp", "~", "Join", "~", 
       RowBox[{"KineticsFitAll", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}]}]}], "]"}], ";"}], 
  RowBox[{"(*", " ", "Joining", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KineticsFitAll", "=", "tmp"}], ";", 
  RowBox[{"(*", " ", 
   RowBox[{"Saving", " ", "joined", " ", "result"}], " ", "*)"}], 
  "\[IndentingNewLine]"}]}], "Input",
 CellChangeTimes->{{3.720504460770048*^9, 3.7205045278821115`*^9}, {
  3.7205045598974204`*^9, 3.7205045601726584`*^9}, {3.720504609770506*^9, 
  3.720504669183258*^9}, {3.7271772152303915`*^9, 3.7271772458236284`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "exportDir", ",", 
       "\"\<KineticsFitAll.png\>\""}], "}"}], "]"}], ",", "FitKineticsPlt"}], 
   "]"}], ";", 
  RowBox[{"(*", " ", 
   RowBox[{"Exporting", " ", "plot"}], " ", "*)"}], "\n", 
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "exportDir", ",", 
       "\"\<KineticsFitAll.xlsx\>\""}], "}"}], "]"}], ",", "KineticsFitAll"}],
    "]"}], ";", 
  RowBox[{"(*", " ", 
   RowBox[{"Exporting", " ", "calculated", " ", "data"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"KineticsFitAll", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], ",", "exportDir", ",", 
         "\"\<KineticsFitAll.xlsx\>\""}], "}"}], "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "exportDir", ",", 
       "\"\<KineticsFitAll.xlsx\>\""}], "}"}], "]"}], ",", "KineticsFitAll"}],
    "]"}], ";", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Exporting", " ", "calculated", " ", "data", " ", "in", " ", "a", " ", 
    "normal", " ", "format"}], " ", "*)"}], "\[IndentingNewLine]"}]}], "Input",
 CellChangeTimes->{{3.7205040515963497`*^9, 3.720504054624488*^9}, 
   3.7205046025573797`*^9, {3.720504671809866*^9, 3.7205046909628115`*^9}, 
   3.7271738924037104`*^9, {3.7271742312296066`*^9, 3.727174271049771*^9}, {
   3.727177250207694*^9, 3.7271772677157516`*^9}}]
},
WindowSize->{1366, 685},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 515, 11, 87, "Text"],
Cell[1076, 33, 226, 6, 47, "Input"],
Cell[1305, 41, 1024, 26, 104, "Input"],
Cell[2332, 69, 1888, 46, 145, "Input"],
Cell[4223, 117, 593, 15, 30, "Input"],
Cell[4819, 134, 522, 11, 30, "Input"],
Cell[5344, 147, 1104, 26, 105, "Input"],
Cell[6451, 175, 1932, 47, 143, "Input"],
Cell[8386, 224, 4093, 95, 347, "Input"],
Cell[12482, 321, 3414, 85, 272, "Input"],
Cell[CellGroupData[{
Cell[15921, 410, 1383, 31, 124, "Input"],
Cell[17307, 443, 158366, 2620, 245, "Output"]
}, Open  ]],
Cell[175688, 3066, 2720, 84, 237, "Input"],
Cell[178411, 3152, 8436, 197, 569, "Input"],
Cell[CellGroupData[{
Cell[186872, 3353, 1022, 21, 84, "Input"],
Cell[187897, 3376, 12319, 206, 373, "Output"]
}, Open  ]],
Cell[200231, 3585, 2351, 67, 180, "Input"],
Cell[202585, 3654, 1933, 52, 179, "Input"],
Cell[204521, 3708, 17140, 369, 1520, "Input"],
Cell[CellGroupData[{
Cell[221686, 4081, 851, 19, 84, "Input"],
Cell[222540, 4102, 13267, 220, 382, "Output"]
}, Open  ]],
Cell[235822, 4325, 2363, 64, 180, "Input"],
Cell[238188, 4391, 1917, 49, 179, "Input"]
}
]
*)

