(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     92886,       2078]
NotebookOptionsPosition[     91627,       2037]
NotebookOutlinePosition[     91970,       2052]
CellTagsIndexPosition[     91927,       2049]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
This script is a part of ANGEL project.
V 2.3.0
2018.02.10
(C) Vulpes Corsac\
\>", "Text",
 CellChangeTimes->{{3.698631723375579*^9, 3.698631756693108*^9}, {
  3.7077252372106056`*^9, 3.707725237272649*^9}, {3.7158449128202653`*^9, 
  3.715844913914028*^9}, {3.7158499927653675`*^9, 3.715849993655997*^9}, {
  3.7205058788107967`*^9, 3.720505882927745*^9}, {3.7205927287670374`*^9, 
  3.720592736690977*^9}, {3.727173746073786*^9, 3.727173752404873*^9}, {
  3.7271759496067257`*^9, 3.727175950803587*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Variables", " ", "clearing"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{3.698387665880822*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"importDir", " ", "=", " ", "\"\<ImportData\>\""}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Directory", " ", "for", " ", "importing", " ", "data"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"exportDir", " ", "=", " ", "\"\<ExportData\>\""}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Directory", " ", "for", " ", "exporting", " ", "main", " ", "data"}], " ",
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"exportRoundDir", " ", "=", " ", "\"\<RoundData\>\""}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Subdirectory", " ", "for", " ", "exporting", " ", "round", " ", "data"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"exportRounds", "=", "True"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.7158458496775885`*^9, {3.715847621079638*^9, 3.7158476232794*^9}, {
   3.7205047663972645`*^9, 3.7205047990031605`*^9}, 3.7205058689113717`*^9, {
   3.7271762863925233`*^9, 3.727176290470763*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"phaseColumnName", "=", "\"\<Theta\>\""}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Name", " ", "of", " ", "column", " ", "in", " ", "data", " ", "file", " ",
     "with", " ", "phase"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"phaseSDColumnName", "=", "\"\<ThetaSD\>\""}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Name", " ", "of", " ", "column", " ", "in", " ", "data", " ", "file", " ",
     "with", " ", "phase", " ", "standart", " ", "deviaton"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"frequencyColumnName", "=", "\"\<Fext\>\""}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Name", " ", "of", " ", "column", " ", "in", " ", "data", " ", "file", " ",
     "with", " ", "frequency"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"timeColumnName", "=", "\"\<Time\>\""}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Name", " ", "of", " ", "column", " ", "in", " ", "data", " ", "file", " ",
     "with", " ", "time"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"intervalColumnName", "=", "\"\<Interval\>\""}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Name", " ", "of", " ", "column", " ", "in", " ", "data", " ", "file", " ",
     "with", " ", "interval"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"roundColumnName", "=", "\"\<Round\>\""}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Name", " ", "of", " ", "column", " ", "in", " ", "data", " ", "file", " ",
     "with", " ", "round"}], " ", "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.715846606619445*^9, 3.715846618961091*^9}, {
  3.7158466858182354`*^9, 3.7158467312481737`*^9}, {3.71584687136471*^9, 
  3.7158468766154504`*^9}, {3.727008136376932*^9, 3.727008142377709*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Kprt", "=", 
   RowBox[{"{", 
    RowBox[{"-", "450"}], "}"}]}], ";", 
  RowBox[{"(*", " ", 
   RowBox[{
    SuperscriptBox["K", "prt"], " ", "for", " ", "all", " ", "resonances"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7158485963553047`*^9, 3.7158486094612885`*^9}, {
  3.715848641768472*^9, 3.7158486434942265`*^9}, {3.7158502837267647`*^9, 
  3.715850284917617*^9}, {3.7271723254048285`*^9, 3.727172329430994*^9}, {
  3.727177086702186*^9, 3.727177088493457*^9}, {3.7379090577461157`*^9, 
  3.737909061279609*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"importDataMask", "=", "\"\<Continuous*.dat\>\""}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Mask", " ", "to", " ", "search", " ", "kinetics", " ", "data", " ", 
    "files"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.715845528824304*^9, 3.715845581067852*^9}, {
   3.7158456413051305`*^9, 3.7158456464833126`*^9}, 3.715845836392148*^9, {
   3.7158459290019464`*^9, 3.715845930288857*^9}, {3.7158483887989655`*^9, 
   3.715848408227812*^9}, 3.7158485064203143`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"fileNames", " ", "=", " ", 
    RowBox[{"FileNames", "[", 
     RowBox[{"importDataMask", ",", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], ",", "importDir"}], "}"}], 
       "]"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Getting", " ", "all", " ", "file", " ", "names", " ", "that", " ", 
    "matches", " ", "template", " ", "in", " ", "import", " ", "directory"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"filesAmmount", "=", 
    RowBox[{"Length", "[", "fileNames", "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Ammount", " ", "of", " ", "kinetic", " ", "files"}], " ", 
   "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7158454475529623`*^9, 3.715845465562009*^9}, 
   3.715845586799948*^9, {3.715845865280868*^9, 3.7158459456380215`*^9}, {
   3.7158460097504587`*^9, 3.7158461063620334`*^9}, {3.7158464881724215`*^9, 
   3.7158465260504866`*^9}, {3.720504221124117*^9, 3.7205042215634284`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"DataNames", "=", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Import", "[", 
        RowBox[{"fileNames", "[", 
         RowBox[{"[", "fileNumber", "]"}], "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"fileNumber", ",", "filesAmmount"}], "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Getting", " ", "data", " ", "headers"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DataWithNoIntervalSelection", "=", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Import", "[", 
        RowBox[{"fileNames", "[", 
         RowBox[{"[", "fileNumber", "]"}], "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"2", ";;"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"fileNumber", ",", "filesAmmount"}], "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Getting", " ", "experimental", " ", "data"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DataOrigins", "=", 
    RowBox[{"{", "}"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "File", " ", "number", " ", "and", " ", "interval", " ", "number", " ", 
    "will", " ", "be", " ", "here"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DataRounds", "=", 
    RowBox[{"{", "}"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Rounds", " ", "in", " ", "a", " ", "dataset", " ", "will", " ", "be", " ",
     "here"}], " ", "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.715846111357393*^9, 3.715846214215562*^9}, {
  3.715846530573388*^9, 3.7158465333651075`*^9}, {3.715846971202183*^9, 
  3.715846995300891*^9}, {3.715847248426689*^9, 3.7158472802560472`*^9}, {
  3.7205038842583337`*^9, 3.7205039167970233`*^9}, {3.7205916665593343`*^9, 
  3.7205916997694488`*^9}, {3.7271736318690567`*^9, 3.7271736369113646`*^9}, {
  3.7271767538304057`*^9, 3.7271767727286353`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Data", "=", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0"}], "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Here", " ", "actual", " ", "data", " ", "will", " ", "be"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"fileNumber", "=", "1"}], ",", 
    RowBox[{"fileNumber", "\[LessEqual]", "filesAmmount"}], ",", 
    RowBox[{"fileNumber", "++"}], ",", 
    RowBox[{"(*", " ", 
     RowBox[{"For", " ", "all", " ", "files"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Intervals", "=", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"DataWithNoIntervalSelection", "[", 
        RowBox[{"[", 
         RowBox[{"fileNumber", ",", "All", ",", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{
             RowBox[{"DataNames", "[", 
              RowBox[{"[", "fileNumber", "]"}], "]"}], ",", 
             "intervalColumnName"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}], "]"}]}], 
     ";", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Get", " ", "all", " ", "the", " ", "intervals", " ", "in", " ", "the", 
       " ", "file"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"IntervalNumber", "=", "1"}], ",", 
       RowBox[{"IntervalNumber", "\[LessEqual]", 
        RowBox[{"Length", "[", "Intervals", "]"}]}], ",", 
       RowBox[{"IntervalNumber", "++"}], ",", 
       RowBox[{"(*", " ", 
        RowBox[{"For", " ", "all", " ", "intervals"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"IntervalData", "=", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"DataWithNoIntervalSelection", "[", 
            RowBox[{"[", "fileNumber", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"Position", "[", 
                 RowBox[{
                  RowBox[{"DataNames", "[", 
                   RowBox[{"[", "fileNumber", "]"}], "]"}], ",", 
                  "intervalColumnName"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], 
             "\[Equal]", 
             RowBox[{"Intervals", "[", 
              RowBox[{"[", "IntervalNumber", "]"}], "]"}]}], "&"}]}], "]"}]}],
         ";", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Get", " ", "data", " ", "for", " ", "a", " ", "single", " ", 
          "interval"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"DataOrigins", ",", 
          RowBox[{"\"\<File \>\"", "<>", 
           RowBox[{"ToString", "[", "fileNumber", "]"}], "<>", 
           "\"\< Interval \>\"", "<>", 
           RowBox[{"ToString", "[", "IntervalNumber", "]"}]}]}], "]"}], ";", 
        RowBox[{"(*", " ", 
         RowBox[{"Appending", " ", "data", " ", "origins"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"Data", ",", "IntervalData"}], "]"}], ";"}]}], 
      RowBox[{"(*", " ", 
       RowBox[{
       "Append", " ", "interval", " ", "data", " ", "to", " ", "actual", " ", 
        "data", " ", "table"}], " ", "*)"}], "\[IndentingNewLine]", "]"}]}]}],
    "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7158477024518957`*^9, 3.7158478607844453`*^9}, {
  3.715847923824157*^9, 3.7158479382824*^9}, {3.7158479924714403`*^9, 
  3.7158480436046333`*^9}, {3.7158482726559715`*^9, 3.7158483117133236`*^9}, {
  3.7158483474537396`*^9, 3.7158483856843195`*^9}, {3.7158484177298603`*^9, 
  3.715848495411806*^9}, {3.7205039266957874`*^9, 3.7205040150155916`*^9}, {
  3.7205043033178744`*^9, 3.7205043064684267`*^9}, {3.727176457543348*^9, 
  3.7271765085455723`*^9}, {3.727176605028593*^9, 3.727176636977894*^9}, {
  3.7271767792196736`*^9, 3.7271767804925737`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"phaseTimeData", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Cutting", " ", "dependency", " ", "of", " ", "phase", " ", "from", 
         " ", "time", " ", "just", " ", "to", " ", "show"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Data", "[", 
         RowBox[{"[", 
          RowBox[{"fileNumber", ",", "All", ",", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{
              RowBox[{"DataNames", "[", 
               RowBox[{"[", "fileNumber", "]"}], "]"}], ",", 
              "timeColumnName"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Data", "[", 
         RowBox[{"[", 
          RowBox[{"fileNumber", ",", "All", ",", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{
              RowBox[{"DataNames", "[", 
               RowBox[{"[", "fileNumber", "]"}], "]"}], ",", 
              "phaseColumnName"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"fileNumber", ",", "filesAmmount"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phaseSDTimeData", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Cutting", " ", "dependency", " ", "of", " ", "phase", " ", 
         "standart", " ", "deviation", " ", "from", " ", "time", " ", "just", 
         " ", "to", " ", "show"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Data", "[", 
         RowBox[{"[", 
          RowBox[{"fileNumber", ",", "All", ",", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{
              RowBox[{"DataNames", "[", 
               RowBox[{"[", "fileNumber", "]"}], "]"}], ",", 
              "timeColumnName"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Data", "[", 
         RowBox[{"[", 
          RowBox[{"fileNumber", ",", "All", ",", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{
              RowBox[{"DataNames", "[", 
               RowBox[{"[", "fileNumber", "]"}], "]"}], ",", 
              "phaseSDColumnName"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"fileNumber", ",", "filesAmmount"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.715846451342945*^9, 3.715846468542735*^9}, {
  3.715846538055955*^9, 3.715846582497077*^9}, {3.715846758361905*^9, 
  3.7158468228273244`*^9}, {3.715846858000423*^9, 3.7158468614798813`*^9}, {
  3.7158469220649962`*^9, 3.7158469223452053`*^9}, {3.715847002473178*^9, 
  3.715847082161121*^9}, {3.7271765140407248`*^9, 3.7271765249747705`*^9}, {
  3.7271766418346615`*^9, 3.7271766481779995`*^9}, {3.727176726529216*^9, 
  3.7271767311655*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{"phaseTimeData", ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Time\>\"", ",", "\"\<Phase\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Phase(Time) dependency\>\""}]}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"phaseSDTimeData", ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Time\>\"", ",", "\"\<Phase SD\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<Phase Standart Deviation(Time) dependency\>\""}]}], "]"}]}], 
   "}"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Plotting", " ", "data", " ", "from", " ", "above"}], " ", "*)"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7158468282199306`*^9, 3.715846849394323*^9}, {
  3.715846926415874*^9, 3.7158469358988914`*^9}, {3.715847089954613*^9, 
  3.7158471007167645`*^9}, {3.720591315565102*^9, 3.720591383339161*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.004583333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxNfHdcVNfz9oGoMUQNojHGxto1xoKo2BlFxU5HBIRlacvushURFWERFbEB
ohElhrXFGkUlxhZZjTFojGKLGjVgi0Fj7D1yXs6c2d/3/YvPfO7de+85M/PM
M+XQXmUIjHdmjH1djzHxlzF7uzneN73XNeXlrho/O2PVla1613hbGC+/nyjk
v99tKn7sPf8xYyuShKzMO1Ly3Fv7pDazRi1kdiml8LV3y1E8uhJ/bzMOKvvP
e8MMHn0MZXXBgwAGsIOXJyQL+XqneqHOMCaERw/4P7kefDaeVTczC7nUt8qv
Adg1vKrzTMf1htD339poN6tDdgFFObOfWCbk5+/PT2oERfO597ntQrZqDo5r
AqMjWPXMP4Wscr3c0RU+2c+r8uv718llFS+6NYXMMJ752zNx/cqGR13dIGQm
U6YfE3Kb8Nudm0GRntlGrRPyggeVHZrDe09eHrnEIX8KZW7c3Weu4/ctoF8w
5x/MdsifweljvGRsquP9LeFsB17+0uL4/efwy3+86u/pQv43/Yh7K3h7gZf0
Mgr56+MlrVrDyZe10Xf1Qk6r2dS6DVx/VVs+Ree43ha2Kjg/h3IXj5wW7aBX
U8YSUM4/ltLMHf7245kHtUL+r7tHQwUc3MZs4wxCNv04bmJ7aBLIvatQv24f
MHt7mJDD4FfU7+fzVvp0gEeva91d1CT/1AHmTOclN1CfOV+1HNURBlt59CV8
3zaT208doWoHU+7E37/cUjyqE9y9wuzlRrr/eCcYnMTsYw2O53fG/VmY4nh+
Z1jtzDP9Zjqud4GEVaz6SLbj+V3g0kEGc1Y63t8VAvYyW+R+x++7Qr1xzBrz
r+P93WBGX2bzbiD0HXeo3c/d8P0Nb/tJeXR3eNGYVS/b5/h9d2jajlnnFtH7
fL6Anz9n7ECO4/1fwKTaWv5zppAfd20wogf8+IwpHqSRfLQHjBvIvRNSHd/3
JUB3zjuZHb//EjxuMPjI6FhfT/jRhdl/QP3+NrHRsZ6gmcZs7VCOGpw7ohek
32T2wGTH/vWC75J4pkXn+H1vuFzGy99oHL/vDeZsnvklXs91Yoo+cDuXl/+B
18/+8OzHPnL9Qt/WJg8DXvcB1/7c/ROhL2vJH2e8PODja8zaSU3yDA8oeFbr
vQyvF3zX5qAHqAt49GyUHzQNe+MBQV/w6M/wfWULWwzqC4fb8+h6+P1z+MW0
vhDamHt/aKTn/dAX97uJsHerOmDpq74wezZTxGSI+z0qJnh5Qkd3Vt0vV1w/
9n1Fqie8XMTdl24ieZ8nZFzj3nkXhHw3/9gLT2ieyFinD+r0a23Tqt6AfnDl
Ayd7uzeO3/eDZa48+s+fhLz4y5x9/aBTQydQb6DrL/vBzCIGHkvp+oD+sD+C
l3QS/iyel9pf+jf6c/CG0fv6w8omTtbf0V53fpj1oj/u/0zU74wM7/4D4J8i
zlubhHzu1qyUAbD+NrN6GUkuGwAXz/Gqj/QkPx8AycCsZ8T+WQ/38/T0ggBf
nnkP/XX+9idmL+jVjZeYk0je4wVXrYytxf1vsVr/1Av29ObehQ6570AYvofB
NtR3Q93hiwMh/TWPjkb/vbpsVZNB8PoqU+xB/bq2vDp5EGw3MPYDXl9fP3TZ
IPAwcffmjvvPDAL9t0wBGrq/yWB4d7juTvF91odDq/wGQ9ETpjyhJzlvMPQN
Z1ap7317154dDFMsvCotjeRPhsCcKMaaoj9H+qn8h8C8D5lNuYK+f/kQ2OTD
bHcPiuuTO5SeH4L43PgJyW5D4acBTFEj9M2qPukZOBQiB/GSoj/p+vKhMK49
s13dQ887PxT2j2IsrMjx+2Gw7Smzpy2g64HDJH7M8ZPPWz4MhvzF+YI0x++H
wYqhvNwwnWS34XBBy71bmun+wOHQ7S4vuYh4tmXBg4LhkPo9U47Q0/Xzw2HL
J07VC3Uku3mjPcxAfRvfbw3whjZvGEvUklzgDaEveclb1J/zgy7nvBGPJwj9
2sf9E9AQ/oev1rul5m4A979h1mghg8ff72YCfHCaQUf079Uza74CKOnFq2yo
z9qyin0AfC6zH8X7VY83/w6oX6uG5JcAX/ZiilQdyS1GID7kCfyxTxqp7D8C
92+gkeSQETCxHrOeFP5grWmQNX0EnHB2Uurm0PWVI2CDktm/X0Ty9yNkPFhP
8qUR+L2x50l+MQJWP+BVx5z8pfzpSDhnYvbi/8T37Jnj3X8kPPyUe685SXLI
SDA/YrZ1wp+hqveNlJGgmsyUbQUfsPpoD68YKfF3HurvQLvvR8L2Bbzkp9kk
XxoJPVcw++ZUx/tHQtjjWnev6fT8T31gWgn3XmRwvN8H7f9WsuP9PhhvbqJ+
Zz9/n+IDfnG85FUyySt80B81yfQ9ZT7Q+y1TrkZ/Shiz74IPuLXkPEPq++PL
z3wkvjiuNxsFo/5ktkMO2XMUtH3GMzck0fPmjcL3zUD97vhv67pRcL8vj9ag
vfgePXV0FIy5wt0Hon5vz39wcxRs+4gp5+P3Zo5v5DwabCt4phuuZ9+FSR1G
Q/xOnrnYSPePGI37udZIz4sZjf44KY3elzUaBP/rno34MDB33WjYNZFH317u
eP9o+D6Nl6eUOd4/Gj5cztgH9x3vHwP+p7h3jeBj+P4xcKcB51f+pu8ZOQY+
3MpLPsH4HlikV42Bguu8ZEQx/X7uGCgs55kei+j568bAlEgGuky6fmwM5CTy
8skzHe8fAz4vuPfYFMf7fWFyJbPrBB+ztvqkZwdfCG7G7OONjvf7woGj3Pt3
A+JbZJ7KF26cZNbhBrp/ri/y1Qu4f7ntS9f7Al/Noycn0/3HfDFeDhH7be/0
V+UtXxjv4sSW6uh+57HwayTnLXSO/R8L0XO5+1ut4/1j4bduDGY57KNwLOLB
x6jfdZ0b7B4Lxybx8pXC36FBzN3KsXBpMncfK+wBPJtlPx4L3VW86rxDdh0H
n/3C3QMTSF8e4yD2V15yTU1ywDhYPpVXZTrsxTQOlnIGn+pI3wXj4KvFzB6s
o/t3j0O+oUum/Tg/Dtb2Y8o7jv17Ok6uN4X05zYevHsz65ZZdL3veMSP3Bza
j8DxmA+8XEv7ZR4Pzzdz77WnxPPt254sHw+NL3Fu+4/kPeNB+wevauPsL+8/
Px5e5DOb63m6/nQ8+s+QbeJ5rzw9m03AeLqnkK73nQC+w5l960Lx/kiDW9AE
yScEflkLXwdZJsCD1sw+LY3kwgmwtJC72wQ+2E9lrdw7AfFVifGg948pFyaA
qQEDvYnufzYB+fxOI8nNJmK8UxhI9pyI+gtJJv8OmghtXbh7qcM+1k+ETeHc
G+M1LJ1xpHwifPSa2VIQD47XpWgTkQ8hfwPlzwo2Cfe/UxJdV0yC2jZM4Z9E
9gGT0J/Oov2cubxBOQm2buDlhVqyD+skGHKWKdH+xHXbJIzHm3Rkb0cnweNT
rPqxAw9uTgIlr40eaCH7cJoMXmt5Znwqye0nQ+fPebQpne4fMRn53s1l5H+q
ydDFmdnvbCF7mDsZFpdy78d/kL2snwyPbvLMtgIf0J8my3zoJe3PrcnQIoZn
2o6RPp39ZH5lI3129IM2S3nVk2Wkfx8/yF7ElB2yyZ9i/eD7O6x662ySs/0A
899ZJG/wg2ZOTNk3lfT9kx/0P8hLXhhJ37f9EI9vo35XRR108ofbL1j1WbR/
z47XmvrD12d4+R7kA1nzH7T3h5/78JL6Qra1Gd+orz/8k1WXSOP+tpteGOYP
jY8w5QrE8+4TvZL8cT2pQh/V71avnumP+HBQQ3KuP/LlFMkP/tu62h/xb4eG
vmerv8yXtXT9gD8cHM4zm2vpe076Y74zUthf9Zl77676g9s8pkhxyDX+UNqf
2VtY6Hvf+sOzEbxEi3ip2dHGJQB0U7h7hNg/26NV+lYBGE8CBX+GxZF5XwTg
/nt8VScrrh4pGRwAn/dkdh+Rbyldx94cH4D50rcPxP1R256EB8DOQFadIPI1
m++5DtoA+EvHSxbViPet9PScHQCfvqut0h8ieXEAbDzBlF2/Ec+7vdKnOADa
GXl5DOr79OGU7QHwmzevOpGF9nV706EAqK3vZM1OJ/nXAMwHtswQ3/9Qd+9a
ABw7wKpdppP8gNYj9KkccvbVuwDEhzjk95cLWzYKlPHMIbcJBJePePmPyJfM
YYO+DIRZtaz6lo7koYEwt7GT4g7ur98c7/hAmDGOezdC/ZW4XLYEwuxPON+u
pvdlB2I8/hj13+lltxWBYOjIlEfE/combcM3BkJUG55ZkUTPLwvEfPIV6r+w
4Y7jgYhfbTE+3dQcvhgIqxoydgHt4ZXP4juBWD8IMND9zwNhxDtm/9VE99cL
glNVvLwI96Pl8/fNg2S+kE5ypyDIj2bKbMGnoWx/u/5BsG4Oqx5dTOsbHQRP
fJnC8BPJIUEw3Y/ZP8H87MEIZXwQlL3jman1/KU8PQisR7i793VhLzkNsuYH
wYN6ToqC3eL3HX5dtzII6zNDi0jeFITxrqHAb+uRvGPfByE+Phf4DY2env+5
7vsrmGKJ8Gf7i5b1fg+CiVm8PAft2Wd287+CMN/+xkLXXwYh/xwp1q8suNGp
QTCMcGPKIjPd3yIYf/8L8rue60d3CYY/3nPv1sKfwWtmzYBgxMvOQt/Kw3FD
fIPhnT+v0on9tq3OHWEMlvFP6Fcx/9qbjGD41s6rYoVs0zv3yAuGirt1yIV4
7fLLhJJguf9qkncFI99tj/awabGuPBiyhvDo9xqSzwajv7iI64qw7pFVwTDA
i1c9S6brj4Lh6x+Y4i8DyTwY42Ulrjdvz9pPQmDWcl7eU+Cd7cSQKvcQtNeN
uJ8qxvqEQNIrzncsFvcL7wgBUe/L3yieV+mW7R8i6wFnhD50dfElROIvE/yu
4dfHjSGId72FXL1BedcaArv3cL7irPjeazVdCkIkX9tG8roQ5P8RhSTvDsF8
xT6f8PFoCGwext3Xoz0edw07FwJHjEy5VcRrpZtFfTME/SVD+Ldip1fukxDo
msn5egvJTqESXxz43TQUPC/z8voO/G4fivYzUU946BGK++WfTHg4MhS6T2Aw
RkdyYCjyo4voXynZ9lmhkL2O852oP+WltNxQ+L96KeJ1KPLFJkn0vq2hIOqr
F5MInw+EQlkGg9dqev/JUKxnlWsJf/8IhVmfMusjISv3N+l5P1TuRzLJb0PB
+TaveiT0rWhgGuYyBfn8DQvhbasp8CiOQfl0kr+YIvFV1FcVHq+DhkyBqPqs
evYykidMgeUjGVi2Eb5GTMH41vcPwi/tFPye3iJeC/ycPQUiOzA28RXh45Ip
Mp87Ifarlfv84inI79puIjzePgX5SFA+4e+hKZJvzKXfn54Cg9/XllyYQ3h4
fQos6ckze6VhfC54+M8UWY8R9qtMCG3yfgrs2s+sYdMJnxqHQX0fzjGfEXjU
Ngzxryni+6CNxp5hyEc66QlfhoXBu0F1mkN/v6QumBQGp7czdjiZrk8Lg7ix
vGoq8rcWJ1MXhEFgH1b9B8Zv59a9V4ZBp6+5+94kev6mMFlP0tDvvw+DKVWM
/atx4FUY5Fxg1R+g/4YH374UBrcbMWuklvDorzCo+Z6779AR/rwMg4kPWfV/
GF8qEhIaTIWn3zG7EvGtuKyixVQ4s4lnDpxOeNNlKuabtbMIn7ymwuGlzHpA
4Kf92cN036nwVwhjwzFe32i+c8pUrG/2KBffm3b1TOJUSDnPrAWiHqMoVbmm
TUX+nNTYX+LBwqmITzFPCQ+KpqL/NDoq3ndwUNmWqTBwAatuaSN82D8VYs4x
RUmen8SHiqmQ8bS2qrXI121Pjr24MhX5nXIOyX9PhSUtWHUM4nnqTt83U2GB
E3dvO53866NwxO+5Aq8FP/o8HJoMYbblFvLv7uGQ+J5ZjSbyt0HhMv4j/t21
nxoXDvbfGSt2yFPr7m/OFO/1dH9SOOafWcnkf8vD0T6NSfT9tnBZP8X4612X
n4VDozBmR39EvApHfaUnO/AqHOt/TQz0/TfD4dpfzNYk1YFX4VjfCzLQepwi
sB683OTAqwhZ355FeNE+ApalM2uzmSR7RMCJr7j3qwz63pERWM9wEf7Fgi9M
CoxAPjp/tbg+7G2GKgJauzKb5xE/yd/MEbJe8NxP8rW5EcgHQxuK+tuORs6F
EZgPKUU+X/1G77YhQvZvDhJe7I2AzVsZTBH8jGWGx/0UIe2zkPDjQgT2H0py
yf9vR8ArC7Oy+eT/zyLg70N1zBLjTR0f+iAS68G/5RIeNI9EfUUI/Ven977R
KRL5wjmBX4Kf9IuEE5nMts1KeDA6EtZcZDBgHuFBSCRU/cT5LKxXra3yi4/E
/s71NPL36ZEQsYnZf3PgydpIcKphSk9hT9UBW05sj8R6wkLE01yPhocjZT0w
lfDpdKSsF4jrgq9dj8R4HubgU/9EQvlDXtI1nd7/PhJ+Hc2Ui0S8Enym8TS0
j8nZJLedhv2Rs4JvV2/e96znNJh6jFVPm094MHwa1k+KRD2bscebJ0+DF514
5rVV5P9R02R+tUu8T2FrZZiGfM7rnJ/kF5nToO53TCn4t8CDvGlYv+nXyF/6
f8k0KK/HvfvdJ36waxr0G8aUP2C/rPa4wj4N+nzMM29tFc+f0NWjchrcmMaj
cwUfFPynehrWO77KIX9+PA35U8Qiiu9OUVgP6j6P/KVpFAR+x92nZpPcPgrr
o7OySPaIwnzLz3H/iCiYGsrL/55L+BAQJetbmeRfMVG4vy6Z5N+mKMxH22eQ
v2RFYf0hdR7F721R6N+lM+j3B6Jg34ta/jSDfn8yCv3FYqX4fDUK8/c+4nvt
6/pH3Y/Cfsdkcb/Ij95GwasPefSEbHq+S7TE0zkkt4qG3jOYbRWup86/ekTD
8p8Zm55L/jMkGlzXMaiXR/FzQjTGz2nLyV8iouF6LKueWEz+oo1GPp152E/m
B+nRMDKNsfF3xX5HZmqWRGP/bYuLv+T/X0fDhWBmeyD0r+j92+kd0ejPhfcp
vh6ORntbe4ji22/RyCemif6o4O83ouFWR+5eU0z+8zAann3BWMkqim/voxFv
/xbfXz2rkfOHSqzXfy7WV1qhd/tEifbHFuF+lbT6TIn9lOJckt2VmF/UF/5l
HObco6sSrCNYtR3xjr0O6q2U8UbEs8pJ4XFeSsyPFmbQdW8lrm/xTNzvxTpf
JSzyZMycgfiVeiRCCZc9OJ+hoffFKsHQyMluEvjbZ89KH60S/fmI0PfjLt0j
LUrkDwWzSJ6thB0f8KosUe/KP/YwPVsJu4uZcqy4v0/UnrWLlZC7j9k9M9D/
tpwoVEo+Kfw5X+9yuVgJYVd55v0ckjcokT9YxPOtK4dUbVciX+MCD13DPBqW
KbF/cR3136qrx2Gl9Ned6J8+i48rsT5QdgPt4fKG00rEa8Undfp1vVx8/KJS
1idE/mW89+z9dSXWPxddFd8bmdPirlLWbwRe2Ebv9H2olP0AkX/1abjR+EIJ
3+zmJeuFPis3qAveK7G/OU7oK7/lf1vrx2B+9WcW4mfUwcYxsLIzU9yW+Gs/
9WkM1v83iPVV+81/0DZG8mPhb0a32c27xCB/3ZVNcq8YmNuJ2Y1if/rkNOk5
IAb6POdVISLeV3a4MGl4jLR3ER/9G73NGBOD9ZxKgeePNx8pmRwj+03Ij+9W
pKpioOd2Hv1c8KfH3YJvJ8nv6Yjx+8G4RuYYrN9/gfxr0I42s2IkXmjp/XNj
wJjLmFHo03Wnd/9FMRivmyF/fLdu9PIYWU8U/NJm7B+1JgaKA5i1THxfH88e
OetjoP8GxrbK/FNRui1G1pOEPZS2Cdy/JwZMbXnVLIHvxoK7lQdj4PxlpvxN
xFNFg5k1x2JkfNlE/vNrDNab350je70Qg/H+vuDjrldPTLgWA3fMdcxCyML+
b9f9vpq7L74k1lvTbv6DGMzvvizFeHF707MY9I+nX5F/vIuB7mcYG5tL9vmB
CubP41XtsjDeM9ZIBZM0TDFkNtlncxXiW4DY/9JnL7q1UWE/uYlYr1GdO6KT
Stqriez1SxU8rOUlS8V+9ckdVNZPJfmw2E9/VcMdQ1UynxDXFaWaw6NUGN+/
0GO86X1jogrxcRTWO/qHNglRyXow8uXQBllJKqyHrBX6KzUr7xpVGH+Kk+j+
mSrsX/0j9F/5aoJXlgry3vDyAHG/sdA1LFcFPo14FeZ3wt4LVDD2EOddtWTv
q1Xw72xetTiZ7HmdCvl3mpHsaZsK891grJdeMg7bo8J8YU0K2cdBFfKPr8X+
KcIj846pIG0Xr5ozn+zjlErm9wJf/fe3uHpehfnZIYHHrj23PflDBTvPcvfO
j8kebqvgSium/FjguTLO0/OBChJ68PLcu4RXz1Q4T/H+AOHVOxXyo5fFhE8f
xMKG57UlIOZd/G+vffRxLNiYky0ny6HfWMT7remkzzaxWA+vFvjc50ab8E6x
Mn6gfZe4ZX8ZC2M3MmWx8Fdr82+L+8Vi/e6e0L/Ao6F18g3OLQbSz6hYOP8v
51f1dP/EWLg2i2dO1dP9wbHYX5iE9dTVBQ8jY2Hax05Kb7H//k06NzDFgt8k
xnoI/T4OKDWnxcr4oiV7s8ZCi9+YLSSJ8HFhLPLJaxqyt/xYWV8S9z9+f/p0
USzG19NoD3V4aYvF+l828vttNV22xkJsGWN+aI/t5njvjsV6WyHmEwdHKA/E
YjyoMJO9HI2FQR8wxWXhH4prT86fjJX17Eyyn3N11/9h1vH5hD9/xELEYR4d
/h3Zz61Y7IefvEb2cz8W2qYy2CTwXODb01ho+qFTdf83ZE9vpX4UFWRPznEY
z2+I+k2+Tx0fiYOOA3im03KyJ7c4sAcxmDqf7Kl1HNpr+ByKvx3jkK9bZ1B8
7RGH8x/zUim+esZJ+xXrVbr6Lx0Sh3zeYCL78omDvSt51XED2dNE+b6r4nr1
psKWwXHQ7D6z3zWQ/UTGQd4tpvgZ97tHpiYuDuNJx2Syh7Q4WLKa2TomEd5Y
47BfpBRy/oiwQQvjkB+cxnrMvgcB+XGy/q8h/RfFYf12jobwxRaH/fB9sv5a
e3FLnOSvOrK30jhQz2L2XnqKlwfiZL3XSPo/GgcNu/CqSQ79n4yDdtdZdegM
wo9zcfDyJQPnDIqPV+PQv0/lUny9GYfzFL6iX47jeHGIJ69P0vOexMHdRzx6
oqinlT45te5NHPzwJ48eI/phIr46xSM+3RP47urc8dpH8Thv1k3YT+nae++a
xst++UqKr63iZf9xAcWvDvGw4D7PrLSSfX0Rj/XK2w586hsPKTXcvZ0jvg6O
h3ntuPdD2R8oqxgZj/2azhaKV+PjMZ8cjfXUOn4VFC/7T0ayj4i6+1XMGo76
3NF8Z2w81sMfIH7W8R9tPPYjLxkIb6zxOM+Wq6d4lROPfK+h+H2p79UzefH/
m58R+LUqHvPzOzqyL1s8eH3kZMP3Cf60JV7WU8Xz8h+mFJbGY31ntSMe7Y9H
/ob4JOzNHo/6Vhkp/lTEYz3DPYXwoVJ+z9iZFE+uxsP6t9x9lPCffF2V3814
yd8w/+l9Ka0mHvY6ObGD3xA+PImX9djjZB9v4uV82ivCC6cErKf7NfCX8cUl
AeflMv4i/bklyPoP4vuqhIRWCYhvrUV/VeBDhwS0hy3Ix8882vxFAqjiOd86
n/Cgb93vmzrZkoV9QpXvzcEJOD+2cCbhgU8Czve8nkF4MCEBFL/z6GZi/YJv
BCVg/hkh8EDw8YgE3O9WaaTv2ATMRxalkr61CVDyGYMVMwkfLAnSf4RsbXGu
Q06C7H+b6Pd5Cdh/ap1C9rEqAechvMyEJ7YEiPNggPm7sJctCTL/EPqvTLs5
qzQB9zc5lfS9PwHrgzfMhP/2BLi6ipckpZD/VyTIegXWX+zHXlQmyHwi3aHf
BKkfIVu9e+65mYD9t8Bs8r+aBMnPhL4F33ySgPHuWRHh+9sEOe9xkPTnnCj9
75H4/iOr9C6JcCSH80tN/KW/uSXivNufL0lfrRJxnqjrOfK3DokQks95w52k
rx6Jst8t+Jzgh56JWI/8SXyPyE+GJELqac4noT3U8T2fRGi1jfOj2cQPJiTK
enIW4XtQItZjCzPo9xGJcn4snfwvNhH5UnAG+Z82UdYzhFx5+rgiJREqnzNr
2zkU39MT5XxZFuFdQSK8fszLa+fS9aJEWb+eTfHYlijraRkU77cmQocD3Pun
OaSP3YkY70HgF9w0qw8k4vzN1AWO+Jso+3c5pJ+TidjvuSKuV6bue3YuUfov
4nEd3/8jUc4TLSE8vJWI+LrZ4T/3E3E+97Mc8q+nidJ+Suj620Tsl6eVkj85
q/F7rp4l/XysBt1PDPJfUjxtpsZ69uciXxP721qN8wU7RT1G+EdHtZxvuCPs
47DuXg81LPRnipFYj8lUufZTy3mUPYRvQ9WS32ym/RylRj734Qbaz4lqWU/I
pXgWoobmGbzksZjPE/xmmhrnoeetpPgWr4aszcxqXkL7m6yW8VDc/zjdK3e6
GvlE1kLCrzlqmZ/n037PV2P/qBLrG3V8Zo0aeuxm1a9ySD/r5Pe2dvjLVrWc
X1hK8WoPPT+P9HFQjfXMn4Us8qdjahnP82i/T6lx3nP3IsKTC2rkC7fzyR+u
qbHf/zSf7P22Gn73YtbZDn94oEZ7nSb8FVzOvnqmxnpfcBHt739qiS8biV/U
S4IBCgabdxOeNErCfDPlNOFJ8yTMLwre+sn8o20S5ueshb+MD52TkL9AU3+Z
v/RMQv8ziPp7Hfod658E47/hVVPweXV8cViSzB/20f6MScL57E+3E55MTpLz
yxsoHoQmob0c+4bieVQS2uf+YrLXhCTY05LZGqymeK5PQv9dJuo5j4OuvUlN
kvXRlbSfmUlQ+TFTbFtB9puThP2gXYW0n3lJcCuPwTeFtH8bkuT82jKKD9uT
sH84RejX3ytr5d4kOFefl/wlrot881ASfLSEZ3qjfuv43fEk0P/IyxvhPEkd
HzydBEnVTKnA/lEdv78o9+O6kAWfu56E+emhAj+ZX9xJkvUZ8T2u2fvbPUzC
/q6vkEW+9yJJ5ttivfZTq1e/T8J8ansx2Xt9DdpjnthPwecaa+BoJc9chf4t
6hsaXG+7CtJPW420D3HeAJQ3OnXR4HmIE838pf320mB/5LWQRX1ggAaGTmS2
gQ/9JF8frpH8vILwfYwG++u7DhB++Glg6xKm+HAr7f8UDc6vPtpI+xmtkfxk
NdlzokbOiy8n/DBoQJPCvR8I/Bb8KE0j6z8zaX+tGtkfE/Ee8yUNqJvwkgMp
tJ/5GnCfyhQrLYQfqzXIRxPwfEOd/X6nwf7TERF/BT8q0+A8apae8P5HDVQD
956J/fM6fvuzBvnLfkc+/psG4+chAz3vkgbnSTN1tN83NBD0FbM2EvFZ8Nu7
GuRre2cSnj/UyPmS+YTnLzUyn5xD8bVWA2sncG7MJH9ooEX+0VjYj6i/NNHi
/Jwb+sesRs6faWW/WOynyK/dtZL/iP23FR9O6aqV83HIv+v4TW8t5k9vBV8X
9ZKBWph8j0evFvUYEQ9BK/FNzD+K/HmsVvZ7f6T99tdi/c97I+F1mBbnCbqt
of1UajH+31tO+JyklfNlS2i/TFqof4KXV+UTHs/UYn0sP4vwOEuL8+938mg/
c7VYj768jOy3QCvzF4Gfgq+s0cp5UOFPov61Xov9gedLCW/3aWFBMoPlAs/t
4+qFHtGCuyjwiHgu6nMntGgfXZYSvpzR4rxlqIgHleuGuVzWIr5MSid8rtLi
eZ5BjnrrPamPQKEvUb96JJ/31xKy71daGf/F9wn+wbVy3kjEI8EHG+qw/l0h
9kPUB1x1MOwkr3q5nPCipU72l0oIrxU65OezNhBedNdBxUzufu97wgMPnZyP
rqb9HaTDevXPol8m7G+EDvneBRHPRbwbr0P8WlJL9haow3j6tILiV7gO+8M7
99J+quh535G/a3Woz2gHn7Po0H8GrSb7m62T553yyf6ydbj/7ktpPxbr0F42
pxNfWKGT/T2xX8q8g+O+1kl+WEj2t1EHO/7h3v2X0n7s0Mn5FVGPFvnLUZ3M
97BfVcePK3TIl+5kE384p8P6bSnieV18uyrXMz+H7POmTs6DCFnw5xodzr8O
XkLx/4kOtnRh1ksOPvZWh/OBPy4m+3JOhtzfeLQ9n+KXSzLy37GO+O+WLL9v
Ce1f62SsJ4xeTXjZMRntt0zgvcgneiTjPEmNo77eLxnxcPcPhIdDk/H73mK9
tS4/HJWM8+79xfkEgYcTk7E+6SL0j3wqGfObfsL/hX9OS0b7a3ia9i8+GS6v
ZYrkzeR/yclyHncL4dn0ZMSnx8sonmckY39idx6tf0Gy5HcryJ6WJeM8YfBX
hF9fJeO8xE5H/P4mGetFnXMJvzYny/MHhbQfu5KxX/XrQorXPyRjf+TVHIoX
vyZjfWrRfLKnC8lY/8/NJvu5nozzxRFZtD93kmW+kkP28Q+9fyHh/4tkWf/O
oXj6Phnn9XwWkz/V16N/7sun/Wisx3p0Q6Ef4U8t9FgvP5hPeN5OL/Mt8X0i
X+qix/m2xQ4876VH/nVO4KeoR3jp5Xq20Pq99XI+ROCv4N++euz3VlT5yfzS
X498rLfonwm8DtNDVzVTpn7mL/NJpfzeVGEPYv1qPQwfw937X6X1G/U4H/bP
EVr/TD3OJ/TZQvaQpcd5zOcbaf25etlfXUPrL9BjvFuyhuxhjV6eB8kjPF2v
hz+a86p7WYSn2/WYP/QS/ReRr+/Vy/miPFrvIT3mA7/kEX78pMd6pELYx+Pz
o/f9qpf9AHFdxK+Lesl/UV918eu6HueRz2L8rDdZdUcPA1vx8g3CXgX//UcP
j6N4Oea/Aj+dDHBoI3cfs4jwpaFB9rfSCV9cDfD0OI/uOYPw43MD8qMw7KeO
3unb3iDzXcSfa0/OdzdIfreC4lNfg5y/dvjHYAPysT9XEr6ONGD+2mw54cN4
A9aTG++i/QkyyP7WGdqPCAPOV28U+sT6lAHzgyFu/pTfGrA+GPqG4kuKAet3
vwj/FvWGdMP//FnEl3kGOU++guL3EgPU38UUQQW0vpUG5L8JQhb51FoD5uNO
jnrRJoOcZxL6Efz0O4Psr2B8rcsPvjfI+rxYn6gPHTGgfZXOJHs5YZD9rixH
/JX3d5/piL8GjGev5zrir0HO1y0he7hnkPaF+VIdP39kkPWbPPKP1wY5HyD8
u+GOlvUaGPE83jdCbtn76pmPjHJeVdjPlQ26e42NMDKPl/y+gO53M2I+uVO8
v9T3RqcWRjxfdTQf8Wbd6FZGnC/4SOBVN496oe2MiMcHxX6GDSo1dzDifpwR
fK3lTp/FXYxyvlDE8/3jGu74wojz4CoRX9OOFB/vZcT5mvNiXnXLCd+bfY3I
z7GeWuST08LLCEYbLxkq+HnR6pU+Q4xo/4jn3SIX67yNWK/e9KvYv1d+S32M
qK8sES/SCpvv9DVC8H9MkfGt2M+GW05MMEKDL5kyAO3VNfi2n1HO4wj/zG/J
WLAR+wOfCX0PLDuuCDPifMHjxRifvPtHGuV5v0WIBw8ClEZZH12G+98/Ks6I
85JM3P86IyFBbcR+3wThX91y3LJ1RqyffoR8q8PlDUYj8qsDwh5a1gvcn2JE
+z6E8wolLa6mGWFfDFP8PY/2J90INQNZ9UO0N1Uj5ywjxtdNwl9de+70XWwE
zzpLPSDuH5g7zCXPiPz7W6FvdUFNl0KjPA8h6jkVEzw9VxmxPlpP2F/FuhHK
YiN8oOTu+qW0nyVGcH5bm/nfIsSr/7ZuMOI83n/CvtNqOlzbbJTnlTC/9/Zo
uMOI9SAfEd+L9E16lhpBnGfXiHy46Hib8DIjnpf64jLiV0XqfiP2azeK82dj
9z3afNiI9vtZY8TztBq7EfnaRHH+xP6iU4OfjdBjNC93vkjrOVlnLyuZopWY
txD28JsRujxgijDRn93fLmvlOaOc5xPfVzkp6uAlI7hMZ9V980n/V41Yf9iD
8Xv+vXc3jPJ8yyL058KWt4w4Hxch9PG6W9igv4w4H/JC+EtF6sFx9404X+sn
9Gl0y9T8a8R++tZMsv+nRpz//TaT9P3SCGvU3F3W91ZpDr814vmAi3NJ37VG
PJ8zTsTPtObbnjib5Hlz4f/CHz40yfO94vuqZ7mGNTWhvgfh+TvN/nafmmS/
Fuc7zHFDPjdBfirneUtJv21NGN/KChBvG2S1N0k+mEf719mE9SdjIe1fd5Pk
c6vIn3qa5PylkLcU2095mPB8pN7hT/1NWO/fuAfxalyjwSbZPzlL/jPchP25
IJF/CXsYaQKLjlVnNvOX9jDGhPZfLOxB7Nd4k4w3wl7+DiirmGyC0Y9qy0ft
EP7s2ftGoAnPe44V+K4ecu1NqEnWz7E/3ya0SYQJ5+FWFZO9R5twnv3wKlpv
rEmeX1tI9p5oQr78eAmtV2uS/UDE09A6eDbJ80JC/wOj9j2zyO8dkkP4mWbC
/nqZnK960S3dhPWd10Lf4HJhktUkz3fNIHyYZ4Lofxk8Evfvf/YmY6HUXyOc
t7qUUrhEyksEflxJq+OTJswHvp9L9rTGhPlG5TzC029MiOct5pH9rDdhvaVh
Bu3HZmkPn+D3V03w2m7CeVMtnv+2n5iwy4T91iULkC8cTtlrwvN6X66g/fnB
hPOZw4T//92l555DJpyP1W2keFJuwnnvW5WEp8dN8vxGLeFBhUnOX4p6ulj/
aRPOy+99SP5SaZLnj3Ee5oai9KIJ/bfNftL3FRPOD1zbRPq+TusvJvu/aUK8
H47+Uhcv7pr+dz5yf4VZXWNC/Owp7P/11ofpD03QcT2zDcD68ug9a5+Y5HnF
pYQXL0w4f+qEfDZ9SNUbE86LN8+n9dWasB9SLPRfodjRxtks5wOEftSH6zzM
jPPwtfMoXrqY5fm7eYR/Tcx4/mW8uF/8ew83szyvJOxlbKPai23M2N/OE7L4
dyAKszxPlEX+0Mks/x8Cxq86vOxmxvO0M8T9ilK9W08zzh/iPJ3AAw+z9Oe5
tB/9zcgHvIR9/13Zbv4gs+TbeYT3w8w4P36tiNY/wiznib8jvBwtn7fwDOHl
eDPO41x4TXg52Yzn538U+Xf1plX6QDPOn70R/i3iYagZ+xUrzpE9h5ux3xMt
8IP1yLZHmSX/+Ib0rzLj/H+DIooHiWasNz1bQ/FAa0Y8fCPksCbdIw1mrA9O
EfYLi9UFFrOs/wt7H3sz9cgMM87rejn40Gwz/n+TBsI+1AkqV6tZzp/mkD/P
M0t7spI/LzTL8w2YT9Wtb4lZ9ifmkv/mm9F//llC61lhlvXVWaSvIjPWa86b
yR83mOV5rWyy72/NeF5nwHxa33Yz/j+KvVay711mrCfPxfmu/uFxe83S39II
v38wY39HtcThr3T/csKzcjPOoz1dRHh93Czza6wvOXf1qDDLfoaYN1z4YJLq
tFnWZ674Sf1VmrE+XP4hxe+LZswHIgSeC/u9Ypb8m/tJvnLDjPOhy8X50upO
zj1umrGeMEfkY6+DqvzumuX55a2EzzVmzNe+3Ej6e2iW52HF9y/U3d70xCz7
jVjvOrX20Qsz9pPniPVceTOr+Vsz9sujlpM/1pqxPzHMoS9ni8z/FpC+Gliw
/3NgMcVnF4uclxL3K8KVd5tY4GMDjzbMJvtrZpHnT0T98/H7yg6fWbCe8N10
8rfWFjkvm0Xx190i+/cZ5F/dLfL890LC254WGW8k/1+92sOC9n5C6M+eknes
v0XOYwv9j/Wa/2CQReJhLulvuAXr+ZeXk/+NtMjzjEUUb8ZY5HkX4Q+2Vj1y
xlvk+dUCwp/JFqxHxn1L+BIov8dF1FMF/wy1YL/1lojfwj7DLTg/Mkj0TwT+
RluwX1VPzMMIfcZasJ6VfY7wNtGC89R5ZbQ+rQX/39CmNcQnDBYZr2zEJywW
PE9y5Ws/yS/TLHJ+sIj4RLpFnkcQ+hN8wmrB+VRIp3gyzyLxWeCZyD8W/n/7
K/5d0hILvEnmfKgjXuZbZD1X8GHBt1ZaMN79KOovV848e19kkfPndfbx/wBZ
+Zaa
        "]]}}, {}, {}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"Time\"", TraditionalForm], 
      FormBox["\"Phase\"", TraditionalForm]},
    AxesOrigin->{0, -62.72102031695},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Medium,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"Phase(Time) dependency\"", TraditionalForm],
    PlotRange->{{0, 313.5620000915369}, {-64.366600037, -62.799381256}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.0055000000000000005`], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1: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
tpxLyZ1k2F8AW92OLX2b4+0eH5Jv+N9mzP8U3KlXYK/46Y3nOF/06Cf6F/25
BrZVzZ1r/5f7XLiptMoNrHrjC1Z9CgLb2ltXRnJ8ba+9fwbXZ9ScfJn2kmSX
DPoTPVjL8aIHG2k/FFy6A6z6cACs+lDF/NsqOi4Y/DPzXbo38ibny/n6Yzzi
y/voMbCe70FgPW/B4KQm2/HxBv/FGP8K/cn5e492yb+Q9lD5PgN36hW4U684
X/JvAHfqlbGebjO7rqcHuPN9abA/x0u+o2mffmZSDO2jbr2RDNb3WxpY32tv
cv4eJ7s8cP3Nha7FYNWL/Ry/Kn72V2DVjzOMJ+e/Eaznv53x5T30QAL8iR70
AtevHFLrA9b3yXCw6sFYsOrBDLBtc92UOfQv5/1VY/5mxovecXQ3/WX7O5TT
Lvp0gvPlvXbJyO9XI/5dsL5nHnqhK/cB128va/cDqx48R7Zc3T4ZrOc/EWzz
KnRfBNb3xSraRQ9yGE/O/xawvg8+Zrx7lV42zo8a4F/N8fL+qSfLeb7K/OR+
75YIf3Jeehjcz2B/g8PBqg/RYD1fL4H1fC/mfDkvmZwv9/cuY/5BY/4xcOf3
E+cXBSb+Atbvo1uGf8cXu7I7WM/XYLKcnxCw3p9RZDkvM8F6XubTv3wfrAR7
Jaya9w5Y3/8f0j7k2xN7OF/u13LmI/fbt5wv7/da2uX8tIL1frsLrl/uZPeH
pPtcUrXQ9WFw4ZUt7o8a3BecOspu8ACwxXJj2hBw9aT42UGGPRRsS1+3IBJc
f3Pp4ZlGvFngofvyI+aDr/oOSlhi8Arw+orWlas5P3Hf5nWM77XjaB7HL3Q8
v8ngYrA1P6RuN9glzt+hlPm6D/AvJx+NWFcJTgo5X3yC889vqjzLel5uv3uJ
+SascWuiv7F7I1tpd/gotYP1Lk7Jvcv8e9/Z+eBLiD838dBD4LBS2/FHwPVT
slr6gFNdV/TyNfhp8NA1zn7PgKu9z0x6DjzV6dYb48BXtx/eMpn5NFUtTaZ9
4PTGV8DWlvFOaRwfvMdjuRH/TbDL3tDA/+F6bheNfQ9cmBqY+AHnBwxesxVs
6/Aq2QUu8Yg5sI/rz22qPgT2sl/WXMHxcn6+oX/p1zPMr+Zo1EXGk/5v5Hqb
PbNa6D+rcVs71yPn4zZY+/OBZIz3t1icwNqfvcAl7R0DPcCpKdnhPmDt16fA
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
fqKf3RZhfaIvDmDVFxew6sdjYP3zqH5g/T1kEP3J/TQMrOdjBFj1dTRY9WEC
WOszjfGkHjPBnb9PgTu/bzlf7pd0sP7esJL5yv3yFsfL/f2Osb58sH5PbeZ8
6Y9tXJ+8T//FfOT74FOw/j50mPWVfjlKu96/zFfvX3Dn/ct8pB8ug/V9foX1
kfNxA+ywp3d3+9T73HtIzck/gi8UL7j8UGrX8a7gkshaHzfw1Maise7ggf7d
Yz3BccElad6MtzdinS/4wHiHPU+CMw5vqnwavONoZMMw8MaINW5B5IL8iBDG
T1i3IBRcfX3KuxH0n9drbyR4qMOOo1HgJJfpjVPA63tbLNPBz5ZWesWBrfmh
gQmsz+aW6CSwS1xg4mzwjTfmzk1hvmtcVy9gvt7ni1NZr+4xB9LBti1uNRlG
fVZyP5Kd7DIZ329v5Drmnz3KMQecktvsmweuigoI2EAuCk/aZNRzC9hiubOz
mPVt9r64nfUJ9XfYw/1a6OxXQq70iC+l/xNVSw+Any+7sr2c+9Ga0WxjPTp8
7L821nPM6Idv2W+emfmnGG9S4qFzxv7XgL2yLt+uZX3fzev9A/dzYFzwT6zX
0kPjfwGnuq6a9x+j/38z9vsa17dhXvktY7/vsb69drXZLb7Peh7+AK5f7hLX
A2ydd8DzEXBJ2uyQx8C6v33AqaPsM/uBtX5PgLV+g8B6nvzAOzbZjvuDtZ6B
4KunxzuNYH5yfp7jeqQfRoO1H8aRpV4TwD9Hl1ZNBg8NGFIbA04JuXgzluv3
iHWeyfVLv79orHcW40m/v2ysdz7YIVbkGfxsYln7EtpFPzPAXhc7Bq4Ehzme
mWQFqz68xXq333xjLVj/eYd3wBcy5D1p1OcD5it6+g+y9M9Wox7bmX9dVNBu
7o/taNTHYJfV5en7jfp8xv3w9dv3OfOT++RLsOppJfdb9KDKWP8JsJ6Xau5v
rVfJWWO/Lxj7fcno/wbGk/uiifWtSktpZvydrStbwYVj921u43pFLzrYzytD
6m4a67vH/vLa42GXhvzK5YSB9b50BGu/O4P1n/dwBT/vdO+sB1j/ORAvspwH
H7Dq5UCwV8lCVz+w6oE/WOsRSH/VnlnBYNX7UWBdfzj9i16OBateTgCrXk4G
12/bsDCG9ZD7MJb1kH6OZ/zBq22JYN3/ZLDeBy+z3nIfzAfHOQ9KWAQOW5eS
u4T1bVh6+DWw9u8K+pub7GLleuU8v0V/cp7XGut7h/nL+V1vrOd9Y782gvU8
FjO+9Pc/jfXtBmt/f8x8AuNn7+f+in5/xv3V8wpWPfuS+yt6XQl2sRvgXwVe
2zIp+YSxf9Wsp9zfZ43+vcD+kPdKLevlYze4gf0yrW5KE/2LPjcb+9fKfBY0
bmtjPxzffKWD+3lzea9bxnm8Z+yX3ZL7rPtlD9b72RHsFZ/U5AzW/usJvnq3
2vtRsJ63x8F6//ZlPDlfg8Cqt37gofsKCvwZLz2nIhD8fFBWSzDjy/49B9bz
N5osejsOXOg+eM0EsOrPZLDqSwxY35+xYO3PeLDq74uMJ/s5iyx6+7Kxvvn0
L++JRcxH3hNL6F/elxlkeU+sBOt7wgrW++QtsH5/rOX6U4NL3wHrfbme/uS9
lQ++cLL97sb7/H8Lzvsr
        "]]}}, {}, {}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"Time\"", TraditionalForm], 
      FormBox["\"Phase SD\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Medium,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox[
     "\"Phase Standart Deviation(Time) dependency\"", TraditionalForm],
    PlotRange->{{0, 313.5620000915369}, {-1., 1.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.720502221330845*^9, 3.720504221671504*^9, 3.720504318668083*^9, 
   3.720504363729335*^9, 3.7205044261626215`*^9, 3.720591289633173*^9, {
   3.7205913586058683`*^9, 3.7205913864203377`*^9}, 3.7205918004594374`*^9, 
   3.7205927440049396`*^9, 3.7271725297148733`*^9, 3.7271728552984104`*^9, 
   3.7271732620957336`*^9, 3.72717336918375*^9, 3.7271735708143682`*^9, 
   3.7271736499642715`*^9, 3.7271737643828845`*^9, 3.72717428468865*^9, 
   3.7271745676947002`*^9, 3.7271763404539337`*^9, 3.727176695282753*^9, 
   3.727176803235225*^9, 3.7271773459433174`*^9, 3.7271773994251685`*^9, 
   3.7379090915665092`*^9, 3.737909696968449*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Temperature", "[", 
     RowBox[{"i_", ",", "Fres_", ",", " ", "F0_"}], "]"}], " ", ":=", " ", 
    RowBox[{"N", "[", 
     FractionBox[
      RowBox[{"(", 
       RowBox[{"Fres", "-", "F0"}], ")"}], 
      RowBox[{"Kprt", "[", 
       RowBox[{"[", "i", "]"}], "]"}]], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Evaluating", " ", "temperature", " ", "for", " ", "resonance", " ", "i"}],
    " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"paraboloid", "[", 
     RowBox[{"y0_", ",", "A_", ",", "\[Mu]_", ",", "x_"}], "]"}], " ", ":=", 
    " ", 
    RowBox[{"y0", " ", "+", " ", 
     RowBox[{"A", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}]}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Parabola", " ", "function"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gaussian", "[", 
     RowBox[{
     "y0_", ",", "A_", ",", "\[Mu]_", ",", " ", "\[Sigma]_", ",", " ", "x_"}],
      "]"}], " ", ":=", " ", 
    RowBox[{"y0", " ", "+", " ", 
     RowBox[{
      FractionBox["A", 
       RowBox[{"\[Sigma]", " ", 
        RowBox[{"Sqrt", "[", 
         FractionBox["Pi", "2"], "]"}]}]], "\[Times]", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "2"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}], 
        SuperscriptBox["\[Sigma]", "2"]], "]"}]}]}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Gauss", " ", "function"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"lorenz", "[", 
     RowBox[{
     "y0_", ",", "A_", ",", "\[Mu]_", ",", " ", "\[Sigma]_", ",", " ", "x_"}],
      "]"}], ":=", 
    RowBox[{"y0", " ", "+", " ", 
     RowBox[{
      FractionBox[
       RowBox[{"2", "A"}], "Pi"], "\[Times]", 
      FractionBox["\[Sigma]", 
       RowBox[{
        RowBox[{"4", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}], "+", 
        SuperscriptBox["\[Sigma]", "2"]}]]}]}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Lorenz", " ", "function"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"linear", "[", 
     RowBox[{"A_", ",", "B_", ",", "x_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"A", " ", "x"}], "+", "B"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"linear", " ", "function"}], " ", 
   "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7158486740700426`*^9, 3.71584873387307*^9}, {
  3.7158487735482664`*^9, 3.7158487738894963`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fileNumber", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KineticsMinAll", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Calculationg", " ", "fast", " ", "but", " ", "just", " ", "searching", 
      " ", "for", " ", "a", " ", "phase", " ", "min"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Rounds", "=", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Data", "[", 
         RowBox[{"[", 
          RowBox[{"InvervalNumber", ",", "All", ",", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{
              RowBox[{"DataNames", "[", 
               RowBox[{"[", "fileNumber", "]"}], "]"}], ",", 
              "roundColumnName"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}], "]"}]}], 
      ";", 
      RowBox[{"(*", " ", 
       RowBox[{"Getting", " ", "all", " ", "rounds"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"DataRounds", ",", 
        RowBox[{"Length", "[", "Rounds", "]"}]}], "]"}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Saving", " ", "rounds", " ", "ammount", " ", "for", " ", "every", " ",
         "dataset"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"KineticsMin", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"(*", " ", 
         RowBox[{"For", " ", "every", " ", "round"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"RoundData", "=", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"Data", "[", 
              RowBox[{"[", "InvervalNumber", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"Position", "[", 
                   RowBox[{
                    RowBox[{"DataNames", "[", 
                    RowBox[{"[", "fileNumber", "]"}], "]"}], ",", 
                    "roundColumnName"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], 
               "\[Equal]", 
               RowBox[{"Rounds", "[", 
                RowBox[{"[", "RoundNumber", "]"}], "]"}]}], "&"}]}], "]"}]}], 
          ";", 
          RowBox[{"(*", " ", 
           RowBox[{"Getting", " ", "round", " ", "data"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"MinPhase", "=", 
           RowBox[{"Min", "[", 
            RowBox[{"RoundData", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", 
               RowBox[{
                RowBox[{"Position", "[", 
                 RowBox[{
                  RowBox[{"DataNames", "[", 
                   RowBox[{"[", "fileNumber", "]"}], "]"}], ",", 
                  "phaseColumnName"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}], 
            "]"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{"Getting", " ", "phase", " ", "minimum"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"MinPhasePosition", "=", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{
              RowBox[{"RoundData", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{
                  RowBox[{"Position", "[", 
                   RowBox[{
                    RowBox[{"DataNames", "[", 
                    RowBox[{"[", "fileNumber", "]"}], "]"}], ",", 
                    "phaseColumnName"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}], ",",
               "MinPhase"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{"Getting", " ", "position"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"ResonanceFrequency", "=", 
           RowBox[{
            RowBox[{"RoundData", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", 
               RowBox[{
                RowBox[{"Position", "[", 
                 RowBox[{
                  RowBox[{"DataNames", "[", 
                   RowBox[{"[", "fileNumber", "]"}], "]"}], ",", 
                  "frequencyColumnName"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}], "[", 
            RowBox[{"[", "MinPhasePosition", "]"}], "]"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{"Getting", " ", "frequency"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"ResonanceTime", "=", 
           RowBox[{
            RowBox[{"RoundData", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", 
               RowBox[{
                RowBox[{"Position", "[", 
                 RowBox[{
                  RowBox[{"DataNames", "[", 
                   RowBox[{"[", "fileNumber", "]"}], "]"}], ",", 
                  "timeColumnName"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}], "[", 
            RowBox[{"[", "MinPhasePosition", "]"}], "]"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{"Getting", " ", "time"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"ResonanceTime", ",", "ResonanceFrequency"}], "}"}]}], 
         RowBox[{"(*", " ", 
          RowBox[{"Exporting", " ", "calculated", " ", "point"}], " ", "*)"}],
          "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"RoundNumber", ",", 
           RowBox[{
            RowBox[{"DataRounds", "[", 
             RowBox[{"[", "InvervalNumber", "]"}], "]"}], "-", "1"}]}], 
          "}"}]}], 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "Last", " ", "round", " ", "can", " ", "be", " ", "not", " ", 
           "full"}], ",", " ", 
          RowBox[{
           RowBox[{"let", "'"}], "s", " ", "ignore", " ", "it"}]}], " ", 
         "*)"}], "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"KineticsMin", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], "=", 
       RowBox[{"Temperature", "[", 
        RowBox[{"InvervalNumber", ",", 
         RowBox[{"KineticsMin", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"KineticsMin", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "]"}]}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Calculating", " ", "temperature", " ", "from", " ", "frequency"}], 
       " ", "*)"}], "\[IndentingNewLine]", "KineticsMin"}], 
     RowBox[{"(*", " ", 
      RowBox[{"Exporting", " ", "calculated", " ", "kinetics"}], " ", "*)"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"InvervalNumber", ",", 
       RowBox[{"Length", "[", "Data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7158487762011294`*^9, 3.715848819526165*^9}, {
   3.715848918309206*^9, 3.7158489523480597`*^9}, {3.7158489934589877`*^9, 
   3.7158489988949585`*^9}, {3.7158503193051214`*^9, 
   3.7158503587076287`*^9}, {3.715850409998585*^9, 3.7158504191526127`*^9}, {
   3.715850803290842*^9, 3.7158508876812544`*^9}, {3.715851147406446*^9, 
   3.7158512606443186`*^9}, {3.715851348270854*^9, 3.7158513538468156`*^9}, {
   3.7205023438382998`*^9, 3.720502344627858*^9}, {3.720504174043996*^9, 
   3.720504212629594*^9}, {3.7205917185937724`*^9, 3.7205917747449665`*^9}, {
   3.7271725734578695`*^9, 3.72717257348689*^9}, {3.7271731520208225`*^9, 
   3.7271731538811245`*^9}, {3.7271733355549917`*^9, 3.727173340169789*^9}, {
   3.7271734948044643`*^9, 3.727173504701393*^9}, {3.7271737096528606`*^9, 
   3.727173728122331*^9}, {3.72717380096381*^9, 3.727173803748721*^9}, {
   3.7271748932124434`*^9, 3.727174901097257*^9}, {3.727176536735628*^9, 
   3.7271765998339396`*^9}, {3.727176656234229*^9, 3.727176664042792*^9}, {
   3.727177006377581*^9, 3.7271770174864464`*^9}, {3.7271772847141447`*^9, 
   3.727177289991975*^9}, 3.727177377620722*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MinKineticsPlt", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"KineticsMinAll", ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
    RowBox[{"Joined", "->", "False"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
    RowBox[{"Filling", "\[Rule]", "Axis"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Time\>\"", ",", "\"\<Temperature\>\""}], "}"}]}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Temperature from time calculating phase minimum\>\""}]}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Plotting", " ", "kinetics", " ", "min", " ", "without", " ", "fitting"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.715850385535601*^9, 3.7158503876243067`*^9}, 
   3.715850460594846*^9, {3.7158511194735637`*^9, 3.7158511437355733`*^9}, {
   3.7158513173472843`*^9, 3.7158513244160824`*^9}, {3.720502547151202*^9, 
   3.7205025679419427`*^9}, {3.720504058282076*^9, 3.720504097868225*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDIA2IQzcCQJHBdWcCBAQ6+rZjtouFwf8+sijATI3uGhqcT
Dn01dvjn2HaKL3i6PQODn9IGIRsHruuLC2y5gPwDvk4JXx0d5ppdyGSeuwwo
X+/Fw+TmIJ5zUCznIJDfcGDVx01eCD5D0Iy8RX4OrDWfsx5FbrRncIhb9TEq
0EEQDID8hteOCanBDudWd6a7KoP4OdcXJ4RC9W8D2jef63p2uIOvjbYU5w8g
X2FDkkBFJEI+QcDjYVO0Q9RFjwPm60HqP7+t6Y91uMJmlbvgMkh9TH1WT7zD
zcRXRb+b9wDVW19ffCbBIUHn59FJ8UC+waapzpcTHWSOFwIRkL/hRJ7Q4ySE
+QsKTONeJSPM2/Dx1MKfKQj3Ktz+eIkxDcEv2Dc9jysd4T8Ghh/BwhkIvoNp
GJ9sJoIPMl8vy0GZERQDwPBSMGRgsMhG8C+UbfvsmIMI7w1FCU99chHha3BX
JioiDyEvsEZkXXI+Qn6Gc7uYeYHDhIWbDl95CuR7bHu/fE8BQv2MIzJRToUI
+2bk8emeKITG93J7hh8aEZZ+RQj1IP1XihDmQdMPPDlB0w8ifUHSD5wLTT8I
eUj6QeiHpB+EPCT9wLnQ9INQD0k/CD4k/SDsg6QfOB+afuB8aPpBqIekH4R6
SPpBqIekHzgfmn7gfGj6gfOh6QchD0k/CPMh6QfOh6YfBgQApx84D5p+UMwH
ph+EeZD0A+dD0w/Cfkj6Qbgfkn7gfGj6gfOh6QfOh6YfhDwk/SD4kPSDcD0k
/aDov4LEHy2PRssjKpZHAH4kQeM=
    "], {{{}, {}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], LineBox[{38, 2}],
        LineBox[{39, 3}], LineBox[{40, 4}], LineBox[{41, 5}], 
       LineBox[{42, 6}], LineBox[{43, 7}], LineBox[{44, 8}], LineBox[{45, 9}],
        LineBox[{46, 10}], LineBox[{47, 11}], LineBox[{48, 12}], 
       LineBox[{49, 13}], LineBox[{50, 14}], LineBox[{51, 15}], 
       LineBox[{52, 16}], LineBox[{53, 17}], LineBox[{54, 18}], 
       LineBox[{55, 19}], LineBox[{56, 20}], LineBox[{57, 21}], 
       LineBox[{58, 22}], LineBox[{59, 23}], LineBox[{60, 24}], 
       LineBox[{61, 25}], LineBox[{62, 26}], LineBox[{63, 27}], 
       LineBox[{64, 28}], LineBox[{65, 29}], LineBox[{66, 30}], 
       LineBox[{67, 31}], LineBox[{68, 32}], LineBox[{69, 33}], 
       LineBox[{70, 34}], LineBox[{71, 35}], LineBox[{72, 36}], 
       LineBox[{73, 37}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       PointBox[{74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 
        89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 
        105, 106, 107, 108, 109, 110}]}, {}}}], {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Time\"", TraditionalForm], 
    FormBox["\"Temperature\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Temperature from time calculating phase minimum\"", TraditionalForm],
  PlotRange->{{0, 301.2910000915872}, {0, 0.11138888888888888`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7271774207192645`*^9, 3.737909092735361*^9, 
  3.737909697525711*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "KineticsMinAll", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", 
    RowBox[{"PrependTo", "[", 
     RowBox[{
      RowBox[{"KineticsMinAll", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"DataOrigins", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "<>", "\"\< Time\>\""}], ",", 
        RowBox[{
         RowBox[{"DataOrigins", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "<>", "\"\< Temperature\>\""}]}], 
       "}"}]}], "]"}]}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Adding", " ", "headers", " ", "for", " ", "columns"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"KineticsMinAll", " ", "=", " ", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"KineticsMinAll", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "KineticsMinAll", "]"}]}], "}"}]}], "]"}]}], 
   ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Transposing", " ", "for", " ", "joining"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tmp", "=", 
    RowBox[{"KineticsMinAll", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Join", " ", "starting", " ", "point"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "2"}], ",", 
     RowBox[{"i", "\[LessEqual]", 
      RowBox[{"Length", "[", "KineticsMinAll", "]"}]}], ",", 
     RowBox[{"i", "++"}], ",", 
     RowBox[{"tmp", "=", 
      RowBox[{"tmp", "~", "Join", "~", 
       RowBox[{"KineticsMinAll", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}]}]}], "]"}], ";"}], 
  RowBox[{"(*", " ", "Joining", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"KineticsMinAll", "=", "tmp"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Saving", " ", "joined", " ", "result"}], " ", 
   "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.720504460770048*^9, 3.7205045278821115`*^9}, {
  3.7205045598974204`*^9, 3.7205045601726584`*^9}, {3.720504609770506*^9, 
  3.720504669183258*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "exportDir", ",", 
        "\"\<KineticsMinAll.png\>\""}], "}"}], "]"}], ",", "MinKineticsPlt"}],
     "]"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Exporting", " ", "plot"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "exportDir", ",", 
        "\"\<KineticsMinAll.xlsx\>\""}], "}"}], "]"}], ",", 
     "KineticsMinAll"}], "]"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Exporting", " ", "calculated", " ", "data"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KineticsMinAll", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], ",", "exportDir", ",", 
         "\"\<KineticsMinAll.xlsx\>\""}], "}"}], "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "exportDir", ",", 
        "\"\<KineticsMinAll.xlsx\>\""}], "}"}], "]"}], ",", 
     "KineticsMinAll"}], "]"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Exporting", " ", "calculated", " ", "data", " ", "in", " ", "a", " ", 
    "normal", " ", "format"}], " ", "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7205040515963497`*^9, 3.720504054624488*^9}, 
   3.7205046025573797`*^9, {3.720504671809866*^9, 3.7205046909628115`*^9}, 
   3.7271738924037104`*^9, {3.7271742312296066`*^9, 3.727174271049771*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fileNumber", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KineticsFitAll", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"KineticsFit", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"RoundDataRaw", "=", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"Data", "[", 
              RowBox[{"[", "IntervalNumber", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"Position", "[", 
                   RowBox[{
                    RowBox[{"DataNames", "[", 
                    RowBox[{"[", "fileNumber", "]"}], "]"}], ",", 
                    "roundColumnName"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], 
               "\[Equal]", 
               RowBox[{"Rounds", "[", 
                RowBox[{"[", "RoundNumber", "]"}], "]"}]}], "&"}]}], "]"}]}], 
          ";", 
          RowBox[{"(*", " ", 
           RowBox[{"Getting", " ", "row", " ", "round", " ", "data"}], " ", 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"RoundData", "=", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"(*", " ", 
              RowBox[{"Getting", " ", "Phase", 
               RowBox[{"(", "Frequency", ")"}], " ", "dependency"}], " ", 
              "*)"}], "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"RoundDataRaw", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{
                  RowBox[{"Position", "[", 
                   RowBox[{
                    RowBox[{"DataNames", "[", 
                    RowBox[{"[", "fileNumber", "]"}], "]"}], ",", 
                    "frequencyColumnName"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}], ",",
               "\[IndentingNewLine]", 
              RowBox[{"RoundDataRaw", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{
                  RowBox[{"Position", "[", 
                   RowBox[{
                    RowBox[{"DataNames", "[", 
                    RowBox[{"[", "fileNumber", "]"}], "]"}], ",", 
                    "phaseColumnName"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"PhaseMin", "=", 
           RowBox[{"Min", "[", 
            RowBox[{"RoundData", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{"Getting", " ", "phase", " ", "minimum"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "PhaseMin", "]"}], ">", "0"}], ",", 
            RowBox[{"PhaseMin", "=", 
             RowBox[{"PhaseMin", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{"Just", " ", "in", " ", "case"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"PhaseMax", "=", 
           RowBox[{"Max", "[", 
            RowBox[{"RoundData", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{"Getting", " ", "phase", " ", "maximum"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "PhaseMax", "]"}], ">", "0"}], ",", 
            RowBox[{"PhaseMax", "=", 
             RowBox[{"PhaseMax", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{"Just", " ", "in", " ", "case"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"\[Sigma]0", " ", "=", " ", 
           RowBox[{"Length", "[", 
            RowBox[{"Select", "[", 
             RowBox[{"RoundData", ",", 
              RowBox[{
               RowBox[{"PhaseMin", "\[LessEqual]", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "\[LessEqual]", 
                RowBox[{"PhaseMin", "+", 
                 FractionBox[
                  RowBox[{"PhaseMax", "-", "PhaseMin"}], "2"]}]}], "&"}]}], 
             "]"}], "]"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{"For", " ", "first", " ", "approximation"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"Parabolic", " ", "fit"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"ParabolicPart", " ", "=", " ", "0.75"}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"Part", " ", "from", " ", "Min", " ", "to", " ", "Max"}], 
            "-", "Min"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"RoundDataParaboloid", " ", "=", 
           RowBox[{"Select", "[", 
            RowBox[{"RoundData", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"PhaseMin", "\[LessEqual]", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "\[LessEqual]", 
                RowBox[{"PhaseMin", "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"PhaseMax", "-", "PhaseMin"}], ")"}], "\[Times]", 
                  "ParabolicPart"}]}]}], ")"}], "&"}]}], "]"}]}], " ", ";", 
          "\[IndentingNewLine]", 
          RowBox[{"nlmRoundParaboloid", " ", "=", " ", 
           RowBox[{"NonlinearModelFit", "[", "\[IndentingNewLine]", 
            RowBox[{"RoundDataParaboloid", ",", 
             RowBox[{"paraboloid", "[", 
              RowBox[{"y0", ",", "A", ",", "\[Mu]", ",", "t"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"y0", ",", 
                 RowBox[{"Max", "[", 
                  RowBox[{"RoundDataParaboloid", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "}"}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"A", ",", 
                 RowBox[{
                  RowBox[{"RoundDataParaboloid", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Ordering", "[", 
                    RowBox[{
                    RowBox[{"RoundDataParaboloid", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], ",", "1"}], 
                    "]"}], ",", " ", "2"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"\[Mu]", ",", 
                 RowBox[{
                  RowBox[{"RoundDataParaboloid", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Ordering", "[", 
                    RowBox[{
                    RowBox[{"RoundDataParaboloid", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], ",", "1"}], 
                    "]"}], ",", " ", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
             "\[IndentingNewLine]", "t"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"parametersTableRoundParaboloid", " ", "=", " ", 
           RowBox[{
           "nlmRoundParaboloid", "[", "\"\<ParameterTable\>\"", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"FresParaboloid", " ", "=", " ", 
           RowBox[{"parametersTableRoundParaboloid", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1", ",", "4", ",", "2"}], "]"}], "]"}]}], ";",
           "\[IndentingNewLine]", 
          RowBox[{"\[Delta]FresParaboloid", "=", 
           RowBox[{"100", "\[Times]", 
            RowBox[{"Abs", "[", 
             FractionBox[
              RowBox[{"parametersTableRoundParaboloid", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1", ",", "4", ",", "3"}], "]"}], "]"}], 
              RowBox[{"parametersTableRoundParaboloid", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1", ",", "4", ",", "2"}], "]"}], "]"}]], 
             "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"FfirstParaboloid", " ", "=", " ", 
           RowBox[{"Switch", "[", 
            RowBox[{
             RowBox[{"RoundNumber", "\[Equal]", "1"}], ",", "True", ",", 
             "FresParaboloid", ",", "False", ",", " ", "FfirstParaboloid"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"TempParaboloid", " ", "=", " ", 
           RowBox[{"Temperature", "[", 
            RowBox[{
            "IntervalNumber", ",", "FresParaboloid", ",", 
             "FfirstParaboloid"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"exportRounds", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"RoundPlt", " ", "=", 
              RowBox[{"Show", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"ListPlot", "[", "RoundData", "]"}], ",", 
                 RowBox[{"Plot", "[", 
                  RowBox[{
                   RowBox[{"paraboloid", "[", 
                    RowBox[{
                    RowBox[{"parametersTableRoundParaboloid", " ", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1", ",", "2", ",", "2"}], "]"}], "]"}],
                     ",", 
                    RowBox[{"parametersTableRoundParaboloid", " ", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1", ",", "3", ",", "2"}], "]"}], "]"}],
                     ",", 
                    RowBox[{"parametersTableRoundParaboloid", " ", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1", ",", "4", ",", "2"}], "]"}], "]"}],
                     ",", "t"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"t", ",", 
                    RowBox[{"RoundDataParaboloid", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"RoundDataParaboloid", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], "}"}], 
                   ",", 
                   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
                   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
                   RowBox[{"ColorFunction", "\[Rule]", 
                    RowBox[{"Function", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y"}], "}"}], ",", "Red"}], "]"}]}]}], 
                  "]"}]}], "}"}], "]"}]}], ";", 
             RowBox[{"Export", "[", 
              RowBox[{
               RowBox[{"FileNameJoin", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"NotebookDirectory", "[", "]"}], ",", 
                  "exportRoundDir", ",", 
                  RowBox[{"\"\<File \>\"", "<>", 
                   RowBox[{"ToString", "[", "fileNumber", "]"}], "<>", 
                   "\"\<, Interval \>\"", "<>", 
                   RowBox[{"ToString", "[", "IntervalNumber", "]"}], "<>", 
                   "\"\<, Round \>\"", "<>", 
                   RowBox[{"ToString", "[", "RoundNumber", "]"}], "<>", 
                   "\"\<.png\>\""}]}], "}"}], "]"}], ",", "RoundPlt"}], "]"}],
              ";"}], "\[IndentingNewLine]", ",", "False"}], "]"}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{
           "Exporting", " ", "plot", " ", "for", " ", "every", " ", "round"}],
            " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"FrequencyTimeData", "=", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"(*", " ", 
              RowBox[{"Getting", " ", "Time", 
               RowBox[{"(", "Frequency", ")"}], " ", "dependency"}], " ", 
              "*)"}], "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"RoundDataRaw", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{
                  RowBox[{"Position", "[", 
                   RowBox[{
                    RowBox[{"DataNames", "[", 
                    RowBox[{"[", "fileNumber", "]"}], "]"}], ",", 
                    "frequencyColumnName"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}], ",",
               "\[IndentingNewLine]", 
              RowBox[{"RoundDataRaw", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{
                  RowBox[{"Position", "[", 
                   RowBox[{
                    RowBox[{"DataNames", "[", 
                    RowBox[{"[", "fileNumber", "]"}], "]"}], ",", 
                    "timeColumnName"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"nlmFrequencyTime", "=", " ", 
           RowBox[{"NonlinearModelFit", "[", 
            RowBox[{"FrequencyTimeData", ",", 
             RowBox[{"linear", "[", 
              RowBox[{"A", ",", "B", ",", "x"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"A", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"B", ",", "1"}], "}"}]}], "}"}], ",", "x"}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"parametersTableFrequencyTime", "=", " ", 
           RowBox[{"nlmFrequencyTime", "[", "\"\<ParameterTable\>\"", "]"}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{"TimeParaboloid", " ", "=", " ", 
           RowBox[{"linear", "[", 
            RowBox[{
             RowBox[{"parametersTableFrequencyTime", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1", ",", "2", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"parametersTableFrequencyTime", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1", ",", "3", ",", "2"}], "]"}], "]"}], ",",
              "FresParaboloid"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"TimeParaboloid", ",", "TempParaboloid"}], "}"}]}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"RoundNumber", ",", 
           RowBox[{
            RowBox[{"DataRounds", "[", 
             RowBox[{"[", "IntervalNumber", "]"}], "]"}], "-", "1"}]}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", "KineticsFit"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"IntervalNumber", ",", 
       RowBox[{"Length", "[", "Data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7205937318234444`*^9, 3.7205938212406054`*^9}, {
   3.720594136090414*^9, 3.72059413668417*^9}, {3.720594239539283*^9, 
   3.7205942960115585`*^9}, {3.7205947026327934`*^9, 
   3.7205947228285484`*^9}, {3.720594785781459*^9, 3.720594821365737*^9}, {
   3.7205949311366954`*^9, 3.7205949484334316`*^9}, {3.720595030877321*^9, 
   3.7205950505145497`*^9}, {3.7205952761661325`*^9, 3.720595311157156*^9}, {
   3.720595352851832*^9, 3.720595445546462*^9}, {3.72059551118438*^9, 
   3.7205955458372307`*^9}, {3.7205956542693777`*^9, 3.720595674970434*^9}, {
   3.7205957885016003`*^9, 3.720595832563607*^9}, {3.7205958814757357`*^9, 
   3.7205959125412273`*^9}, {3.7205959706507444`*^9, 3.72059597624514*^9}, {
   3.720596162566491*^9, 3.720596214515934*^9}, {3.7271744899026175`*^9, 
   3.7271745354870067`*^9}, 3.7271746240338583`*^9, {3.7271747613024125`*^9, 
   3.727174829319399*^9}, 3.7271748648824162`*^9, {3.7271749091318398`*^9, 
   3.7271749720447445`*^9}, {3.72717561481936*^9, 3.7271756155668883`*^9}, {
   3.727175657267587*^9, 3.727175760980527*^9}, 3.727175888755396*^9, 
   3.727175929831362*^9, {3.7271759771289434`*^9, 3.7271759793961487`*^9}, {
   3.7271760382979584`*^9, 3.727176042905216*^9}, {3.727176112668107*^9, 
   3.727176258756256*^9}, {3.727176303692686*^9, 3.7271763206931367`*^9}, {
   3.727176375056202*^9, 3.7271763939704905`*^9}, {3.7271768950186195`*^9, 
   3.727176959688985*^9}, 3.72717730364902*^9, 3.727177383518402*^9, 
   3.737909684210891*^9, 3.737909726863188*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FitKineticsPlt", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"KineticsFitAll", ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
    RowBox[{"Joined", "->", "False"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
    RowBox[{"Filling", "\[Rule]", "Axis"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Time\>\"", ",", "\"\<Temperature\>\""}], "}"}]}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Temperature from time calculating parabolic fit\>\""}]}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Plotting", " ", "kinetics", " ", "min", " ", "with", " ", "parabolic", 
    " ", "fit"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7271771257377977`*^9, 3.727177154202129*^9}, {
  3.727177203483931*^9, 3.72717720641*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJzt1P9PDHAcx/GS1aKI9GUpVlm+VsrVype93w7N3Xy5Smu09OVEdX0fSyhf
WhljqNYPfdH05eq6K0fo+qYsfVGxlXYRlcJ2ydwPhmMIm9d/4Eef7b3Pnr8/
9nKOTg6KmWNkZJT0+/78fVm9dsUZVmz093XN+TizVriKkz7ZFWWUnCaTZSu/
SxYLeKj7jZleVUBxA1p9wYLNvPxExtnawDKqEV10mJ4rZPeIq67lblUk3OIZ
MmkSwDUfMnsefFTQwwi13ksp5ti2SPNS/zryyFKKt9bv4dePLE90vFATCQPa
JsMCecBsXd+e8ts0ciDFECwNZpH/0GJbTQNJzB5PtcpC2GRfjld7wx1asfDC
5I/UUB7s1BkiIu9R+0RVUcXx/exdKiorj9LQ/LifoY65YXzJ3L4j/XIjsfpa
489L4bx+5kpxYXIT2VQu8y0ojOB4L8evqnvN1DcucHo5GMl+u8otrFubqUfp
Vhc0EsX5szfyyk61UEWrpqB/KppjWlwctKMasuteNC/ng5TTv+U1mWrukk+H
9SYnwyHeFXb7pMDnDl3df8Yp0Pgwd56VrBaFN1BxpsC1zuII9/YsbXy98xbt
eKQNl9rHsnw2jkJMb1Lt9rVPjJ3jWCqzd3ZwVdP1Y/b329bFszZ/idLjk4rO
HfLxfOYr441im+HPNioSTdvGFwoTWCB7WplToqDcRBurg7sT+bSpYaNBraDs
/pCxL6FJLH4/pH83WUuyIkHSGmky6xIC5DpHJX1+bjfP0i+FJW/1414T1bRB
GayTt6Vw5VFxYPqrahqdSakf2JbKXb7eY4lqOUU2n5e396aypLTbJcpRQS7i
68Pue9NYbauaevOtmrI426JQm8bZ1oZjDfuqCH7gCX7Q8IOGHzT8oOEHDT9o
+EHDDxp+0PCDhh80/KDhBw0/aPhBww8aftDwg4YfNPyg4QcNP2j4QcMPGn7Q
8IOGHzT8oOEHDT9o+EHDDxp+0PCDhh/0/z36v0f/co9+AT4knpg=
    "], {{{}, {}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], LineBox[{38, 2}],
        LineBox[{39, 3}], LineBox[{40, 4}], LineBox[{41, 5}], 
       LineBox[{42, 6}], LineBox[{43, 7}], LineBox[{44, 8}], LineBox[{45, 9}],
        LineBox[{46, 10}], LineBox[{47, 11}], LineBox[{48, 12}], 
       LineBox[{49, 13}], LineBox[{50, 14}], LineBox[{51, 15}], 
       LineBox[{52, 16}], LineBox[{53, 17}], LineBox[{54, 18}], 
       LineBox[{55, 19}], LineBox[{56, 20}], LineBox[{57, 21}], 
       LineBox[{58, 22}], LineBox[{59, 23}], LineBox[{60, 24}], 
       LineBox[{61, 25}], LineBox[{62, 26}], LineBox[{63, 27}], 
       LineBox[{64, 28}], LineBox[{65, 29}], LineBox[{66, 30}], 
       LineBox[{67, 31}], LineBox[{68, 32}], LineBox[{69, 33}], 
       LineBox[{70, 34}], LineBox[{71, 35}], LineBox[{72, 36}], 
       LineBox[{73, 37}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       PointBox[{74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 
        89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 
        105, 106, 107, 108, 109, 110}]}, {}}}], {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Time\"", TraditionalForm], 
    FormBox["\"Temperature\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Temperature from time calculating parabolic fit\"", TraditionalForm],
  PlotRange->{{0, 301.4116330267933}, {0, 0.10737035112287989`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7271774791194925`*^9, 3.7379091540980544`*^9, 
  3.7379097040134773`*^9, 3.7379097344166613`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "KineticsFitAll", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", 
    RowBox[{"PrependTo", "[", 
     RowBox[{
      RowBox[{"KineticsFitAll", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"DataOrigins", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "<>", "\"\< Time\>\""}], ",", 
        RowBox[{
         RowBox[{"DataOrigins", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "<>", "\"\< Temperature\>\""}]}], 
       "}"}]}], "]"}]}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Adding", " ", "headers", " ", "for", " ", "columns"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"KineticsFitAll", " ", "=", " ", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"KineticsFitAll", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "KineticsFitAll", "]"}]}], "}"}]}], "]"}]}], 
   ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Transposing", " ", "for", " ", "joining"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tmp", "=", 
    RowBox[{"KineticsFitAll", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Join", " ", "starting", " ", "point"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "2"}], ",", 
     RowBox[{"i", "\[LessEqual]", 
      RowBox[{"Length", "[", "KineticsFitAll", "]"}]}], ",", 
     RowBox[{"i", "++"}], ",", 
     RowBox[{"tmp", "=", 
      RowBox[{"tmp", "~", "Join", "~", 
       RowBox[{"KineticsFitAll", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}]}]}], "]"}], ";"}], 
  RowBox[{"(*", " ", "Joining", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"KineticsFitAll", "=", "tmp"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Saving", " ", "joined", " ", "result"}], " ", 
   "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.720504460770048*^9, 3.7205045278821115`*^9}, {
  3.7205045598974204`*^9, 3.7205045601726584`*^9}, {3.720504609770506*^9, 
  3.720504669183258*^9}, {3.7271772152303915`*^9, 3.7271772458236284`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "exportDir", ",", 
        "\"\<KineticsFitAll.png\>\""}], "}"}], "]"}], ",", "FitKineticsPlt"}],
     "]"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Exporting", " ", "plot"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "exportDir", ",", 
        "\"\<KineticsFitAll.xlsx\>\""}], "}"}], "]"}], ",", 
     "KineticsFitAll"}], "]"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Exporting", " ", "calculated", " ", "data"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KineticsFitAll", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], ",", "exportDir", ",", 
         "\"\<KineticsFitAll.xlsx\>\""}], "}"}], "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "exportDir", ",", 
        "\"\<KineticsFitAll.xlsx\>\""}], "}"}], "]"}], ",", 
     "KineticsFitAll"}], "]"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Exporting", " ", "calculated", " ", "data", " ", "in", " ", "a", " ", 
    "normal", " ", "format"}], " ", "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7205040515963497`*^9, 3.720504054624488*^9}, 
   3.7205046025573797`*^9, {3.720504671809866*^9, 3.7205046909628115`*^9}, 
   3.7271738924037104`*^9, {3.7271742312296066`*^9, 3.727174271049771*^9}, {
   3.727177250207694*^9, 3.7271772677157516`*^9}}]
},
WindowSize->{1366, 685},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 515, 11, 87, "Text"],
Cell[1076, 33, 226, 6, 47, "Input"],
Cell[1305, 41, 1024, 26, 104, "Input"],
Cell[2332, 69, 1888, 46, 145, "Input"],
Cell[4223, 117, 565, 13, 30, "Input"],
Cell[4791, 132, 522, 11, 30, "Input"],
Cell[5316, 145, 1104, 26, 105, "Input"],
Cell[6423, 173, 2011, 52, 143, "Input"],
Cell[8437, 227, 4125, 97, 347, "Input"],
Cell[12565, 326, 3414, 85, 272, "Input"],
Cell[CellGroupData[{
Cell[16004, 415, 1383, 31, 124, "Input"],
Cell[17390, 448, 27896, 483, 243, "Output"]
}, Open  ]],
Cell[45301, 934, 2720, 84, 237, "Input"],
Cell[48024, 1020, 8436, 197, 569, "Input"],
Cell[CellGroupData[{
Cell[56485, 1221, 1022, 21, 84, "Input"],
Cell[57510, 1244, 3529, 70, 382, "Output"]
}, Open  ]],
Cell[61054, 1317, 2351, 67, 180, "Input"],
Cell[63408, 1386, 1955, 53, 179, "Input"],
Cell[65366, 1441, 17188, 370, 1520, "Input"],
Cell[CellGroupData[{
Cell[82579, 1815, 851, 19, 84, "Input"],
Cell[83433, 1836, 3764, 73, 382, "Output"]
}, Open  ]],
Cell[87212, 1912, 2401, 67, 180, "Input"],
Cell[89616, 1981, 2007, 54, 179, "Input"]
}
]
*)

